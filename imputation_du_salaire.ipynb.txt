{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ce notebook vise à expérimenter l'imputation du salaire dans l'enquête Emploi à l'aide de réseaux de neurones.\n",
    "\n",
    "Il est composé de cinq parties :\n",
    "1. Préambule\n",
    "2. Dataprep\n",
    "\n",
    "Cette partie inclut notamment la vectorisation des nomenclature à l'aide de l'algorithme Word2Vec implémenté dans le package Gensim.\n",
    "\n",
    "3. Entraînement du réseau de neurone\n",
    "\n",
    "A l'aide des packages Tensorflow et Keras. La partie inclut la mise en forme des inputs, la sélection des features et labels, le split test-train, et quelques éléments d'optimisation des hyperparamètres.\n",
    "\n",
    "4. Métriques de performance\n",
    "\n",
    "Y compris les effets de l'imputation par réseau de neurones en termes de réduction du biais de non réponse, via l'exploitation des réponses en tranche.\n",
    "\n",
    "5. Comparaisons avec des modèles linéaires\n",
    "\n",
    "Plusieurs modèles sont estimés, inspirés par un modèle de Mincer plus ou moins enrichi.\n",
    "\n",
    "Pour être utilisé ou adapté à votre propre usage, ce notebook peut demander plusieurs modifications. En particulier, les données exploitées sont les fichiers de production (base Z) de l'enquête Emploi, disponibles seulement en interne à l'Insee pour les personnes autorisées. Les fichiers \"FPR\" (fichiers de production et de recherche), accessibles via le CASD, peuvent être leur être substitués. Il conviendra alors d'adapter la liste des variables, certaines n'étant pas disponibles ou ayant un autre nom dans les fichiers FPR."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Préambule"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "import keras"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "import copy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gensim, logging\n",
    "\n",
    "logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import statsmodels.api as sm # import statsmodels \n",
    "import statsmodels.formula.api as smf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. DATAPREP"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.1 Nettoyage et construction de features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Importation des données"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Les noms des répertoires sont à modifier pour adapter à la structure de votre propre projet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "datapath = ''\n",
    "datapath_vec = ''\n",
    "modelpath = ''"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Importation et sauvegarde du dataframe principal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv(datapath+'salaires.csv', encoding=\"latin1\", dtype=object)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1531841, 95)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Importation des nomenclatures vectorisées"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pour gagner du temps, lorsque l'étape de dataprep est reconduite plusieurs fois, les nomenclatures déjà vectorisées (voir plus loin) peuvent être enregistrées. On peut également importer des nomenclatures vectorisées à partir d'autres sources statistiques.\n",
    "Ici, nous avons déjà vectorisé les nomenclatures des professions, des secteurs, et des départements français, à partir de l'ensemble des observations de l'enquête Emploi sur la période de l'échantillon d'entraînement (et non pas seulement les observations pour lesquelles on dispose d'un salaire).\n",
    "\n",
    "Si ces fichiers ne sont pas disponibles, les variables \"profession\", \"secteur\" et \"département\" seront vectorisée normalement dans la suite du script."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "profvec = pd.read_csv(datapath_vec+'profvec.csv', encoding=\"latin1\", sep=';', dtype=object)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "secvec = pd.read_csv(datapath_vec+'secvec.csv', encoding=\"latin1\", sep=';', dtype=object)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "depvec = pd.read_csv(datapath_vec+'depvec.csv', encoding=\"latin1\", sep=';', dtype=object)\n",
    "depvec[\"DNAI\"] = depvec[\"DEP\"]\n",
    "depvec[\"DEPPER\"] = depvec[\"DNAI\"]\n",
    "depvec[\"DEPMER\"] = depvec[\"DNAI\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Construction de features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Log des heures, Secteur, Age, Expérience dans l'emploi et expérience potentielle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[:,\"SECT\"] = [i[0:3] for i in data.loc[:,\"NAFN\"].astype(\"str\")]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"DATANT\"]==\".\",\"DATANT\"] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"FORDAT\"]==\".\",\"FORDAT\"] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "data[\"AGE\"] = data[\"ANNEE\"].astype(\"float\")-data[\"NAIA\"].astype(\"float\")\n",
    "data[\"EXPE\"] = data[\"ANNEE\"].astype(\"float\")-data[\"DATANT\"].astype(\"float\")\n",
    "data[\"EXPEPOT\"] = data[\"ANNEE\"].astype(\"float\")-data[\"FORDAT\"].astype(\"float\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"NAIM\"]==\"99\",\"NAIM\"] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "data[\"LHHC\"]=np.log(data[\"HHC\"].astype('float')+0.1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Merge des nomenclatures vectorisées"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.merge(profvec, how='left', on=\"P\")\n",
    "data = data.drop(columns=[\"Unnamed: 0\",\"label\",\"color\",\"size\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.merge(secvec, how='left', on=\"NAFN\")\n",
    "data = data.drop(columns=[\"Unnamed: 0\",\"size\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.merge(depvec[['DepA','DepB','DepC','DEP']], how='left', on=\"DEP\")\n",
    "data = data.merge(depvec[['DepA','DepB','DepC','DNAI']], how='left', on=\"DNAI\", suffixes=('','_DNAI'))\n",
    "data = data.merge(depvec[['DepA','DepB','DepC','DEPPER']], how='left', on=\"DEPPER\", suffixes=('','_DEPPER'))\n",
    "data = data.merge(depvec[['DepA','DepB','DepC','DEPMER']], how='left', on=\"DEPMER\", suffixes=('','_DEPMER'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1531841, 126)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "del(profvec, depvec, secvec)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "63"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On supprimera ces variables puisqu'on dispose maintenant de leur version vectorisée"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "already_vectorized=['P','NAFN','DEP', 'DNAI', 'DEPPER', 'DEPMER']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On supprime également la variable confidentielle \"prénom\", disponible dans les données de production mais inutile : des essais avec une version vectorisée du prénom n'apporte pas de gain de pouvoir prédictif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.drop(columns='PRENOM')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Construction de la variable à prédire"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"SALMEE\"]==\".\",\"SALMEE\"] = np.nan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On enlève les valeurs utilisées pour coder les refus et ne sait pas\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"SALMEE\"]==\"9999999\",\"SALMEE\"] = np.nan\n",
    "data.loc[data[\"SALMEE\"]==\"9999998\",\"SALMEE\"] = np.nan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ainsi des valeurs qui semblent correspondre à des erreurs des enquêteurs voulant coder le refus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"SALMEE\"]==\"999999\",\"SALMEE\"] = np.nan\n",
    "data.loc[data[\"SALMEE\"]==\"99999\",\"SALMEE\"] = np.nan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ainsi que les valeurs correspondant à 999 999 francs, ancienne valeur maximale de la variable,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"SALMEE\"]==\"152449\",\"SALMEE\"] = np.nan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On conserve, pour l'étape de préparation des données, les observations dont le salaire est manquant, car on exploitera ensuite les réponses par tranche des non-répondants en clair.\n",
    "\n",
    "Il faudra cependant supprimer ces lignes avant l'entraînement par le RN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "#data = data.dropna(subset=['SALMEE'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1531841, 125)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "data[\"SALMEE\"]=data[\"SALMEE\"].astype(\"float\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On reproduit le découpage des réponses en tranches à partir des salaires effectivement déclarés"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "data['SALMEET'] = pd.cut(data['SALMEE'],bins=[0,499,999,1249,1499,1999,2499,2999,4999,7999,float(\"inf\")]).astype('O')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On reconstruit le redressement de la variable SALRED de l'enquête Emploi : inclusion d'un douzième des primes annuelles et multiplication par 0.8 des salaires déclarés en brut"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "data[\"SALMEERED\"]=data[\"SALMEE\"].astype(\"float\")\n",
    "data[\"AUTPRIM\"]=(data[\"VALPRE\"].astype(\"float\")/12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[(data[\"PRIMS\"]==\"1\")&(0<data[\"VALPRE\"].astype(\"float\"))&(data[\"VALPRE\"].astype(\"float\")<999998),\"SALMEERED\"] = data[\"SALMEERED\"]+data[\"AUTPRIM\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "data.loc[data[\"TYPSAL\"]==\"2\",\"SALMEERED\"] = data[\"SALMEE\"].astype(\"float\")*(0.8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "datasave2 = copy.deepcopy(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2.2 Retraitement en réels et sélection des variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Le RN prend pour input des vecteurs réels sans valeurs manquantes. On doit imputer les valeurs manquantes et encoder les variables qualitatives en nombres réels. Pour cela, on distingue plusieurs types de variables (à la main). Les variables numériques seront retraitées pour les valeurs manquantes (imputation par la valeur minimum et ajout d'une indicatrice de valeur manquante). Parmi les variables qualitatives, on distingue les variables avec un grand nombre de modalités, à vectoriser."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Classement des variables en trois types (quanti, quali, à vectoriser)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.drop(columns=already_vectorized)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['SALMET',\n",
       " 'DDIPL',\n",
       " 'NAIM',\n",
       " 'NAIA',\n",
       " 'HH',\n",
       " 'HT',\n",
       " 'STATUT',\n",
       " 'CSE',\n",
       " 'ANNEE',\n",
       " 'SEXE',\n",
       " 'SALMEE',\n",
       " 'IDENT',\n",
       " 'ACTEU',\n",
       " 'EMPNBH',\n",
       " 'DATANT',\n",
       " 'DAMOIS',\n",
       " 'TRIM',\n",
       " 'DATDEB',\n",
       " 'RGA',\n",
       " 'SO',\n",
       " 'PNAI',\n",
       " 'NRESID',\n",
       " 'CODPCL',\n",
       " 'CSMERE',\n",
       " 'CSPERE',\n",
       " 'DNAIM',\n",
       " 'DNAIP',\n",
       " 'IMMI',\n",
       " 'PRIM',\n",
       " 'PRIMS',\n",
       " 'REG',\n",
       " 'REVENT',\n",
       " 'TPP',\n",
       " 'TPPRED',\n",
       " 'HATYEAR',\n",
       " 'SPE',\n",
       " 'NIVETD',\n",
       " 'TYPMEN',\n",
       " 'PAIMERCDET',\n",
       " 'PAIPERCDET',\n",
       " 'NBINDE',\n",
       " 'NBACTOC',\n",
       " 'NBENF18A',\n",
       " 'NBENF6A',\n",
       " 'NBENF3A',\n",
       " 'NBENF18MA',\n",
       " 'SALREDTR',\n",
       " 'RGI',\n",
       " 'CODNAFN',\n",
       " 'HHC',\n",
       " 'SALRED',\n",
       " 'NBCHOME',\n",
       " 'TYPVOIS',\n",
       " 'RDQ',\n",
       " 'AUTSAL',\n",
       " 'TYPSAL',\n",
       " 'DATDIP',\n",
       " 'PAIPER',\n",
       " 'PAIMER',\n",
       " 'AM2NB',\n",
       " 'CHPUB',\n",
       " 'CONTRA',\n",
       " 'FONCTC',\n",
       " 'NBTOT',\n",
       " 'TITC',\n",
       " 'VALPRE',\n",
       " 'OCCREF',\n",
       " 'CSPP',\n",
       " 'CSPM',\n",
       " 'QPRC',\n",
       " 'STAT2',\n",
       " 'FORDAT',\n",
       " 'DIPDET',\n",
       " 'DIPFIN',\n",
       " 'NIVFIN',\n",
       " 'NBACTOP',\n",
       " 'NBACTIF',\n",
       " 'NBENFIND',\n",
       " 'NBENFA18',\n",
       " 'NBENFA15',\n",
       " 'NBENFA10',\n",
       " 'NBENFA6',\n",
       " 'NBENFA3',\n",
       " 'NBENFA1',\n",
       " 'NBIND',\n",
       " 'TYPMEN21',\n",
       " 'TYPMEN7',\n",
       " 'CATAU2010',\n",
       " 'SECT',\n",
       " 'AGE',\n",
       " 'EXPE',\n",
       " 'EXPEPOT',\n",
       " 'LHHC',\n",
       " 'A',\n",
       " 'B',\n",
       " 'C',\n",
       " 'D',\n",
       " 'SectA',\n",
       " 'SectB',\n",
       " 'SectC',\n",
       " 'SectD',\n",
       " 'SectE',\n",
       " 'SectF',\n",
       " 'SectG',\n",
       " 'SectH',\n",
       " 'SectI',\n",
       " 'SectJ',\n",
       " 'DepA',\n",
       " 'DepB',\n",
       " 'DepC',\n",
       " 'DepA_DNAI',\n",
       " 'DepB_DNAI',\n",
       " 'DepC_DNAI',\n",
       " 'DepA_DEPPER',\n",
       " 'DepB_DEPPER',\n",
       " 'DepC_DEPPER',\n",
       " 'DepA_DEPMER',\n",
       " 'DepB_DEPMER',\n",
       " 'DepC_DEPMER',\n",
       " 'SALMEET',\n",
       " 'SALMEERED',\n",
       " 'AUTPRIM']"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "numlist = ['NAIM','NAIA','ANNEE','DAMOIS','DATANT','ANCA','DATDIP','NRESID','HHC','LHHC','NBTOT','FORDAT','AGE','EXPE',\n",
    "           'EXPEPOT','DDIPL','A','B','C','D','size_x','SALMEERED','SALMEE','CSPP','CSPM','SECT','DIPDET','CSE','SectA',\n",
    "           'SectB','SectC','SectD','SectE','SectF','SectG','SectH','SectI','SectJ','size_y','DepA','DepB','DepC',\n",
    "           'DepA_DNAI','DepB_DNAI','DepC_DNAI','DepA_DEPPER','DepB_DEPPER','DepC_DEPPER','DepA_DEPMER','DepB_DEPMER',\n",
    "           'DepC_DEPMER','HH','HT','HATYEAR','EMPNBH','SALRED','VALPRE','AUTPRIM','NBINDE','NBACTOC','NBENF18A','NBENF6A','NBENF3A',\n",
    "           'NBENF18MA','NBCHOME','NBACTOP','NBACTIF','NBENFIND','NBENFA18','NBENFA15','NBENFA10','NBENFA6','NBENFA3',\n",
    "           'NBENFA1','NBIND']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "numl = [i for i in data.columns if i in numlist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "objl = [i for i in data.columns if (i not in numl)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "novectl = ['IDENT','SALMEE','SALMET']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On classe dans la catégorie \"à vectoriser\" toutes les variables qualitatives avec 20 modalités ou plus, qu'on considère dès lors comme des \"nomenclatures\". Ce seuil peut bien sûr être modifié."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "vectl = [i for i in data.columns if (data[i].nunique()>=20)\n",
    "         &(i not in numl+novectl)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['DATDEB',\n",
       " 'PNAI',\n",
       " 'CODPCL',\n",
       " 'CSMERE',\n",
       " 'CSPERE',\n",
       " 'DNAIM',\n",
       " 'DNAIP',\n",
       " 'REG',\n",
       " 'SPE',\n",
       " 'PAIMERCDET',\n",
       " 'PAIPERCDET',\n",
       " 'CODNAFN',\n",
       " 'PAIPER',\n",
       " 'PAIMER',\n",
       " 'DIPFIN',\n",
       " 'NIVFIN']"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vectl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "outl = [i for i in data.columns if (i not in numl)&(i not in objl)&(i not in vectl)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outl"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sélection de variable selon les modèles"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Colonnes pour un modèle de Mincer sans les nomenclatures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincercola = ['NAIM', 'NAIA', 'STATUT', 'CSE', 'DDIPL', 'ANNEE',\n",
    "       'SEXE', 'ACTEU', 'LHHC', 'DATANT', 'DAMOIS',\n",
    "       'RGA', 'PRIM', 'PRIMS', 'REVENT',\n",
    "       'AUTSAL', 'TYPSAL', 'DATDIP', 'AM2NB', 'CHPUB',\n",
    "       'CONTRA', 'FONCTC', 'NBTOT', 'TITC', 'TPP', 'OCCREF',\n",
    "       'QPRC', 'TPPRED', 'IMMI', 'FORDAT',\n",
    "       'SECT', 'AGE', 'EXPE', 'EXPEPOT', 'SALMEERED','TRIM']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Colonnes pour un modèle de Mincer avec les nomenclatures à dummifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincercolb = ['NAIM', 'NAIA', 'STATUT', 'CSE', 'DDIPL', 'ANNEE',\n",
    "       'SEXE', 'ACTEU', 'LHHC', 'DATANT', 'DAMOIS',\n",
    "       'RGA', 'CSPP', 'PRIM', 'PRIMS', 'REVENT', 'DNAI',\n",
    "       'AUTSAL', 'TYPSAL', 'DATDIP', 'AM2NB', 'CHPUB',\n",
    "       'CONTRA', 'FONCTC', 'NBTOT', 'TITC', 'TPP', 'OCCREF', 'CSPM',\n",
    "       'QPRC', 'TPPRED', 'IMMI', 'FORDAT', 'DIPDET',\n",
    "       'SECT', 'AGE', 'EXPE', 'EXPEPOT', 'SALMEERED', 'P','NAFN','DEP','DEPPER','DEPMER','TRIM']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Colonnes pour un modèle de Mincer proche des variables de SALRED"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincercolc = ['NAIM', 'NAIA', 'STATUT', 'CSE', 'DDIPL', 'ANNEE',\n",
    "       'SEXE', 'ACTEU', 'LHHC', \n",
    "       'RGA', 'PRIM', 'PRIMS',\n",
    "       'AUTSAL', 'TYPSAL', 'DATDIP', 'AM2NB', 'CHPUB',\n",
    "       'CONTRA', 'FONCTC', 'NBTOT', 'TITC', 'TPP', 'OCCREF',\n",
    "       'QPRC', 'TPPRED', 'FORDAT',\n",
    "       'SECT', 'AGE', 'EXPE', 'EXPEPOT', 'SALMEERED','TRIM']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Traitement des valeurs manquantes : indicatrices pour les var quanti, nouvelles catégories pour les var quali"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "def replace_num_nans(df,col):\n",
    "    '''\n",
    "    Arguments :\n",
    "    df : the dataframe to process\n",
    "    col : the column to transform\n",
    "    '''\n",
    "    if df[col].notnull().any():\n",
    "        mini=df[col].astype('float').min()\n",
    "        newcol = col+\"_nan\"\n",
    "        df[newcol] = 0\n",
    "        df.loc[df[col].isnull() , newcol] = 1\n",
    "        df.loc[df[col].isnull() , col] = mini\n",
    "    else: df = df.drop(columns = col)\n",
    "    return df\n",
    "\n",
    "    \n",
    "def replace_nans(df, numl, objl):\n",
    "    '''\n",
    "    Arguments :\n",
    "    df : the dataframe to process\n",
    "    num_col_list : list of col names that are to be numerical columns\n",
    "    obj_col_list : list of col names that are to be object columns\n",
    "    '''\n",
    "    num_col_list = [i for i in df.columns if i in numl]\n",
    "    obj_col_list = [i for i in df.columns if i in objl]\n",
    "    print(\"replacing nan in...\")\n",
    "    print(\"numerical column...\")\n",
    "    for col in num_col_list:\n",
    "        print(col)\n",
    "        if df[col].dtype == 'float':\n",
    "            if df[col].isnull().any():\n",
    "                df = replace_num_nans(df,col)\n",
    "        elif df[col].dtype == 'O':\n",
    "            df.loc[:,col] = pd.to_numeric(df[col], errors='coerce')\n",
    "            if df[col].isnull().any():\n",
    "                df = replace_num_nans(df,col)\n",
    "    print(\"categorical column...\")\n",
    "    for col in obj_col_list:\n",
    "        print(col)\n",
    "        df.loc[df[col].isnull(), col] = \"new_nan\"\n",
    "    return df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Vectorisation des variables catégorielles de cardinalité élevée"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "def vectorize_col(df, col, dim=8, groupident=\"IDENT\"):\n",
    "    '''\n",
    "    groups categories in \"sentences\" and then uses gensim word2vec to vectorize the \"vocabulary\" of categories\n",
    "    Arguments :\n",
    "    df  : the dataframe with the col to vectorize and the index to group lines\n",
    "    col : the column to vectorize\n",
    "    groupident (string) : the name of the column to group obs and build \"sentences\" \n",
    "    dim : the dimension of the encoding vector\n",
    "    '''\n",
    "    if col==groupident: \n",
    "        print(\"Error : column to vectorize and group ident column are the same\")\n",
    "    print(\"Starting to vectorize column\", col)\n",
    "    savecol = df[col]\n",
    "    df[col]=df[col].astype(str)\n",
    "    sentences = df.groupby([groupident])[col].unique()\n",
    "    sentences = sentences.transform(lambda x: x.tolist()).tolist()\n",
    "    model = gensim.models.Word2Vec(sentences, min_count=1, vector_size=dim)\n",
    "    All = list(np.unique(df[col]))\n",
    "    Pcoord=([list(model.wv[i]) for i in All])\n",
    "    colvec = pd.DataFrame(Pcoord)\n",
    "    colvec = colvec.set_axis([col+'_vec'+str(x) for x in (range(dim))], axis=1, inplace=False)\n",
    "    colvec[col] = All\n",
    "    df[col]=savecol\n",
    "    return colvec\n",
    "\n",
    "def col2vec(df, vectl, groupident=\"IDENT\", dim=8):\n",
    "    '''\n",
    "    Applies vectorize_col to all columns in a list (vectl)\n",
    "    Arguments :\n",
    "    df (pandas dataframe) : the dataframe with the columns to vectorize and the index to group lines\n",
    "    vectl (list of strings) : the list of column names to vectorize\n",
    "    groupident (string) : the name of the column to group obs and build \"sentences\" \n",
    "    dim (int) : the dimension of the encoding vector\n",
    "    '''\n",
    "    vect_col_list = [i for i in df.columns if i in vectl]\n",
    "    colnum = len(vect_col_list)\n",
    "    i = 0\n",
    "    for col in vect_col_list:\n",
    "        print(i, \"/\", colnum, \" columns vectorized\")\n",
    "        i = i+1\n",
    "        df = df.merge(vectorize_col(df, col, dim=dim, groupident=groupident), how='left', on=col)\n",
    "        df = df.drop(columns=col)\n",
    "    return df "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Encodage OneHot des var quali de cardinalité faible"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "def oneHotEncode(df,colNames):\n",
    "    col_list = [i for i in df.columns if i in colNames]\n",
    "    print(\"OneHotEncoding column...\")\n",
    "    for col in col_list:\n",
    "        if( df[col].dtype == np.dtype('object')):\n",
    "            if df[col].nunique()<2000:\n",
    "                print(col)\n",
    "                dummies = pd.get_dummies(df[col],prefix=col)\n",
    "                df = pd.concat([df,dummies],axis=1)\n",
    "\n",
    "                #drop the encoded column\n",
    "                df.drop([col],axis = 1 , inplace=True)\n",
    "            else :\n",
    "                print('Column {} not encoded : number of unique values too large'.format(col))\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1531841, 122)\n",
      "replacing nan in...\n",
      "numerical column...\n",
      "DDIPL\n",
      "NAIM\n",
      "NAIA\n",
      "HH\n",
      "HT\n",
      "CSE\n",
      "ANNEE\n",
      "SALMEE\n",
      "EMPNBH\n",
      "DATANT\n",
      "DAMOIS\n",
      "NRESID\n",
      "HATYEAR\n",
      "NBINDE\n",
      "NBACTOC\n",
      "NBENF18A\n",
      "NBENF6A\n",
      "NBENF3A\n",
      "NBENF18MA\n",
      "HHC\n",
      "SALRED\n",
      "NBCHOME\n",
      "DATDIP\n",
      "NBTOT\n",
      "VALPRE\n",
      "CSPP\n",
      "CSPM\n",
      "FORDAT\n",
      "DIPDET\n",
      "NBACTOP\n",
      "NBACTIF\n",
      "NBENFIND\n",
      "NBENFA18\n",
      "NBENFA15\n",
      "NBENFA10\n",
      "NBENFA6\n",
      "NBENFA3\n",
      "NBENFA1\n",
      "NBIND\n",
      "SECT\n",
      "AGE\n",
      "EXPE\n",
      "EXPEPOT\n",
      "LHHC\n",
      "A\n",
      "B\n",
      "C\n",
      "D\n",
      "SectA\n",
      "SectB\n",
      "SectC\n",
      "SectD\n",
      "SectE\n",
      "SectF\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Y:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\ipykernel_launcher.py:10: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`\n",
      "  # Remove the CWD from sys.path while we load stuff.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SectG\n",
      "SectH\n",
      "SectI\n",
      "SectJ\n",
      "DepA\n",
      "DepB\n",
      "DepC\n",
      "DepA_DNAI\n",
      "DepB_DNAI\n",
      "DepC_DNAI\n",
      "DepA_DEPPER\n",
      "DepB_DEPPER\n",
      "DepC_DEPPER\n",
      "DepA_DEPMER\n",
      "DepB_DEPMER\n",
      "DepC_DEPMER\n",
      "SALMEERED\n",
      "AUTPRIM\n",
      "categorical column...\n",
      "SALMET\n",
      "STATUT\n",
      "SEXE\n",
      "IDENT\n",
      "ACTEU\n",
      "TRIM\n",
      "DATDEB\n",
      "RGA\n",
      "SO\n",
      "PNAI\n",
      "CODPCL\n",
      "CSMERE\n",
      "CSPERE\n",
      "DNAIM\n",
      "DNAIP\n",
      "IMMI\n",
      "PRIM\n",
      "PRIMS\n",
      "REG\n",
      "REVENT\n",
      "TPP\n",
      "TPPRED\n",
      "SPE\n",
      "NIVETD\n",
      "TYPMEN\n",
      "PAIMERCDET\n",
      "PAIPERCDET\n",
      "SALREDTR\n",
      "RGI\n",
      "CODNAFN\n",
      "TYPVOIS\n",
      "RDQ\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "PAIPER\n",
      "PAIMER\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "OCCREF\n",
      "QPRC\n",
      "STAT2\n",
      "DIPFIN\n",
      "NIVFIN\n",
      "TYPMEN21\n",
      "TYPMEN7\n",
      "CATAU2010\n",
      "SALMEET\n",
      "(1531841, 191)\n"
     ]
    }
   ],
   "source": [
    "print(data.shape)\n",
    "data = replace_nans(data, numl, objl)\n",
    "newdata = data.copy()\n",
    "data = newdata\n",
    "print(data.shape)\n",
    "del(newdata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([], dtype='object')"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns[data.isnull().any()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 / 16  columns vectorized\n",
      "Starting to vectorize column DATDEB\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:43:45,052 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:43:45,054 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:43:45,068 : INFO : PROGRESS: at sentence #10000, processed 14299 words, keeping 440 word types\n",
      "2022-10-04 17:43:45,076 : INFO : PROGRESS: at sentence #20000, processed 28371 words, keeping 456 word types\n",
      "2022-10-04 17:43:45,082 : INFO : PROGRESS: at sentence #30000, processed 42701 words, keeping 458 word types\n",
      "2022-10-04 17:43:45,088 : INFO : PROGRESS: at sentence #40000, processed 57951 words, keeping 458 word types\n",
      "2022-10-04 17:43:45,094 : INFO : PROGRESS: at sentence #50000, processed 71906 words, keeping 458 word types\n",
      "2022-10-04 17:43:45,105 : INFO : PROGRESS: at sentence #60000, processed 87987 words, keeping 458 word types\n",
      "2022-10-04 17:43:45,114 : INFO : PROGRESS: at sentence #70000, processed 104182 words, keeping 458 word types\n",
      "2022-10-04 17:43:45,121 : INFO : PROGRESS: at sentence #80000, processed 120521 words, keeping 573 word types\n",
      "2022-10-04 17:43:45,127 : INFO : PROGRESS: at sentence #90000, processed 137862 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,135 : INFO : PROGRESS: at sentence #100000, processed 155133 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,142 : INFO : PROGRESS: at sentence #110000, processed 172508 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,149 : INFO : PROGRESS: at sentence #120000, processed 189938 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,158 : INFO : PROGRESS: at sentence #130000, processed 207347 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,167 : INFO : PROGRESS: at sentence #140000, processed 224741 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,173 : INFO : PROGRESS: at sentence #150000, processed 242132 words, keeping 588 word types\n",
      "2022-10-04 17:43:45,181 : INFO : PROGRESS: at sentence #160000, processed 259076 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,188 : INFO : PROGRESS: at sentence #170000, processed 275293 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,194 : INFO : PROGRESS: at sentence #180000, processed 291452 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,200 : INFO : PROGRESS: at sentence #190000, processed 307629 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,207 : INFO : PROGRESS: at sentence #200000, processed 323792 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,215 : INFO : PROGRESS: at sentence #210000, processed 340019 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,222 : INFO : PROGRESS: at sentence #220000, processed 356098 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,228 : INFO : PROGRESS: at sentence #230000, processed 372244 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,235 : INFO : PROGRESS: at sentence #240000, processed 388369 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,242 : INFO : PROGRESS: at sentence #250000, processed 404534 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,250 : INFO : PROGRESS: at sentence #260000, processed 420715 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,257 : INFO : PROGRESS: at sentence #270000, processed 436830 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,265 : INFO : PROGRESS: at sentence #280000, processed 453021 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,277 : INFO : PROGRESS: at sentence #290000, processed 469210 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,284 : INFO : PROGRESS: at sentence #300000, processed 485457 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,291 : INFO : PROGRESS: at sentence #310000, processed 501604 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,298 : INFO : PROGRESS: at sentence #320000, processed 517799 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,306 : INFO : PROGRESS: at sentence #330000, processed 533878 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,315 : INFO : PROGRESS: at sentence #340000, processed 550068 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,322 : INFO : PROGRESS: at sentence #350000, processed 565864 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,329 : INFO : PROGRESS: at sentence #360000, processed 581536 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,336 : INFO : PROGRESS: at sentence #370000, processed 597405 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,342 : INFO : PROGRESS: at sentence #380000, processed 613396 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,349 : INFO : PROGRESS: at sentence #390000, processed 629546 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,355 : INFO : PROGRESS: at sentence #400000, processed 645737 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,361 : INFO : PROGRESS: at sentence #410000, processed 661883 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,370 : INFO : PROGRESS: at sentence #420000, processed 678064 words, keeping 941 word types\n",
      "2022-10-04 17:43:45,374 : INFO : collected 941 word types from a corpus of 689186 raw words and 426850 sentences\n",
      "2022-10-04 17:43:45,375 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:43:45,380 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 941 unique words (100.0%% of original 941, drops 0)', 'datetime': '2022-10-04T17:43:45.380714', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:43:45,381 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 689186 word corpus (100.0%% of original 689186, drops 0)', 'datetime': '2022-10-04T17:43:45.381714', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:43:45,390 : INFO : deleting the raw counts dictionary of 941 items\n",
      "2022-10-04 17:43:45,392 : INFO : sample=0.001 downsamples 1 most-common words\n",
      "2022-10-04 17:43:45,393 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 679123.6053756678 word corpus (98.5%% of prior 689186)', 'datetime': '2022-10-04T17:43:45.393714', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:43:45,409 : INFO : estimated required memory for 941 words and 2 dimensions: 485556 bytes\n",
      "2022-10-04 17:43:45,410 : INFO : resetting layer weights\n",
      "2022-10-04 17:43:45,417 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:43:45.417714', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:43:45,418 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 941 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:43:45.418714', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:43:46,400 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:43:46,404 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:43:46,405 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:43:46,406 : INFO : EPOCH - 1 : training on 689186 raw words (679086 effective words) took 1.0s, 697387 effective words/s\n",
      "2022-10-04 17:43:47,267 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:43:47,278 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:43:47,280 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:43:47,281 : INFO : EPOCH - 2 : training on 689186 raw words (679176 effective words) took 0.9s, 785365 effective words/s\n",
      "2022-10-04 17:43:48,175 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:43:48,177 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:43:48,183 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:43:48,184 : INFO : EPOCH - 3 : training on 689186 raw words (679071 effective words) took 0.9s, 762815 effective words/s\n",
      "2022-10-04 17:43:49,044 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:43:49,051 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:43:49,053 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:43:49,055 : INFO : EPOCH - 4 : training on 689186 raw words (679110 effective words) took 0.9s, 789780 effective words/s\n",
      "2022-10-04 17:43:49,937 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:43:49,939 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:43:49,943 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:43:49,944 : INFO : EPOCH - 5 : training on 689186 raw words (679140 effective words) took 0.9s, 774081 effective words/s\n",
      "2022-10-04 17:43:49,946 : INFO : Word2Vec lifecycle event {'msg': 'training on 3445930 raw words (3395583 effective words) took 4.5s, 750019 effective words/s', 'datetime': '2022-10-04T17:43:49.946731', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:43:49,947 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=941, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:43:49.947731', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 / 16  columns vectorized\n",
      "Starting to vectorize column PNAI\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:45:05,338 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:45:05,340 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:45:05,352 : INFO : PROGRESS: at sentence #10000, processed 10453 words, keeping 101 word types\n",
      "2022-10-04 17:45:05,362 : INFO : PROGRESS: at sentence #20000, processed 20832 words, keeping 123 word types\n",
      "2022-10-04 17:45:05,368 : INFO : PROGRESS: at sentence #30000, processed 31288 words, keeping 133 word types\n",
      "2022-10-04 17:45:05,374 : INFO : PROGRESS: at sentence #40000, processed 41821 words, keeping 149 word types\n",
      "2022-10-04 17:45:05,380 : INFO : PROGRESS: at sentence #50000, processed 52236 words, keeping 155 word types\n",
      "2022-10-04 17:45:05,387 : INFO : PROGRESS: at sentence #60000, processed 62890 words, keeping 158 word types\n",
      "2022-10-04 17:45:05,392 : INFO : PROGRESS: at sentence #70000, processed 73539 words, keeping 163 word types\n",
      "2022-10-04 17:45:05,398 : INFO : PROGRESS: at sentence #80000, processed 84232 words, keeping 167 word types\n",
      "2022-10-04 17:45:05,404 : INFO : PROGRESS: at sentence #90000, processed 94883 words, keeping 173 word types\n",
      "2022-10-04 17:45:05,410 : INFO : PROGRESS: at sentence #100000, processed 105526 words, keeping 183 word types\n",
      "2022-10-04 17:45:05,416 : INFO : PROGRESS: at sentence #110000, processed 116162 words, keeping 190 word types\n",
      "2022-10-04 17:45:05,421 : INFO : PROGRESS: at sentence #120000, processed 126822 words, keeping 198 word types\n",
      "2022-10-04 17:45:05,427 : INFO : PROGRESS: at sentence #130000, processed 137501 words, keeping 200 word types\n",
      "2022-10-04 17:45:05,433 : INFO : PROGRESS: at sentence #140000, processed 148163 words, keeping 203 word types\n",
      "2022-10-04 17:45:05,440 : INFO : PROGRESS: at sentence #150000, processed 158796 words, keeping 204 word types\n",
      "2022-10-04 17:45:05,447 : INFO : PROGRESS: at sentence #160000, processed 169405 words, keeping 204 word types\n",
      "2022-10-04 17:45:05,453 : INFO : PROGRESS: at sentence #170000, processed 179980 words, keeping 204 word types\n",
      "2022-10-04 17:45:05,459 : INFO : PROGRESS: at sentence #180000, processed 190583 words, keeping 204 word types\n",
      "2022-10-04 17:45:05,465 : INFO : PROGRESS: at sentence #190000, processed 201163 words, keeping 207 word types\n",
      "2022-10-04 17:45:05,471 : INFO : PROGRESS: at sentence #200000, processed 211704 words, keeping 210 word types\n",
      "2022-10-04 17:45:05,478 : INFO : PROGRESS: at sentence #210000, processed 222272 words, keeping 211 word types\n",
      "2022-10-04 17:45:05,484 : INFO : PROGRESS: at sentence #220000, processed 232852 words, keeping 213 word types\n",
      "2022-10-04 17:45:05,490 : INFO : PROGRESS: at sentence #230000, processed 243390 words, keeping 216 word types\n",
      "2022-10-04 17:45:05,496 : INFO : PROGRESS: at sentence #240000, processed 253962 words, keeping 217 word types\n",
      "2022-10-04 17:45:05,502 : INFO : PROGRESS: at sentence #250000, processed 264559 words, keeping 220 word types\n",
      "2022-10-04 17:45:05,514 : INFO : PROGRESS: at sentence #260000, processed 275141 words, keeping 223 word types\n",
      "2022-10-04 17:45:05,521 : INFO : PROGRESS: at sentence #270000, processed 285754 words, keeping 223 word types\n",
      "2022-10-04 17:45:05,530 : INFO : PROGRESS: at sentence #280000, processed 296353 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,535 : INFO : PROGRESS: at sentence #290000, processed 306940 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,545 : INFO : PROGRESS: at sentence #300000, processed 317535 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,551 : INFO : PROGRESS: at sentence #310000, processed 328080 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,557 : INFO : PROGRESS: at sentence #320000, processed 338648 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,563 : INFO : PROGRESS: at sentence #330000, processed 349207 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,569 : INFO : PROGRESS: at sentence #340000, processed 359813 words, keeping 225 word types\n",
      "2022-10-04 17:45:05,574 : INFO : PROGRESS: at sentence #350000, processed 370226 words, keeping 226 word types\n",
      "2022-10-04 17:45:05,580 : INFO : PROGRESS: at sentence #360000, processed 380629 words, keeping 229 word types\n",
      "2022-10-04 17:45:05,586 : INFO : PROGRESS: at sentence #370000, processed 391208 words, keeping 230 word types\n",
      "2022-10-04 17:45:05,592 : INFO : PROGRESS: at sentence #380000, processed 401876 words, keeping 232 word types\n",
      "2022-10-04 17:45:05,598 : INFO : PROGRESS: at sentence #390000, processed 412503 words, keeping 232 word types\n",
      "2022-10-04 17:45:05,604 : INFO : PROGRESS: at sentence #400000, processed 423159 words, keeping 233 word types\n",
      "2022-10-04 17:45:05,610 : INFO : PROGRESS: at sentence #410000, processed 433774 words, keeping 233 word types\n",
      "2022-10-04 17:45:05,616 : INFO : PROGRESS: at sentence #420000, processed 444397 words, keeping 233 word types\n",
      "2022-10-04 17:45:05,620 : INFO : collected 233 word types from a corpus of 451683 raw words and 426850 sentences\n",
      "2022-10-04 17:45:05,621 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:45:05,623 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 233 unique words (100.0%% of original 233, drops 0)', 'datetime': '2022-10-04T17:45:05.623647', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:45:05,624 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 451683 word corpus (100.0%% of original 451683, drops 0)', 'datetime': '2022-10-04T17:45:05.624646', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:45:05,627 : INFO : deleting the raw counts dictionary of 233 items\n",
      "2022-10-04 17:45:05,628 : INFO : sample=0.001 downsamples 14 most-common words\n",
      "2022-10-04 17:45:05,628 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 59427.884589594825 word corpus (13.2%% of prior 451683)', 'datetime': '2022-10-04T17:45:05.628646', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:45:05,632 : INFO : estimated required memory for 233 words and 2 dimensions: 120228 bytes\n",
      "2022-10-04 17:45:05,633 : INFO : resetting layer weights\n",
      "2022-10-04 17:45:05,634 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:45:05.634649', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:45:05,635 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 233 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:45:05.635648', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:45:06,370 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:45:06,374 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:45:06,376 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:45:06,377 : INFO : EPOCH - 1 : training on 451683 raw words (59690 effective words) took 0.7s, 82714 effective words/s\n",
      "2022-10-04 17:45:07,106 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:45:07,108 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:45:07,110 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:45:07,113 : INFO : EPOCH - 2 : training on 451683 raw words (59451 effective words) took 0.7s, 82113 effective words/s\n",
      "2022-10-04 17:45:07,852 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:45:07,856 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:45:07,858 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:45:07,859 : INFO : EPOCH - 3 : training on 451683 raw words (59459 effective words) took 0.7s, 80743 effective words/s\n",
      "2022-10-04 17:45:08,645 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:45:08,647 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:45:08,648 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:45:08,649 : INFO : EPOCH - 4 : training on 451683 raw words (59298 effective words) took 0.8s, 76046 effective words/s\n",
      "2022-10-04 17:45:09,370 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:45:09,375 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:45:09,376 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:45:09,378 : INFO : EPOCH - 5 : training on 451683 raw words (59005 effective words) took 0.7s, 82147 effective words/s\n",
      "2022-10-04 17:45:09,379 : INFO : Word2Vec lifecycle event {'msg': 'training on 2258415 raw words (296903 effective words) took 3.7s, 79320 effective words/s', 'datetime': '2022-10-04T17:45:09.379644', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:45:09,382 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=233, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:45:09.382642', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 / 16  columns vectorized\n",
      "Starting to vectorize column CODPCL\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:46:24,431 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:46:24,433 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:46:24,446 : INFO : PROGRESS: at sentence #10000, processed 14318 words, keeping 422 word types\n",
      "2022-10-04 17:46:24,454 : INFO : PROGRESS: at sentence #20000, processed 28274 words, keeping 438 word types\n",
      "2022-10-04 17:46:24,463 : INFO : PROGRESS: at sentence #30000, processed 42526 words, keeping 447 word types\n",
      "2022-10-04 17:46:24,470 : INFO : PROGRESS: at sentence #40000, processed 57648 words, keeping 459 word types\n",
      "2022-10-04 17:46:24,479 : INFO : PROGRESS: at sentence #50000, processed 71726 words, keeping 465 word types\n",
      "2022-10-04 17:46:24,486 : INFO : PROGRESS: at sentence #60000, processed 87867 words, keeping 471 word types\n",
      "2022-10-04 17:46:24,494 : INFO : PROGRESS: at sentence #70000, processed 103790 words, keeping 475 word types\n",
      "2022-10-04 17:46:24,503 : INFO : PROGRESS: at sentence #80000, processed 120112 words, keeping 475 word types\n",
      "2022-10-04 17:46:24,510 : INFO : PROGRESS: at sentence #90000, processed 138075 words, keeping 476 word types\n",
      "2022-10-04 17:46:24,517 : INFO : PROGRESS: at sentence #100000, processed 156031 words, keeping 478 word types\n",
      "2022-10-04 17:46:24,525 : INFO : PROGRESS: at sentence #110000, processed 174004 words, keeping 478 word types\n",
      "2022-10-04 17:46:24,532 : INFO : PROGRESS: at sentence #120000, processed 191885 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,539 : INFO : PROGRESS: at sentence #130000, processed 209950 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,546 : INFO : PROGRESS: at sentence #140000, processed 228096 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,553 : INFO : PROGRESS: at sentence #150000, processed 246026 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,562 : INFO : PROGRESS: at sentence #160000, processed 261772 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,567 : INFO : PROGRESS: at sentence #170000, processed 271885 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,573 : INFO : PROGRESS: at sentence #180000, processed 282006 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,578 : INFO : PROGRESS: at sentence #190000, processed 292105 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,583 : INFO : PROGRESS: at sentence #200000, processed 302196 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,588 : INFO : PROGRESS: at sentence #210000, processed 312293 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,594 : INFO : PROGRESS: at sentence #220000, processed 322412 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,602 : INFO : PROGRESS: at sentence #230000, processed 332588 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,607 : INFO : PROGRESS: at sentence #240000, processed 342717 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,612 : INFO : PROGRESS: at sentence #250000, processed 352813 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,618 : INFO : PROGRESS: at sentence #260000, processed 362884 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,623 : INFO : PROGRESS: at sentence #270000, processed 372959 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,628 : INFO : PROGRESS: at sentence #280000, processed 383048 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,636 : INFO : PROGRESS: at sentence #290000, processed 393156 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,642 : INFO : PROGRESS: at sentence #300000, processed 403286 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,647 : INFO : PROGRESS: at sentence #310000, processed 413481 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,653 : INFO : PROGRESS: at sentence #320000, processed 423646 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,659 : INFO : PROGRESS: at sentence #330000, processed 433811 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,669 : INFO : PROGRESS: at sentence #340000, processed 445423 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,679 : INFO : PROGRESS: at sentence #350000, processed 457128 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,685 : INFO : PROGRESS: at sentence #360000, processed 468167 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,693 : INFO : PROGRESS: at sentence #370000, processed 482600 words, keeping 479 word types\n",
      "2022-10-04 17:46:24,700 : INFO : PROGRESS: at sentence #380000, processed 498545 words, keeping 480 word types\n",
      "2022-10-04 17:46:24,708 : INFO : PROGRESS: at sentence #390000, processed 514473 words, keeping 480 word types\n",
      "2022-10-04 17:46:24,719 : INFO : PROGRESS: at sentence #400000, processed 530600 words, keeping 481 word types\n",
      "2022-10-04 17:46:24,726 : INFO : PROGRESS: at sentence #410000, processed 546549 words, keeping 481 word types\n",
      "2022-10-04 17:46:24,733 : INFO : PROGRESS: at sentence #420000, processed 562551 words, keeping 482 word types\n",
      "2022-10-04 17:46:24,739 : INFO : collected 482 word types from a corpus of 573524 raw words and 426850 sentences\n",
      "2022-10-04 17:46:24,740 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:46:24,743 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 482 unique words (100.0%% of original 482, drops 0)', 'datetime': '2022-10-04T17:46:24.743565', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:46:24,744 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 573524 word corpus (100.0%% of original 573524, drops 0)', 'datetime': '2022-10-04T17:46:24.744567', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:46:24,748 : INFO : deleting the raw counts dictionary of 482 items\n",
      "2022-10-04 17:46:24,749 : INFO : sample=0.001 downsamples 58 most-common words\n",
      "2022-10-04 17:46:24,750 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 283092.9311880767 word corpus (49.4%% of prior 573524)', 'datetime': '2022-10-04T17:46:24.750575', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:46:24,757 : INFO : estimated required memory for 482 words and 2 dimensions: 248712 bytes\n",
      "2022-10-04 17:46:24,758 : INFO : resetting layer weights\n",
      "2022-10-04 17:46:24,759 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:46:24.759564', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:46:24,760 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 482 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:46:24.760566', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:46:25,579 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:46:25,581 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:46:25,583 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:46:25,585 : INFO : EPOCH - 1 : training on 573524 raw words (283024 effective words) took 0.8s, 352817 effective words/s\n",
      "2022-10-04 17:46:26,341 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:46:26,344 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:46:26,346 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:46:26,348 : INFO : EPOCH - 2 : training on 573524 raw words (283160 effective words) took 0.8s, 376180 effective words/s\n",
      "2022-10-04 17:46:27,143 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:46:27,146 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:46:27,148 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:46:27,150 : INFO : EPOCH - 3 : training on 573524 raw words (283085 effective words) took 0.8s, 358290 effective words/s\n",
      "2022-10-04 17:46:27,945 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:46:27,947 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:46:27,950 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:46:27,951 : INFO : EPOCH - 4 : training on 573524 raw words (283277 effective words) took 0.8s, 357770 effective words/s\n",
      "2022-10-04 17:46:28,734 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:46:28,737 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:46:28,739 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:46:28,741 : INFO : EPOCH - 5 : training on 573524 raw words (283166 effective words) took 0.8s, 364281 effective words/s\n",
      "2022-10-04 17:46:28,743 : INFO : Word2Vec lifecycle event {'msg': 'training on 2867620 raw words (1415712 effective words) took 4.0s, 355544 effective words/s', 'datetime': '2022-10-04T17:46:28.743570', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:46:28,745 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=482, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:46:28.745577', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 / 16  columns vectorized\n",
      "Starting to vectorize column CSMERE\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:47:43,564 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:47:43,566 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:47:43,572 : INFO : PROGRESS: at sentence #10000, processed 10236 words, keeping 30 word types\n",
      "2022-10-04 17:47:43,584 : INFO : PROGRESS: at sentence #20000, processed 20466 words, keeping 36 word types\n",
      "2022-10-04 17:47:43,591 : INFO : PROGRESS: at sentence #30000, processed 30697 words, keeping 37 word types\n",
      "2022-10-04 17:47:43,596 : INFO : PROGRESS: at sentence #40000, processed 40978 words, keeping 37 word types\n",
      "2022-10-04 17:47:43,602 : INFO : PROGRESS: at sentence #50000, processed 51216 words, keeping 39 word types\n",
      "2022-10-04 17:47:43,607 : INFO : PROGRESS: at sentence #60000, processed 61589 words, keeping 40 word types\n",
      "2022-10-04 17:47:43,613 : INFO : PROGRESS: at sentence #70000, processed 71942 words, keeping 41 word types\n",
      "2022-10-04 17:47:43,618 : INFO : PROGRESS: at sentence #80000, processed 82264 words, keeping 42 word types\n",
      "2022-10-04 17:47:43,626 : INFO : PROGRESS: at sentence #90000, processed 92593 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,635 : INFO : PROGRESS: at sentence #100000, processed 102911 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,644 : INFO : PROGRESS: at sentence #110000, processed 113208 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,651 : INFO : PROGRESS: at sentence #120000, processed 123542 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,657 : INFO : PROGRESS: at sentence #130000, processed 133826 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,664 : INFO : PROGRESS: at sentence #140000, processed 144110 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,671 : INFO : PROGRESS: at sentence #150000, processed 154391 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,677 : INFO : PROGRESS: at sentence #160000, processed 164608 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,683 : INFO : PROGRESS: at sentence #170000, processed 174614 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,688 : INFO : PROGRESS: at sentence #180000, processed 184623 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,693 : INFO : PROGRESS: at sentence #190000, processed 194629 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,699 : INFO : PROGRESS: at sentence #200000, processed 204636 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,705 : INFO : PROGRESS: at sentence #210000, processed 214639 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,711 : INFO : PROGRESS: at sentence #220000, processed 224647 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,716 : INFO : PROGRESS: at sentence #230000, processed 234654 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,722 : INFO : PROGRESS: at sentence #240000, processed 244659 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,729 : INFO : PROGRESS: at sentence #250000, processed 254665 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,736 : INFO : PROGRESS: at sentence #260000, processed 264668 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,741 : INFO : PROGRESS: at sentence #270000, processed 274671 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,747 : INFO : PROGRESS: at sentence #280000, processed 284677 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,752 : INFO : PROGRESS: at sentence #290000, processed 294681 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,760 : INFO : PROGRESS: at sentence #300000, processed 304688 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,766 : INFO : PROGRESS: at sentence #310000, processed 314699 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,772 : INFO : PROGRESS: at sentence #320000, processed 324704 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,777 : INFO : PROGRESS: at sentence #330000, processed 334711 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,783 : INFO : PROGRESS: at sentence #340000, processed 344807 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,788 : INFO : PROGRESS: at sentence #350000, processed 354918 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,794 : INFO : PROGRESS: at sentence #360000, processed 364953 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,800 : INFO : PROGRESS: at sentence #370000, processed 375209 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,806 : INFO : PROGRESS: at sentence #380000, processed 385560 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,813 : INFO : PROGRESS: at sentence #390000, processed 395871 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,818 : INFO : PROGRESS: at sentence #400000, processed 406262 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,826 : INFO : PROGRESS: at sentence #410000, processed 416604 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,834 : INFO : PROGRESS: at sentence #420000, processed 426942 words, keeping 43 word types\n",
      "2022-10-04 17:47:43,838 : INFO : collected 43 word types from a corpus of 434026 raw words and 426850 sentences\n",
      "2022-10-04 17:47:43,847 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:47:43,849 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 43 unique words (100.0%% of original 43, drops 0)', 'datetime': '2022-10-04T17:47:43.848516', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:47:43,850 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 434026 word corpus (100.0%% of original 434026, drops 0)', 'datetime': '2022-10-04T17:47:43.850515', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:47:43,851 : INFO : deleting the raw counts dictionary of 43 items\n",
      "2022-10-04 17:47:43,852 : INFO : sample=0.001 downsamples 2 most-common words\n",
      "2022-10-04 17:47:43,852 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 21862.68193278872 word corpus (5.0%% of prior 434026)', 'datetime': '2022-10-04T17:47:43.852516', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:47:43,854 : INFO : estimated required memory for 43 words and 2 dimensions: 22188 bytes\n",
      "2022-10-04 17:47:43,855 : INFO : resetting layer weights\n",
      "2022-10-04 17:47:43,856 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:47:43.856519', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:47:43,856 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 43 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:47:43.856519', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:47:44,544 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:47:44,546 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:47:44,548 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:47:44,548 : INFO : EPOCH - 1 : training on 434026 raw words (22005 effective words) took 0.7s, 32225 effective words/s\n",
      "2022-10-04 17:47:45,219 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:47:45,222 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:47:45,224 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:47:45,226 : INFO : EPOCH - 2 : training on 434026 raw words (21778 effective words) took 0.7s, 32728 effective words/s\n",
      "2022-10-04 17:47:45,895 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:47:45,897 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:47:45,899 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:47:45,900 : INFO : EPOCH - 3 : training on 434026 raw words (21665 effective words) took 0.7s, 32694 effective words/s\n",
      "2022-10-04 17:47:46,565 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:47:46,572 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:47:46,573 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:47:46,574 : INFO : EPOCH - 4 : training on 434026 raw words (21863 effective words) took 0.7s, 33084 effective words/s\n",
      "2022-10-04 17:47:47,213 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:47:47,217 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:47:47,219 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:47:47,221 : INFO : EPOCH - 5 : training on 434026 raw words (21951 effective words) took 0.6s, 34628 effective words/s\n",
      "2022-10-04 17:47:47,222 : INFO : Word2Vec lifecycle event {'msg': 'training on 2170130 raw words (109262 effective words) took 3.4s, 32468 effective words/s', 'datetime': '2022-10-04T17:47:47.222525', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:47:47,224 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=43, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:47:47.224514', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 / 16  columns vectorized\n",
      "Starting to vectorize column CSPERE\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:49:01,450 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:49:01,452 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:49:01,462 : INFO : PROGRESS: at sentence #10000, processed 10178 words, keeping 34 word types\n",
      "2022-10-04 17:49:01,473 : INFO : PROGRESS: at sentence #20000, processed 20361 words, keeping 38 word types\n",
      "2022-10-04 17:49:01,481 : INFO : PROGRESS: at sentence #30000, processed 30555 words, keeping 38 word types\n",
      "2022-10-04 17:49:01,488 : INFO : PROGRESS: at sentence #40000, processed 40778 words, keeping 40 word types\n",
      "2022-10-04 17:49:01,493 : INFO : PROGRESS: at sentence #50000, processed 50963 words, keeping 40 word types\n",
      "2022-10-04 17:49:01,499 : INFO : PROGRESS: at sentence #60000, processed 61267 words, keeping 40 word types\n",
      "2022-10-04 17:49:01,506 : INFO : PROGRESS: at sentence #70000, processed 71560 words, keeping 40 word types\n",
      "2022-10-04 17:49:01,515 : INFO : PROGRESS: at sentence #80000, processed 81813 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,520 : INFO : PROGRESS: at sentence #90000, processed 92070 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,527 : INFO : PROGRESS: at sentence #100000, processed 102326 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,532 : INFO : PROGRESS: at sentence #110000, processed 112565 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,538 : INFO : PROGRESS: at sentence #120000, processed 122816 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,544 : INFO : PROGRESS: at sentence #130000, processed 133041 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,550 : INFO : PROGRESS: at sentence #140000, processed 143280 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,555 : INFO : PROGRESS: at sentence #150000, processed 153505 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,561 : INFO : PROGRESS: at sentence #160000, processed 163669 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,566 : INFO : PROGRESS: at sentence #170000, processed 173671 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,572 : INFO : PROGRESS: at sentence #180000, processed 183680 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,580 : INFO : PROGRESS: at sentence #190000, processed 193685 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,585 : INFO : PROGRESS: at sentence #200000, processed 203691 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,591 : INFO : PROGRESS: at sentence #210000, processed 213693 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,596 : INFO : PROGRESS: at sentence #220000, processed 223698 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,602 : INFO : PROGRESS: at sentence #230000, processed 233702 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,607 : INFO : PROGRESS: at sentence #240000, processed 243706 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,612 : INFO : PROGRESS: at sentence #250000, processed 253709 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,618 : INFO : PROGRESS: at sentence #260000, processed 263713 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,623 : INFO : PROGRESS: at sentence #270000, processed 273715 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,629 : INFO : PROGRESS: at sentence #280000, processed 283722 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,634 : INFO : PROGRESS: at sentence #290000, processed 293725 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,640 : INFO : PROGRESS: at sentence #300000, processed 303731 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,645 : INFO : PROGRESS: at sentence #310000, processed 313740 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,651 : INFO : PROGRESS: at sentence #320000, processed 323745 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,656 : INFO : PROGRESS: at sentence #330000, processed 333751 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,662 : INFO : PROGRESS: at sentence #340000, processed 343833 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,671 : INFO : PROGRESS: at sentence #350000, processed 353931 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,676 : INFO : PROGRESS: at sentence #360000, processed 363957 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,681 : INFO : PROGRESS: at sentence #370000, processed 374173 words, keeping 41 word types\n",
      "2022-10-04 17:49:01,687 : INFO : PROGRESS: at sentence #380000, processed 384446 words, keeping 42 word types\n",
      "2022-10-04 17:49:01,693 : INFO : PROGRESS: at sentence #390000, processed 394689 words, keeping 42 word types\n",
      "2022-10-04 17:49:01,698 : INFO : PROGRESS: at sentence #400000, processed 405008 words, keeping 42 word types\n",
      "2022-10-04 17:49:01,704 : INFO : PROGRESS: at sentence #410000, processed 415278 words, keeping 42 word types\n",
      "2022-10-04 17:49:01,711 : INFO : PROGRESS: at sentence #420000, processed 425556 words, keeping 42 word types\n",
      "2022-10-04 17:49:01,715 : INFO : collected 42 word types from a corpus of 432601 raw words and 426850 sentences\n",
      "2022-10-04 17:49:01,716 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:49:01,717 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 42 unique words (100.0%% of original 42, drops 0)', 'datetime': '2022-10-04T17:49:01.717460', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:49:01,718 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 432601 word corpus (100.0%% of original 432601, drops 0)', 'datetime': '2022-10-04T17:49:01.718456', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:49:01,720 : INFO : deleting the raw counts dictionary of 42 items\n",
      "2022-10-04 17:49:01,722 : INFO : sample=0.001 downsamples 1 most-common words\n",
      "2022-10-04 17:49:01,723 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 20286.09874964084 word corpus (4.7%% of prior 432601)', 'datetime': '2022-10-04T17:49:01.723450', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:49:01,725 : INFO : estimated required memory for 42 words and 2 dimensions: 21672 bytes\n",
      "2022-10-04 17:49:01,725 : INFO : resetting layer weights\n",
      "2022-10-04 17:49:01,727 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:49:01.727456', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:49:01,728 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 42 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:49:01.728453', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:49:02,426 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:49:02,433 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:49:02,436 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:49:02,438 : INFO : EPOCH - 1 : training on 432601 raw words (20253 effective words) took 0.7s, 29477 effective words/s\n",
      "2022-10-04 17:49:03,120 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:49:03,124 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:49:03,126 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:49:03,127 : INFO : EPOCH - 2 : training on 432601 raw words (20393 effective words) took 0.7s, 30047 effective words/s\n",
      "2022-10-04 17:49:03,795 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:49:03,798 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:49:03,799 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:49:03,800 : INFO : EPOCH - 3 : training on 432601 raw words (20358 effective words) took 0.7s, 30771 effective words/s\n",
      "2022-10-04 17:49:04,462 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:49:04,467 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:49:04,468 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:49:04,469 : INFO : EPOCH - 4 : training on 432601 raw words (20284 effective words) took 0.7s, 30814 effective words/s\n",
      "2022-10-04 17:49:05,114 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:49:05,117 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:49:05,119 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:49:05,120 : INFO : EPOCH - 5 : training on 432601 raw words (20379 effective words) took 0.6s, 31841 effective words/s\n",
      "2022-10-04 17:49:05,121 : INFO : Word2Vec lifecycle event {'msg': 'training on 2163005 raw words (101667 effective words) took 3.4s, 29973 effective words/s', 'datetime': '2022-10-04T17:49:05.121445', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:49:05,122 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=42, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:49:05.122450', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5 / 16  columns vectorized\n",
      "Starting to vectorize column DNAIM\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:50:19,313 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:50:19,315 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:50:19,327 : INFO : PROGRESS: at sentence #10000, processed 11949 words, keeping 103 word types\n",
      "2022-10-04 17:50:19,336 : INFO : PROGRESS: at sentence #20000, processed 23756 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,343 : INFO : PROGRESS: at sentence #30000, processed 35608 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,349 : INFO : PROGRESS: at sentence #40000, processed 47827 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,355 : INFO : PROGRESS: at sentence #50000, processed 59472 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,361 : INFO : PROGRESS: at sentence #60000, processed 72145 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,367 : INFO : PROGRESS: at sentence #70000, processed 84806 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,373 : INFO : PROGRESS: at sentence #80000, processed 97939 words, keeping 104 word types\n",
      "2022-10-04 17:50:19,380 : INFO : PROGRESS: at sentence #90000, processed 112835 words, keeping 105 word types\n",
      "2022-10-04 17:50:19,388 : INFO : PROGRESS: at sentence #100000, processed 127639 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,395 : INFO : PROGRESS: at sentence #110000, processed 142564 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,401 : INFO : PROGRESS: at sentence #120000, processed 157432 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,416 : INFO : PROGRESS: at sentence #130000, processed 172310 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,424 : INFO : PROGRESS: at sentence #140000, processed 187316 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,431 : INFO : PROGRESS: at sentence #150000, processed 202253 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,436 : INFO : PROGRESS: at sentence #160000, processed 215788 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,442 : INFO : PROGRESS: at sentence #170000, processed 225851 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,449 : INFO : PROGRESS: at sentence #180000, processed 235896 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,454 : INFO : PROGRESS: at sentence #190000, processed 245935 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,462 : INFO : PROGRESS: at sentence #200000, processed 255969 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,467 : INFO : PROGRESS: at sentence #210000, processed 266007 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,473 : INFO : PROGRESS: at sentence #220000, processed 276041 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,479 : INFO : PROGRESS: at sentence #230000, processed 286104 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,484 : INFO : PROGRESS: at sentence #240000, processed 296157 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,490 : INFO : PROGRESS: at sentence #250000, processed 306192 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,496 : INFO : PROGRESS: at sentence #260000, processed 316236 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,502 : INFO : PROGRESS: at sentence #270000, processed 326267 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,507 : INFO : PROGRESS: at sentence #280000, processed 336311 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,513 : INFO : PROGRESS: at sentence #290000, processed 346359 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,518 : INFO : PROGRESS: at sentence #300000, processed 356414 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,524 : INFO : PROGRESS: at sentence #310000, processed 366498 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,530 : INFO : PROGRESS: at sentence #320000, processed 376577 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,535 : INFO : PROGRESS: at sentence #330000, processed 386663 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,541 : INFO : PROGRESS: at sentence #340000, processed 397374 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,547 : INFO : PROGRESS: at sentence #350000, processed 408149 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,560 : INFO : PROGRESS: at sentence #360000, processed 418606 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,566 : INFO : PROGRESS: at sentence #370000, processed 430528 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,572 : INFO : PROGRESS: at sentence #380000, processed 443122 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,578 : INFO : PROGRESS: at sentence #390000, processed 455615 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,585 : INFO : PROGRESS: at sentence #400000, processed 468284 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,591 : INFO : PROGRESS: at sentence #410000, processed 480900 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,596 : INFO : PROGRESS: at sentence #420000, processed 493544 words, keeping 106 word types\n",
      "2022-10-04 17:50:19,601 : INFO : collected 106 word types from a corpus of 502229 raw words and 426850 sentences\n",
      "2022-10-04 17:50:19,602 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:50:19,603 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 106 unique words (100.0%% of original 106, drops 0)', 'datetime': '2022-10-04T17:50:19.603420', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:50:19,605 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 502229 word corpus (100.0%% of original 502229, drops 0)', 'datetime': '2022-10-04T17:50:19.605428', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:50:19,606 : INFO : deleting the raw counts dictionary of 106 items\n",
      "2022-10-04 17:50:19,607 : INFO : sample=0.001 downsamples 55 most-common words\n",
      "2022-10-04 17:50:19,608 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 138919.52070628075 word corpus (27.7%% of prior 502229)', 'datetime': '2022-10-04T17:50:19.608429', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:50:19,610 : INFO : estimated required memory for 106 words and 2 dimensions: 54696 bytes\n",
      "2022-10-04 17:50:19,612 : INFO : resetting layer weights\n",
      "2022-10-04 17:50:19,613 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:50:19.613428', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:50:19,614 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 106 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:50:19.614431', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:50:20,485 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:50:20,486 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:50:20,487 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:50:20,488 : INFO : EPOCH - 1 : training on 502229 raw words (139106 effective words) took 0.9s, 162808 effective words/s\n",
      "2022-10-04 17:50:21,193 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:50:21,197 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:50:21,199 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:50:21,201 : INFO : EPOCH - 2 : training on 502229 raw words (138913 effective words) took 0.7s, 197587 effective words/s\n",
      "2022-10-04 17:50:21,840 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:50:21,842 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:50:21,844 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:50:21,845 : INFO : EPOCH - 3 : training on 502229 raw words (139161 effective words) took 0.6s, 220029 effective words/s\n",
      "2022-10-04 17:50:22,545 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:50:22,549 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:50:22,552 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:50:22,553 : INFO : EPOCH - 4 : training on 502229 raw words (138772 effective words) took 0.7s, 199823 effective words/s\n",
      "2022-10-04 17:50:23,268 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:50:23,272 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:50:23,274 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:50:23,277 : INFO : EPOCH - 5 : training on 502229 raw words (138842 effective words) took 0.7s, 195279 effective words/s\n",
      "2022-10-04 17:50:23,278 : INFO : Word2Vec lifecycle event {'msg': 'training on 2511145 raw words (694794 effective words) took 3.7s, 189678 effective words/s', 'datetime': '2022-10-04T17:50:23.278428', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:50:23,281 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=106, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:50:23.281425', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6 / 16  columns vectorized\n",
      "Starting to vectorize column DNAIP\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:51:35,595 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:51:35,597 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:51:35,604 : INFO : PROGRESS: at sentence #10000, processed 11945 words, keeping 103 word types\n",
      "2022-10-04 17:51:35,611 : INFO : PROGRESS: at sentence #20000, processed 23749 words, keeping 103 word types\n",
      "2022-10-04 17:51:35,617 : INFO : PROGRESS: at sentence #30000, processed 35574 words, keeping 103 word types\n",
      "2022-10-04 17:51:35,624 : INFO : PROGRESS: at sentence #40000, processed 47757 words, keeping 103 word types\n",
      "2022-10-04 17:51:35,635 : INFO : PROGRESS: at sentence #50000, processed 59406 words, keeping 103 word types\n",
      "2022-10-04 17:51:35,642 : INFO : PROGRESS: at sentence #60000, processed 72129 words, keeping 103 word types\n",
      "2022-10-04 17:51:35,653 : INFO : PROGRESS: at sentence #70000, processed 84805 words, keeping 104 word types\n",
      "2022-10-04 17:51:35,661 : INFO : PROGRESS: at sentence #80000, processed 97906 words, keeping 105 word types\n",
      "2022-10-04 17:51:35,667 : INFO : PROGRESS: at sentence #90000, processed 112744 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,679 : INFO : PROGRESS: at sentence #100000, processed 127540 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,685 : INFO : PROGRESS: at sentence #110000, processed 142416 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,693 : INFO : PROGRESS: at sentence #120000, processed 157213 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,699 : INFO : PROGRESS: at sentence #130000, processed 172080 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,706 : INFO : PROGRESS: at sentence #140000, processed 187042 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,713 : INFO : PROGRESS: at sentence #150000, processed 201952 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,719 : INFO : PROGRESS: at sentence #160000, processed 215423 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,725 : INFO : PROGRESS: at sentence #170000, processed 225478 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,730 : INFO : PROGRESS: at sentence #180000, processed 235524 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,735 : INFO : PROGRESS: at sentence #190000, processed 245568 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,743 : INFO : PROGRESS: at sentence #200000, processed 255602 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,750 : INFO : PROGRESS: at sentence #210000, processed 265647 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,755 : INFO : PROGRESS: at sentence #220000, processed 275681 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,761 : INFO : PROGRESS: at sentence #230000, processed 285744 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,766 : INFO : PROGRESS: at sentence #240000, processed 295800 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,771 : INFO : PROGRESS: at sentence #250000, processed 305847 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,783 : INFO : PROGRESS: at sentence #260000, processed 315887 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,791 : INFO : PROGRESS: at sentence #270000, processed 325918 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,796 : INFO : PROGRESS: at sentence #280000, processed 335958 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,801 : INFO : PROGRESS: at sentence #290000, processed 346009 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,808 : INFO : PROGRESS: at sentence #300000, processed 356057 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,814 : INFO : PROGRESS: at sentence #310000, processed 366132 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,821 : INFO : PROGRESS: at sentence #320000, processed 376197 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,826 : INFO : PROGRESS: at sentence #330000, processed 386288 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,833 : INFO : PROGRESS: at sentence #340000, processed 396997 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,838 : INFO : PROGRESS: at sentence #350000, processed 407783 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,843 : INFO : PROGRESS: at sentence #360000, processed 418249 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,851 : INFO : PROGRESS: at sentence #370000, processed 430197 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,859 : INFO : PROGRESS: at sentence #380000, processed 442737 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,865 : INFO : PROGRESS: at sentence #390000, processed 455224 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,871 : INFO : PROGRESS: at sentence #400000, processed 467926 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,877 : INFO : PROGRESS: at sentence #410000, processed 480578 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,882 : INFO : PROGRESS: at sentence #420000, processed 493202 words, keeping 106 word types\n",
      "2022-10-04 17:51:35,888 : INFO : collected 106 word types from a corpus of 501841 raw words and 426850 sentences\n",
      "2022-10-04 17:51:35,889 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:51:35,892 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 106 unique words (100.0%% of original 106, drops 0)', 'datetime': '2022-10-04T17:51:35.891383', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:51:35,893 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 501841 word corpus (100.0%% of original 501841, drops 0)', 'datetime': '2022-10-04T17:51:35.893392', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:51:35,895 : INFO : deleting the raw counts dictionary of 106 items\n",
      "2022-10-04 17:51:35,896 : INFO : sample=0.001 downsamples 55 most-common words\n",
      "2022-10-04 17:51:35,897 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 136792.10693388118 word corpus (27.3%% of prior 501841)', 'datetime': '2022-10-04T17:51:35.897393', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:51:35,899 : INFO : estimated required memory for 106 words and 2 dimensions: 54696 bytes\n",
      "2022-10-04 17:51:35,900 : INFO : resetting layer weights\n",
      "2022-10-04 17:51:35,901 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:51:35.901392', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:51:35,902 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 106 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:51:35.902394', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:51:36,585 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:51:36,588 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:51:36,591 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:51:36,593 : INFO : EPOCH - 1 : training on 501841 raw words (136713 effective words) took 0.7s, 203466 effective words/s\n",
      "2022-10-04 17:51:37,348 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:51:37,351 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:51:37,352 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:51:37,353 : INFO : EPOCH - 2 : training on 501841 raw words (136847 effective words) took 0.8s, 182398 effective words/s\n",
      "2022-10-04 17:51:38,079 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:51:38,085 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:51:38,087 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:51:38,089 : INFO : EPOCH - 3 : training on 501841 raw words (136960 effective words) took 0.7s, 188731 effective words/s\n",
      "2022-10-04 17:51:38,829 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:51:38,831 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:51:38,833 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:51:38,834 : INFO : EPOCH - 4 : training on 501841 raw words (136701 effective words) took 0.7s, 186343 effective words/s\n",
      "2022-10-04 17:51:39,543 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:51:39,547 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:51:39,548 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:51:39,550 : INFO : EPOCH - 5 : training on 501841 raw words (136411 effective words) took 0.7s, 193126 effective words/s\n",
      "2022-10-04 17:51:39,553 : INFO : Word2Vec lifecycle event {'msg': 'training on 2509205 raw words (683632 effective words) took 3.6s, 187300 effective words/s', 'datetime': '2022-10-04T17:51:39.553390', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:51:39,554 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=106, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:51:39.554394', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7 / 16  columns vectorized\n",
      "Starting to vectorize column REG\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:52:52,347 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:52:52,349 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:52:52,363 : INFO : PROGRESS: at sentence #10000, processed 10000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,370 : INFO : PROGRESS: at sentence #20000, processed 20000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,376 : INFO : PROGRESS: at sentence #30000, processed 30000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,382 : INFO : PROGRESS: at sentence #40000, processed 40000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,387 : INFO : PROGRESS: at sentence #50000, processed 50000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,394 : INFO : PROGRESS: at sentence #60000, processed 60000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,400 : INFO : PROGRESS: at sentence #70000, processed 70000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,405 : INFO : PROGRESS: at sentence #80000, processed 80000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,411 : INFO : PROGRESS: at sentence #90000, processed 90000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,416 : INFO : PROGRESS: at sentence #100000, processed 100000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,422 : INFO : PROGRESS: at sentence #110000, processed 110000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,429 : INFO : PROGRESS: at sentence #120000, processed 120000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,435 : INFO : PROGRESS: at sentence #130000, processed 130000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,440 : INFO : PROGRESS: at sentence #140000, processed 140000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,446 : INFO : PROGRESS: at sentence #150000, processed 150000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,452 : INFO : PROGRESS: at sentence #160000, processed 160000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,460 : INFO : PROGRESS: at sentence #170000, processed 170000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,465 : INFO : PROGRESS: at sentence #180000, processed 180000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,474 : INFO : PROGRESS: at sentence #190000, processed 190000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,482 : INFO : PROGRESS: at sentence #200000, processed 200000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,488 : INFO : PROGRESS: at sentence #210000, processed 210000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,494 : INFO : PROGRESS: at sentence #220000, processed 220000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,500 : INFO : PROGRESS: at sentence #230000, processed 230000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,505 : INFO : PROGRESS: at sentence #240000, processed 240000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,511 : INFO : PROGRESS: at sentence #250000, processed 250000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,517 : INFO : PROGRESS: at sentence #260000, processed 260000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,522 : INFO : PROGRESS: at sentence #270000, processed 270000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,528 : INFO : PROGRESS: at sentence #280000, processed 280000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,533 : INFO : PROGRESS: at sentence #290000, processed 290000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,539 : INFO : PROGRESS: at sentence #300000, processed 300000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,544 : INFO : PROGRESS: at sentence #310000, processed 310000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,550 : INFO : PROGRESS: at sentence #320000, processed 320000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,555 : INFO : PROGRESS: at sentence #330000, processed 330000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,560 : INFO : PROGRESS: at sentence #340000, processed 340000 words, keeping 23 word types\n",
      "2022-10-04 17:52:52,566 : INFO : PROGRESS: at sentence #350000, processed 350000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,572 : INFO : PROGRESS: at sentence #360000, processed 360000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,578 : INFO : PROGRESS: at sentence #370000, processed 370000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,583 : INFO : PROGRESS: at sentence #380000, processed 380000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,589 : INFO : PROGRESS: at sentence #390000, processed 390000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,594 : INFO : PROGRESS: at sentence #400000, processed 400000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,600 : INFO : PROGRESS: at sentence #410000, processed 410000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,606 : INFO : PROGRESS: at sentence #420000, processed 420000 words, keeping 27 word types\n",
      "2022-10-04 17:52:52,610 : INFO : collected 27 word types from a corpus of 426850 raw words and 426850 sentences\n",
      "2022-10-04 17:52:52,611 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:52:52,612 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 27 unique words (100.0%% of original 27, drops 0)', 'datetime': '2022-10-04T17:52:52.612365', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:52:52,613 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 426850 word corpus (100.0%% of original 426850, drops 0)', 'datetime': '2022-10-04T17:52:52.613360', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:52:52,614 : INFO : deleting the raw counts dictionary of 27 items\n",
      "2022-10-04 17:52:52,615 : INFO : sample=0.001 downsamples 27 most-common words\n",
      "2022-10-04 17:52:52,616 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 77067.08209076565 word corpus (18.1%% of prior 426850)', 'datetime': '2022-10-04T17:52:52.616363', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:52:52,618 : INFO : estimated required memory for 27 words and 2 dimensions: 13932 bytes\n",
      "2022-10-04 17:52:52,619 : INFO : resetting layer weights\n",
      "2022-10-04 17:52:52,620 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:52:52.620363', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:52:52,621 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 27 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:52:52.621362', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:52:53,243 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:52:53,248 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:52:53,250 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:52:53,252 : INFO : EPOCH - 1 : training on 426850 raw words (76781 effective words) took 0.6s, 125532 effective words/s\n",
      "2022-10-04 17:52:53,953 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:52:53,958 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:52:53,960 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:52:53,962 : INFO : EPOCH - 2 : training on 426850 raw words (76635 effective words) took 0.7s, 109560 effective words/s\n",
      "2022-10-04 17:52:54,648 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:52:54,650 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:52:54,651 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:52:54,654 : INFO : EPOCH - 3 : training on 426850 raw words (76939 effective words) took 0.7s, 112727 effective words/s\n",
      "2022-10-04 17:52:55,341 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:52:55,345 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:52:55,347 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:52:55,348 : INFO : EPOCH - 4 : training on 426850 raw words (77355 effective words) took 0.7s, 113146 effective words/s\n",
      "2022-10-04 17:52:56,029 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:52:56,032 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:52:56,034 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:52:56,035 : INFO : EPOCH - 5 : training on 426850 raw words (76937 effective words) took 0.7s, 114046 effective words/s\n",
      "2022-10-04 17:52:56,036 : INFO : Word2Vec lifecycle event {'msg': 'training on 2134250 raw words (384647 effective words) took 3.4s, 112656 effective words/s', 'datetime': '2022-10-04T17:52:56.036346', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:52:56,037 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=27, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:52:56.037345', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8 / 16  columns vectorized\n",
      "Starting to vectorize column SPE\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:54:08,303 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:54:08,305 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:54:08,311 : INFO : PROGRESS: at sentence #10000, processed 13641 words, keeping 85 word types\n",
      "2022-10-04 17:54:08,318 : INFO : PROGRESS: at sentence #20000, processed 27006 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,325 : INFO : PROGRESS: at sentence #30000, processed 40575 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,331 : INFO : PROGRESS: at sentence #40000, processed 54910 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,337 : INFO : PROGRESS: at sentence #50000, processed 68280 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,343 : INFO : PROGRESS: at sentence #60000, processed 83451 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,349 : INFO : PROGRESS: at sentence #70000, processed 98453 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,356 : INFO : PROGRESS: at sentence #80000, processed 113341 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,362 : INFO : PROGRESS: at sentence #90000, processed 128410 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,369 : INFO : PROGRESS: at sentence #100000, processed 143530 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,376 : INFO : PROGRESS: at sentence #110000, processed 158623 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,382 : INFO : PROGRESS: at sentence #120000, processed 173693 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,397 : INFO : PROGRESS: at sentence #130000, processed 188848 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,406 : INFO : PROGRESS: at sentence #140000, processed 204005 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,413 : INFO : PROGRESS: at sentence #150000, processed 219163 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,419 : INFO : PROGRESS: at sentence #160000, processed 234199 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,425 : INFO : PROGRESS: at sentence #170000, processed 249095 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,432 : INFO : PROGRESS: at sentence #180000, processed 263902 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,439 : INFO : PROGRESS: at sentence #190000, processed 278723 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,445 : INFO : PROGRESS: at sentence #200000, processed 293449 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,453 : INFO : PROGRESS: at sentence #210000, processed 308338 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,460 : INFO : PROGRESS: at sentence #220000, processed 323192 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,466 : INFO : PROGRESS: at sentence #230000, processed 337948 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,472 : INFO : PROGRESS: at sentence #240000, processed 352677 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,479 : INFO : PROGRESS: at sentence #250000, processed 367576 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,488 : INFO : PROGRESS: at sentence #260000, processed 382290 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,495 : INFO : PROGRESS: at sentence #270000, processed 397164 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,501 : INFO : PROGRESS: at sentence #280000, processed 411960 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,508 : INFO : PROGRESS: at sentence #290000, processed 426812 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,514 : INFO : PROGRESS: at sentence #300000, processed 441805 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,521 : INFO : PROGRESS: at sentence #310000, processed 456713 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,527 : INFO : PROGRESS: at sentence #320000, processed 471556 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,533 : INFO : PROGRESS: at sentence #330000, processed 486459 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,540 : INFO : PROGRESS: at sentence #340000, processed 501332 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,547 : INFO : PROGRESS: at sentence #350000, processed 515206 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,553 : INFO : PROGRESS: at sentence #360000, processed 528758 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,559 : INFO : PROGRESS: at sentence #370000, processed 543304 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,566 : INFO : PROGRESS: at sentence #380000, processed 558288 words, keeping 86 word types\n",
      "2022-10-04 17:54:08,572 : INFO : PROGRESS: at sentence #390000, processed 573312 words, keeping 87 word types\n",
      "2022-10-04 17:54:08,578 : INFO : PROGRESS: at sentence #400000, processed 588490 words, keeping 87 word types\n",
      "2022-10-04 17:54:08,585 : INFO : PROGRESS: at sentence #410000, processed 603556 words, keeping 87 word types\n",
      "2022-10-04 17:54:08,591 : INFO : PROGRESS: at sentence #420000, processed 618581 words, keeping 88 word types\n",
      "2022-10-04 17:54:08,595 : INFO : collected 88 word types from a corpus of 628878 raw words and 426850 sentences\n",
      "2022-10-04 17:54:08,597 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:54:08,598 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 88 unique words (100.0%% of original 88, drops 0)', 'datetime': '2022-10-04T17:54:08.598328', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:54:08,599 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 628878 word corpus (100.0%% of original 628878, drops 0)', 'datetime': '2022-10-04T17:54:08.599328', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:54:08,601 : INFO : deleting the raw counts dictionary of 88 items\n",
      "2022-10-04 17:54:08,602 : INFO : sample=0.001 downsamples 54 most-common words\n",
      "2022-10-04 17:54:08,603 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 183177.82448079943 word corpus (29.1%% of prior 628878)', 'datetime': '2022-10-04T17:54:08.603331', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:54:08,605 : INFO : estimated required memory for 88 words and 2 dimensions: 45408 bytes\n",
      "2022-10-04 17:54:08,606 : INFO : resetting layer weights\n",
      "2022-10-04 17:54:08,608 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:54:08.608324', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:54:08,608 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 88 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:54:08.608324', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:54:09,382 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:54:09,387 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:54:09,388 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:54:09,389 : INFO : EPOCH - 1 : training on 628878 raw words (183574 effective words) took 0.8s, 240475 effective words/s\n",
      "2022-10-04 17:54:10,155 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:54:10,160 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:54:10,162 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:54:10,164 : INFO : EPOCH - 2 : training on 628878 raw words (183012 effective words) took 0.8s, 239883 effective words/s\n",
      "2022-10-04 17:54:10,954 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:54:10,960 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:54:10,962 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:54:10,964 : INFO : EPOCH - 3 : training on 628878 raw words (182834 effective words) took 0.8s, 231512 effective words/s\n",
      "2022-10-04 17:54:11,705 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:54:11,712 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:54:11,713 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:54:11,715 : INFO : EPOCH - 4 : training on 628878 raw words (183792 effective words) took 0.7s, 249028 effective words/s\n",
      "2022-10-04 17:54:12,475 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:54:12,479 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:54:12,481 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:54:12,482 : INFO : EPOCH - 5 : training on 628878 raw words (182960 effective words) took 0.8s, 241876 effective words/s\n",
      "2022-10-04 17:54:12,484 : INFO : Word2Vec lifecycle event {'msg': 'training on 3144390 raw words (916172 effective words) took 3.9s, 236465 effective words/s', 'datetime': '2022-10-04T17:54:12.484305', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:54:12,485 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=88, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:54:12.485304', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9 / 16  columns vectorized\n",
      "Starting to vectorize column PAIMERCDET\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:55:24,177 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:55:24,179 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:55:24,191 : INFO : PROGRESS: at sentence #10000, processed 10903 words, keeping 94 word types\n",
      "2022-10-04 17:55:24,200 : INFO : PROGRESS: at sentence #20000, processed 21719 words, keeping 118 word types\n",
      "2022-10-04 17:55:24,207 : INFO : PROGRESS: at sentence #30000, processed 32590 words, keeping 129 word types\n",
      "2022-10-04 17:55:24,213 : INFO : PROGRESS: at sentence #40000, processed 43656 words, keeping 140 word types\n",
      "2022-10-04 17:55:24,219 : INFO : PROGRESS: at sentence #50000, processed 54368 words, keeping 147 word types\n",
      "2022-10-04 17:55:24,225 : INFO : PROGRESS: at sentence #60000, processed 65692 words, keeping 153 word types\n",
      "2022-10-04 17:55:24,231 : INFO : PROGRESS: at sentence #70000, processed 76925 words, keeping 160 word types\n",
      "2022-10-04 17:55:24,237 : INFO : PROGRESS: at sentence #80000, processed 88764 words, keeping 164 word types\n",
      "2022-10-04 17:55:24,244 : INFO : PROGRESS: at sentence #90000, processed 102357 words, keeping 170 word types\n",
      "2022-10-04 17:55:24,251 : INFO : PROGRESS: at sentence #100000, processed 115837 words, keeping 185 word types\n",
      "2022-10-04 17:55:24,258 : INFO : PROGRESS: at sentence #110000, processed 129413 words, keeping 191 word types\n",
      "2022-10-04 17:55:24,266 : INFO : PROGRESS: at sentence #120000, processed 143012 words, keeping 201 word types\n",
      "2022-10-04 17:55:24,273 : INFO : PROGRESS: at sentence #130000, processed 156625 words, keeping 207 word types\n",
      "2022-10-04 17:55:24,280 : INFO : PROGRESS: at sentence #140000, processed 170387 words, keeping 209 word types\n",
      "2022-10-04 17:55:24,286 : INFO : PROGRESS: at sentence #150000, processed 183874 words, keeping 212 word types\n",
      "2022-10-04 17:55:24,292 : INFO : PROGRESS: at sentence #160000, processed 196389 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,298 : INFO : PROGRESS: at sentence #170000, processed 206412 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,304 : INFO : PROGRESS: at sentence #180000, processed 216434 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,311 : INFO : PROGRESS: at sentence #190000, processed 226449 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,316 : INFO : PROGRESS: at sentence #200000, processed 236471 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,322 : INFO : PROGRESS: at sentence #210000, processed 246497 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,327 : INFO : PROGRESS: at sentence #220000, processed 256519 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,333 : INFO : PROGRESS: at sentence #230000, processed 266550 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,338 : INFO : PROGRESS: at sentence #240000, processed 276576 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,344 : INFO : PROGRESS: at sentence #250000, processed 286599 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,349 : INFO : PROGRESS: at sentence #260000, processed 296621 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,356 : INFO : PROGRESS: at sentence #270000, processed 306637 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,362 : INFO : PROGRESS: at sentence #280000, processed 316662 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,367 : INFO : PROGRESS: at sentence #290000, processed 326679 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,373 : INFO : PROGRESS: at sentence #300000, processed 336695 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,378 : INFO : PROGRESS: at sentence #310000, processed 346731 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,386 : INFO : PROGRESS: at sentence #320000, processed 356764 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,392 : INFO : PROGRESS: at sentence #330000, processed 366790 words, keeping 214 word types\n",
      "2022-10-04 17:55:24,398 : INFO : PROGRESS: at sentence #340000, processed 377116 words, keeping 215 word types\n",
      "2022-10-04 17:55:24,403 : INFO : PROGRESS: at sentence #350000, processed 387479 words, keeping 215 word types\n",
      "2022-10-04 17:55:24,409 : INFO : PROGRESS: at sentence #360000, processed 397708 words, keeping 215 word types\n",
      "2022-10-04 17:55:24,416 : INFO : PROGRESS: at sentence #370000, processed 408606 words, keeping 217 word types\n",
      "2022-10-04 17:55:24,425 : INFO : PROGRESS: at sentence #380000, processed 419824 words, keeping 217 word types\n",
      "2022-10-04 17:55:24,431 : INFO : PROGRESS: at sentence #390000, processed 431010 words, keeping 220 word types\n",
      "2022-10-04 17:55:24,437 : INFO : PROGRESS: at sentence #400000, processed 442238 words, keeping 220 word types\n",
      "2022-10-04 17:55:24,443 : INFO : PROGRESS: at sentence #410000, processed 453410 words, keeping 220 word types\n",
      "2022-10-04 17:55:24,450 : INFO : PROGRESS: at sentence #420000, processed 464601 words, keeping 220 word types\n",
      "2022-10-04 17:55:24,454 : INFO : collected 220 word types from a corpus of 472269 raw words and 426850 sentences\n",
      "2022-10-04 17:55:24,455 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:55:24,458 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 220 unique words (100.0%% of original 220, drops 0)', 'datetime': '2022-10-04T17:55:24.458992', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:55:24,459 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 472269 word corpus (100.0%% of original 472269, drops 0)', 'datetime': '2022-10-04T17:55:24.459992', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:55:24,465 : INFO : deleting the raw counts dictionary of 220 items\n",
      "2022-10-04 17:55:24,466 : INFO : sample=0.001 downsamples 10 most-common words\n",
      "2022-10-04 17:55:24,468 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 48821.94983421984 word corpus (10.3%% of prior 472269)', 'datetime': '2022-10-04T17:55:24.468991', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:55:24,471 : INFO : estimated required memory for 220 words and 2 dimensions: 113520 bytes\n",
      "2022-10-04 17:55:24,473 : INFO : resetting layer weights\n",
      "2022-10-04 17:55:24,474 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:55:24.474993', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:55:24,475 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 220 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:55:24.475995', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:55:25,195 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:55:25,199 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:55:25,201 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:55:25,203 : INFO : EPOCH - 1 : training on 472269 raw words (48737 effective words) took 0.7s, 69025 effective words/s\n",
      "2022-10-04 17:55:25,909 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:55:25,913 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:55:25,915 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:55:25,917 : INFO : EPOCH - 2 : training on 472269 raw words (49043 effective words) took 0.7s, 69840 effective words/s\n",
      "2022-10-04 17:55:26,609 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:55:26,613 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:55:26,614 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:55:26,615 : INFO : EPOCH - 3 : training on 472269 raw words (48779 effective words) took 0.7s, 71038 effective words/s\n",
      "2022-10-04 17:55:27,311 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:55:27,315 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:55:27,317 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:55:27,320 : INFO : EPOCH - 4 : training on 472269 raw words (48462 effective words) took 0.7s, 69943 effective words/s\n",
      "2022-10-04 17:55:28,047 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:55:28,050 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:55:28,052 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:55:28,052 : INFO : EPOCH - 5 : training on 472269 raw words (48710 effective words) took 0.7s, 67583 effective words/s\n",
      "2022-10-04 17:55:28,053 : INFO : Word2Vec lifecycle event {'msg': 'training on 2361345 raw words (243731 effective words) took 3.6s, 68132 effective words/s', 'datetime': '2022-10-04T17:55:28.053983', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:55:28,054 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=220, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:55:28.054979', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10 / 16  columns vectorized\n",
      "Starting to vectorize column PAIPERCDET\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:56:39,469 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:56:39,471 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:56:39,485 : INFO : PROGRESS: at sentence #10000, processed 10970 words, keeping 91 word types\n",
      "2022-10-04 17:56:39,493 : INFO : PROGRESS: at sentence #20000, processed 21812 words, keeping 120 word types\n",
      "2022-10-04 17:56:39,499 : INFO : PROGRESS: at sentence #30000, processed 32700 words, keeping 128 word types\n",
      "2022-10-04 17:56:39,505 : INFO : PROGRESS: at sentence #40000, processed 43786 words, keeping 139 word types\n",
      "2022-10-04 17:56:39,511 : INFO : PROGRESS: at sentence #50000, processed 54566 words, keeping 143 word types\n",
      "2022-10-04 17:56:39,516 : INFO : PROGRESS: at sentence #60000, processed 66000 words, keeping 150 word types\n",
      "2022-10-04 17:56:39,522 : INFO : PROGRESS: at sentence #70000, processed 77291 words, keeping 154 word types\n",
      "2022-10-04 17:56:39,528 : INFO : PROGRESS: at sentence #80000, processed 89190 words, keeping 162 word types\n",
      "2022-10-04 17:56:39,534 : INFO : PROGRESS: at sentence #90000, processed 102922 words, keeping 173 word types\n",
      "2022-10-04 17:56:39,541 : INFO : PROGRESS: at sentence #100000, processed 116570 words, keeping 186 word types\n",
      "2022-10-04 17:56:39,547 : INFO : PROGRESS: at sentence #110000, processed 130273 words, keeping 192 word types\n",
      "2022-10-04 17:56:39,553 : INFO : PROGRESS: at sentence #120000, processed 143993 words, keeping 196 word types\n",
      "2022-10-04 17:56:39,559 : INFO : PROGRESS: at sentence #130000, processed 157728 words, keeping 199 word types\n",
      "2022-10-04 17:56:39,566 : INFO : PROGRESS: at sentence #140000, processed 171639 words, keeping 202 word types\n",
      "2022-10-04 17:56:39,572 : INFO : PROGRESS: at sentence #150000, processed 185236 words, keeping 205 word types\n",
      "2022-10-04 17:56:39,578 : INFO : PROGRESS: at sentence #160000, processed 197864 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,585 : INFO : PROGRESS: at sentence #170000, processed 207888 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,590 : INFO : PROGRESS: at sentence #180000, processed 217910 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,596 : INFO : PROGRESS: at sentence #190000, processed 227928 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,601 : INFO : PROGRESS: at sentence #200000, processed 237947 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,607 : INFO : PROGRESS: at sentence #210000, processed 247975 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,612 : INFO : PROGRESS: at sentence #220000, processed 257998 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,618 : INFO : PROGRESS: at sentence #230000, processed 268032 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,623 : INFO : PROGRESS: at sentence #240000, processed 278066 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,630 : INFO : PROGRESS: at sentence #250000, processed 288091 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,638 : INFO : PROGRESS: at sentence #260000, processed 298106 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,643 : INFO : PROGRESS: at sentence #270000, processed 308124 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,649 : INFO : PROGRESS: at sentence #280000, processed 318147 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,654 : INFO : PROGRESS: at sentence #290000, processed 328164 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,660 : INFO : PROGRESS: at sentence #300000, processed 338187 words, keeping 206 word types\n",
      "2022-10-04 17:56:39,665 : INFO : PROGRESS: at sentence #310000, processed 348234 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,670 : INFO : PROGRESS: at sentence #320000, processed 358264 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,677 : INFO : PROGRESS: at sentence #330000, processed 368299 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,682 : INFO : PROGRESS: at sentence #340000, processed 378633 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,688 : INFO : PROGRESS: at sentence #350000, processed 389009 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,694 : INFO : PROGRESS: at sentence #360000, processed 399253 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,699 : INFO : PROGRESS: at sentence #370000, processed 410194 words, keeping 207 word types\n",
      "2022-10-04 17:56:39,709 : INFO : PROGRESS: at sentence #380000, processed 421465 words, keeping 208 word types\n",
      "2022-10-04 17:56:39,715 : INFO : PROGRESS: at sentence #390000, processed 432712 words, keeping 210 word types\n",
      "2022-10-04 17:56:39,721 : INFO : PROGRESS: at sentence #400000, processed 444000 words, keeping 211 word types\n",
      "2022-10-04 17:56:39,728 : INFO : PROGRESS: at sentence #410000, processed 455260 words, keeping 212 word types\n",
      "2022-10-04 17:56:39,733 : INFO : PROGRESS: at sentence #420000, processed 466536 words, keeping 213 word types\n",
      "2022-10-04 17:56:39,738 : INFO : collected 213 word types from a corpus of 474245 raw words and 426850 sentences\n",
      "2022-10-04 17:56:39,739 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:56:39,741 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 213 unique words (100.0%% of original 213, drops 0)', 'datetime': '2022-10-04T17:56:39.741741', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:56:39,742 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 474245 word corpus (100.0%% of original 474245, drops 0)', 'datetime': '2022-10-04T17:56:39.742734', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:56:39,745 : INFO : deleting the raw counts dictionary of 213 items\n",
      "2022-10-04 17:56:39,746 : INFO : sample=0.001 downsamples 9 most-common words\n",
      "2022-10-04 17:56:39,747 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 49810.96489430814 word corpus (10.5%% of prior 474245)', 'datetime': '2022-10-04T17:56:39.747739', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:56:39,751 : INFO : estimated required memory for 213 words and 2 dimensions: 109908 bytes\n",
      "2022-10-04 17:56:39,752 : INFO : resetting layer weights\n",
      "2022-10-04 17:56:39,753 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:56:39.753745', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:56:39,755 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 213 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:56:39.755743', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:56:40,479 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:56:40,483 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:56:40,485 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:56:40,487 : INFO : EPOCH - 1 : training on 474245 raw words (49841 effective words) took 0.7s, 69663 effective words/s\n",
      "2022-10-04 17:56:41,164 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:56:41,168 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:56:41,170 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:56:41,171 : INFO : EPOCH - 2 : training on 474245 raw words (50081 effective words) took 0.7s, 74431 effective words/s\n",
      "2022-10-04 17:56:41,859 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:56:41,866 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:56:41,869 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:56:41,870 : INFO : EPOCH - 3 : training on 474245 raw words (49720 effective words) took 0.7s, 72438 effective words/s\n",
      "2022-10-04 17:56:42,565 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:56:42,570 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:56:42,572 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:56:42,574 : INFO : EPOCH - 4 : training on 474245 raw words (49848 effective words) took 0.7s, 71861 effective words/s\n",
      "2022-10-04 17:56:43,277 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:56:43,280 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:56:43,282 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:56:43,283 : INFO : EPOCH - 5 : training on 474245 raw words (49766 effective words) took 0.7s, 71267 effective words/s\n",
      "2022-10-04 17:56:43,284 : INFO : Word2Vec lifecycle event {'msg': 'training on 2371225 raw words (249256 effective words) took 3.5s, 70646 effective words/s', 'datetime': '2022-10-04T17:56:43.284733', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:56:43,285 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=213, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:56:43.285732', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11 / 16  columns vectorized\n",
      "Starting to vectorize column CODNAFN\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:57:53,672 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:57:53,674 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:57:53,688 : INFO : PROGRESS: at sentence #10000, processed 12296 words, keeping 554 word types\n",
      "2022-10-04 17:57:53,695 : INFO : PROGRESS: at sentence #20000, processed 24227 words, keeping 619 word types\n",
      "2022-10-04 17:57:53,704 : INFO : PROGRESS: at sentence #30000, processed 36756 words, keeping 657 word types\n",
      "2022-10-04 17:57:53,710 : INFO : PROGRESS: at sentence #40000, processed 49781 words, keeping 684 word types\n",
      "2022-10-04 17:57:53,717 : INFO : PROGRESS: at sentence #50000, processed 62013 words, keeping 697 word types\n",
      "2022-10-04 17:57:53,725 : INFO : PROGRESS: at sentence #60000, processed 75278 words, keeping 707 word types\n",
      "2022-10-04 17:57:53,731 : INFO : PROGRESS: at sentence #70000, processed 88411 words, keeping 719 word types\n",
      "2022-10-04 17:57:53,738 : INFO : PROGRESS: at sentence #80000, processed 102606 words, keeping 728 word types\n",
      "2022-10-04 17:57:53,745 : INFO : PROGRESS: at sentence #90000, processed 120219 words, keeping 736 word types\n",
      "2022-10-04 17:57:53,752 : INFO : PROGRESS: at sentence #100000, processed 137725 words, keeping 747 word types\n",
      "2022-10-04 17:57:53,759 : INFO : PROGRESS: at sentence #110000, processed 155307 words, keeping 753 word types\n",
      "2022-10-04 17:57:53,766 : INFO : PROGRESS: at sentence #120000, processed 172707 words, keeping 758 word types\n",
      "2022-10-04 17:57:53,774 : INFO : PROGRESS: at sentence #130000, processed 190361 words, keeping 762 word types\n",
      "2022-10-04 17:57:53,781 : INFO : PROGRESS: at sentence #140000, processed 208080 words, keeping 768 word types\n",
      "2022-10-04 17:57:53,788 : INFO : PROGRESS: at sentence #150000, processed 225524 words, keeping 772 word types\n",
      "2022-10-04 17:57:53,799 : INFO : PROGRESS: at sentence #160000, processed 240850 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,804 : INFO : PROGRESS: at sentence #170000, processed 250877 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,810 : INFO : PROGRESS: at sentence #180000, processed 260922 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,817 : INFO : PROGRESS: at sentence #190000, processed 270977 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,822 : INFO : PROGRESS: at sentence #200000, processed 281032 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,828 : INFO : PROGRESS: at sentence #210000, processed 291053 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,833 : INFO : PROGRESS: at sentence #220000, processed 301113 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,841 : INFO : PROGRESS: at sentence #230000, processed 311180 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,846 : INFO : PROGRESS: at sentence #240000, processed 321252 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,852 : INFO : PROGRESS: at sentence #250000, processed 331310 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,858 : INFO : PROGRESS: at sentence #260000, processed 341351 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,863 : INFO : PROGRESS: at sentence #270000, processed 351390 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,869 : INFO : PROGRESS: at sentence #280000, processed 361475 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,876 : INFO : PROGRESS: at sentence #290000, processed 371572 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,881 : INFO : PROGRESS: at sentence #300000, processed 381674 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,887 : INFO : PROGRESS: at sentence #310000, processed 391797 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,892 : INFO : PROGRESS: at sentence #320000, processed 401900 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,898 : INFO : PROGRESS: at sentence #330000, processed 412017 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,904 : INFO : PROGRESS: at sentence #340000, processed 422978 words, keeping 773 word types\n",
      "2022-10-04 17:57:53,909 : INFO : PROGRESS: at sentence #350000, processed 433920 words, keeping 774 word types\n",
      "2022-10-04 17:57:53,915 : INFO : PROGRESS: at sentence #360000, processed 444440 words, keeping 774 word types\n",
      "2022-10-04 17:57:53,922 : INFO : PROGRESS: at sentence #370000, processed 456969 words, keeping 776 word types\n",
      "2022-10-04 17:57:53,929 : INFO : PROGRESS: at sentence #380000, processed 470002 words, keeping 780 word types\n",
      "2022-10-04 17:57:53,935 : INFO : PROGRESS: at sentence #390000, processed 483096 words, keeping 783 word types\n",
      "2022-10-04 17:57:53,943 : INFO : PROGRESS: at sentence #400000, processed 496365 words, keeping 784 word types\n",
      "2022-10-04 17:57:53,949 : INFO : PROGRESS: at sentence #410000, processed 509578 words, keeping 785 word types\n",
      "2022-10-04 17:57:53,955 : INFO : PROGRESS: at sentence #420000, processed 522878 words, keeping 787 word types\n",
      "2022-10-04 17:57:53,960 : INFO : collected 789 word types from a corpus of 532160 raw words and 426850 sentences\n",
      "2022-10-04 17:57:53,961 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:57:53,966 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 789 unique words (100.0%% of original 789, drops 0)', 'datetime': '2022-10-04T17:57:53.966550', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:57:53,967 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 532160 word corpus (100.0%% of original 532160, drops 0)', 'datetime': '2022-10-04T17:57:53.967548', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:57:53,973 : INFO : deleting the raw counts dictionary of 789 items\n",
      "2022-10-04 17:57:53,974 : INFO : sample=0.001 downsamples 29 most-common words\n",
      "2022-10-04 17:57:53,975 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 180882.9682372352 word corpus (34.0%% of prior 532160)', 'datetime': '2022-10-04T17:57:53.975549', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:57:53,986 : INFO : estimated required memory for 789 words and 2 dimensions: 407124 bytes\n",
      "2022-10-04 17:57:53,987 : INFO : resetting layer weights\n",
      "2022-10-04 17:57:53,988 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:57:53.988544', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:57:53,989 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 789 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:57:53.989555', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:57:54,731 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:57:54,733 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:57:54,736 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:57:54,737 : INFO : EPOCH - 1 : training on 532160 raw words (181085 effective words) took 0.7s, 249808 effective words/s\n",
      "2022-10-04 17:57:55,491 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:57:55,494 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:57:55,496 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:57:55,497 : INFO : EPOCH - 2 : training on 532160 raw words (180728 effective words) took 0.7s, 241178 effective words/s\n",
      "2022-10-04 17:57:56,245 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:57:56,248 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:57:56,250 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:57:56,251 : INFO : EPOCH - 3 : training on 532160 raw words (180632 effective words) took 0.7s, 243376 effective words/s\n",
      "2022-10-04 17:57:56,995 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:57:56,997 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:57:56,999 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:57:57,000 : INFO : EPOCH - 4 : training on 532160 raw words (181065 effective words) took 0.7s, 244847 effective words/s\n",
      "2022-10-04 17:57:57,734 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:57:57,737 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:57:57,739 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:57:57,741 : INFO : EPOCH - 5 : training on 532160 raw words (181232 effective words) took 0.7s, 248590 effective words/s\n",
      "2022-10-04 17:57:57,744 : INFO : Word2Vec lifecycle event {'msg': 'training on 2660800 raw words (904742 effective words) took 3.8s, 241049 effective words/s', 'datetime': '2022-10-04T17:57:57.744544', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:57:57,745 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=789, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:57:57.745547', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12 / 16  columns vectorized\n",
      "Starting to vectorize column PAIPER\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 17:59:07,704 : INFO : collecting all words and their counts\n",
      "2022-10-04 17:59:07,706 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 17:59:07,711 : INFO : PROGRESS: at sentence #10000, processed 10000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,717 : INFO : PROGRESS: at sentence #20000, processed 20000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,723 : INFO : PROGRESS: at sentence #30000, processed 30000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,728 : INFO : PROGRESS: at sentence #40000, processed 40000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,733 : INFO : PROGRESS: at sentence #50000, processed 50000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,738 : INFO : PROGRESS: at sentence #60000, processed 60000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,747 : INFO : PROGRESS: at sentence #70000, processed 70000 words, keeping 1 word types\n",
      "2022-10-04 17:59:07,752 : INFO : PROGRESS: at sentence #80000, processed 80804 words, keeping 44 word types\n",
      "2022-10-04 17:59:07,758 : INFO : PROGRESS: at sentence #90000, processed 93729 words, keeping 82 word types\n",
      "2022-10-04 17:59:07,763 : INFO : PROGRESS: at sentence #100000, processed 106583 words, keeping 103 word types\n",
      "2022-10-04 17:59:07,773 : INFO : PROGRESS: at sentence #110000, processed 119482 words, keeping 124 word types\n",
      "2022-10-04 17:59:07,778 : INFO : PROGRESS: at sentence #120000, processed 132368 words, keeping 134 word types\n",
      "2022-10-04 17:59:07,784 : INFO : PROGRESS: at sentence #130000, processed 145261 words, keeping 139 word types\n",
      "2022-10-04 17:59:07,790 : INFO : PROGRESS: at sentence #140000, processed 158310 words, keeping 147 word types\n",
      "2022-10-04 17:59:07,796 : INFO : PROGRESS: at sentence #150000, processed 171109 words, keeping 150 word types\n",
      "2022-10-04 17:59:07,802 : INFO : PROGRESS: at sentence #160000, processed 183478 words, keeping 160 word types\n",
      "2022-10-04 17:59:07,807 : INFO : PROGRESS: at sentence #170000, processed 194606 words, keeping 169 word types\n",
      "2022-10-04 17:59:07,813 : INFO : PROGRESS: at sentence #180000, processed 205665 words, keeping 174 word types\n",
      "2022-10-04 17:59:07,819 : INFO : PROGRESS: at sentence #190000, processed 216783 words, keeping 181 word types\n",
      "2022-10-04 17:59:07,824 : INFO : PROGRESS: at sentence #200000, processed 227835 words, keeping 186 word types\n",
      "2022-10-04 17:59:07,831 : INFO : PROGRESS: at sentence #210000, processed 238966 words, keeping 189 word types\n",
      "2022-10-04 17:59:07,837 : INFO : PROGRESS: at sentence #220000, processed 250079 words, keeping 192 word types\n",
      "2022-10-04 17:59:07,843 : INFO : PROGRESS: at sentence #230000, processed 261193 words, keeping 197 word types\n",
      "2022-10-04 17:59:07,850 : INFO : PROGRESS: at sentence #240000, processed 272275 words, keeping 205 word types\n",
      "2022-10-04 17:59:07,857 : INFO : PROGRESS: at sentence #250000, processed 283410 words, keeping 211 word types\n",
      "2022-10-04 17:59:07,862 : INFO : PROGRESS: at sentence #260000, processed 294460 words, keeping 215 word types\n",
      "2022-10-04 17:59:07,868 : INFO : PROGRESS: at sentence #270000, processed 305639 words, keeping 216 word types\n",
      "2022-10-04 17:59:07,874 : INFO : PROGRESS: at sentence #280000, processed 316774 words, keeping 220 word types\n",
      "2022-10-04 17:59:07,880 : INFO : PROGRESS: at sentence #290000, processed 327920 words, keeping 221 word types\n",
      "2022-10-04 17:59:07,885 : INFO : PROGRESS: at sentence #300000, processed 339062 words, keeping 225 word types\n",
      "2022-10-04 17:59:07,891 : INFO : PROGRESS: at sentence #310000, processed 350141 words, keeping 226 word types\n",
      "2022-10-04 17:59:07,904 : INFO : PROGRESS: at sentence #320000, processed 361276 words, keeping 228 word types\n",
      "2022-10-04 17:59:07,912 : INFO : PROGRESS: at sentence #330000, processed 372380 words, keeping 229 word types\n",
      "2022-10-04 17:59:07,918 : INFO : PROGRESS: at sentence #340000, processed 383210 words, keeping 231 word types\n",
      "2022-10-04 17:59:07,924 : INFO : PROGRESS: at sentence #350000, processed 393606 words, keeping 234 word types\n",
      "2022-10-04 17:59:07,929 : INFO : PROGRESS: at sentence #360000, processed 404057 words, keeping 236 word types\n",
      "2022-10-04 17:59:07,935 : INFO : PROGRESS: at sentence #370000, processed 414158 words, keeping 237 word types\n",
      "2022-10-04 17:59:07,940 : INFO : PROGRESS: at sentence #380000, processed 424158 words, keeping 237 word types\n",
      "2022-10-04 17:59:07,946 : INFO : PROGRESS: at sentence #390000, processed 434158 words, keeping 237 word types\n",
      "2022-10-04 17:59:07,951 : INFO : PROGRESS: at sentence #400000, processed 444158 words, keeping 237 word types\n",
      "2022-10-04 17:59:07,956 : INFO : PROGRESS: at sentence #410000, processed 454158 words, keeping 237 word types\n",
      "2022-10-04 17:59:07,962 : INFO : PROGRESS: at sentence #420000, processed 464158 words, keeping 237 word types\n",
      "2022-10-04 17:59:07,966 : INFO : collected 237 word types from a corpus of 471008 raw words and 426850 sentences\n",
      "2022-10-04 17:59:07,967 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 17:59:07,969 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 237 unique words (100.0%% of original 237, drops 0)', 'datetime': '2022-10-04T17:59:07.969397', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:59:07,970 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 471008 word corpus (100.0%% of original 471008, drops 0)', 'datetime': '2022-10-04T17:59:07.970399', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:59:07,972 : INFO : deleting the raw counts dictionary of 237 items\n",
      "2022-10-04 17:59:07,973 : INFO : sample=0.001 downsamples 9 most-common words\n",
      "2022-10-04 17:59:07,974 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 56426.2627039385 word corpus (12.0%% of prior 471008)', 'datetime': '2022-10-04T17:59:07.974398', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 17:59:07,979 : INFO : estimated required memory for 237 words and 2 dimensions: 122292 bytes\n",
      "2022-10-04 17:59:07,979 : INFO : resetting layer weights\n",
      "2022-10-04 17:59:07,980 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T17:59:07.980399', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 17:59:07,981 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 237 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T17:59:07.981401', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:59:08,698 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:59:08,705 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:59:08,706 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:59:08,709 : INFO : EPOCH - 1 : training on 471008 raw words (56300 effective words) took 0.7s, 79620 effective words/s\n",
      "2022-10-04 17:59:09,444 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:59:09,446 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:59:09,448 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:59:09,451 : INFO : EPOCH - 2 : training on 471008 raw words (56347 effective words) took 0.7s, 77035 effective words/s\n",
      "2022-10-04 17:59:10,152 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:59:10,156 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:59:10,158 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:59:10,159 : INFO : EPOCH - 3 : training on 471008 raw words (56187 effective words) took 0.7s, 80639 effective words/s\n",
      "2022-10-04 17:59:10,845 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:59:10,849 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:59:10,850 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:59:10,851 : INFO : EPOCH - 4 : training on 471008 raw words (56412 effective words) took 0.7s, 82896 effective words/s\n",
      "2022-10-04 17:59:11,544 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 17:59:11,546 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 17:59:11,547 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 17:59:11,550 : INFO : EPOCH - 5 : training on 471008 raw words (56646 effective words) took 0.7s, 82431 effective words/s\n",
      "2022-10-04 17:59:11,552 : INFO : Word2Vec lifecycle event {'msg': 'training on 2355040 raw words (281892 effective words) took 3.6s, 78974 effective words/s', 'datetime': '2022-10-04T17:59:11.552381', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 17:59:11,553 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=237, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T17:59:11.553383', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13 / 16  columns vectorized\n",
      "Starting to vectorize column PAIMER\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 18:00:20,322 : INFO : collecting all words and their counts\n",
      "2022-10-04 18:00:20,324 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 18:00:20,334 : INFO : PROGRESS: at sentence #10000, processed 10000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,343 : INFO : PROGRESS: at sentence #20000, processed 20000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,350 : INFO : PROGRESS: at sentence #30000, processed 30000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,355 : INFO : PROGRESS: at sentence #40000, processed 40000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,360 : INFO : PROGRESS: at sentence #50000, processed 50000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,365 : INFO : PROGRESS: at sentence #60000, processed 60000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,370 : INFO : PROGRESS: at sentence #70000, processed 70000 words, keeping 1 word types\n",
      "2022-10-04 18:00:20,375 : INFO : PROGRESS: at sentence #80000, processed 80799 words, keeping 46 word types\n",
      "2022-10-04 18:00:20,381 : INFO : PROGRESS: at sentence #90000, processed 93679 words, keeping 81 word types\n",
      "2022-10-04 18:00:20,389 : INFO : PROGRESS: at sentence #100000, processed 106484 words, keeping 105 word types\n",
      "2022-10-04 18:00:20,395 : INFO : PROGRESS: at sentence #110000, processed 119334 words, keeping 130 word types\n",
      "2022-10-04 18:00:20,401 : INFO : PROGRESS: at sentence #120000, processed 132194 words, keeping 148 word types\n",
      "2022-10-04 18:00:20,407 : INFO : PROGRESS: at sentence #130000, processed 145058 words, keeping 155 word types\n",
      "2022-10-04 18:00:20,412 : INFO : PROGRESS: at sentence #140000, processed 158098 words, keeping 163 word types\n",
      "2022-10-04 18:00:20,418 : INFO : PROGRESS: at sentence #150000, processed 170848 words, keeping 165 word types\n",
      "2022-10-04 18:00:20,424 : INFO : PROGRESS: at sentence #160000, processed 183135 words, keeping 173 word types\n",
      "2022-10-04 18:00:20,430 : INFO : PROGRESS: at sentence #170000, processed 194119 words, keeping 180 word types\n",
      "2022-10-04 18:00:20,436 : INFO : PROGRESS: at sentence #180000, processed 205064 words, keeping 187 word types\n",
      "2022-10-04 18:00:20,442 : INFO : PROGRESS: at sentence #190000, processed 216087 words, keeping 193 word types\n",
      "2022-10-04 18:00:20,447 : INFO : PROGRESS: at sentence #200000, processed 227037 words, keeping 198 word types\n",
      "2022-10-04 18:00:20,453 : INFO : PROGRESS: at sentence #210000, processed 238042 words, keeping 200 word types\n",
      "2022-10-04 18:00:20,458 : INFO : PROGRESS: at sentence #220000, processed 249029 words, keeping 204 word types\n",
      "2022-10-04 18:00:20,464 : INFO : PROGRESS: at sentence #230000, processed 259968 words, keeping 205 word types\n",
      "2022-10-04 18:00:20,470 : INFO : PROGRESS: at sentence #240000, processed 270934 words, keeping 208 word types\n",
      "2022-10-04 18:00:20,479 : INFO : PROGRESS: at sentence #250000, processed 281938 words, keeping 212 word types\n",
      "2022-10-04 18:00:20,488 : INFO : PROGRESS: at sentence #260000, processed 292862 words, keeping 216 word types\n",
      "2022-10-04 18:00:20,493 : INFO : PROGRESS: at sentence #270000, processed 303898 words, keeping 217 word types\n",
      "2022-10-04 18:00:20,499 : INFO : PROGRESS: at sentence #280000, processed 314883 words, keeping 219 word types\n",
      "2022-10-04 18:00:20,505 : INFO : PROGRESS: at sentence #290000, processed 325895 words, keeping 220 word types\n",
      "2022-10-04 18:00:20,510 : INFO : PROGRESS: at sentence #300000, processed 336879 words, keeping 221 word types\n",
      "2022-10-04 18:00:20,516 : INFO : PROGRESS: at sentence #310000, processed 347803 words, keeping 221 word types\n",
      "2022-10-04 18:00:20,522 : INFO : PROGRESS: at sentence #320000, processed 358761 words, keeping 221 word types\n",
      "2022-10-04 18:00:20,528 : INFO : PROGRESS: at sentence #330000, processed 369718 words, keeping 222 word types\n",
      "2022-10-04 18:00:20,534 : INFO : PROGRESS: at sentence #340000, processed 380427 words, keeping 224 word types\n",
      "2022-10-04 18:00:20,541 : INFO : PROGRESS: at sentence #350000, processed 390769 words, keeping 227 word types\n",
      "2022-10-04 18:00:20,546 : INFO : PROGRESS: at sentence #360000, processed 401148 words, keeping 228 word types\n",
      "2022-10-04 18:00:20,551 : INFO : PROGRESS: at sentence #370000, processed 411243 words, keeping 229 word types\n",
      "2022-10-04 18:00:20,556 : INFO : PROGRESS: at sentence #380000, processed 421243 words, keeping 229 word types\n",
      "2022-10-04 18:00:20,561 : INFO : PROGRESS: at sentence #390000, processed 431243 words, keeping 229 word types\n",
      "2022-10-04 18:00:20,566 : INFO : PROGRESS: at sentence #400000, processed 441243 words, keeping 229 word types\n",
      "2022-10-04 18:00:20,575 : INFO : PROGRESS: at sentence #410000, processed 451243 words, keeping 229 word types\n",
      "2022-10-04 18:00:20,580 : INFO : PROGRESS: at sentence #420000, processed 461243 words, keeping 229 word types\n",
      "2022-10-04 18:00:20,584 : INFO : collected 229 word types from a corpus of 468093 raw words and 426850 sentences\n",
      "2022-10-04 18:00:20,585 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 18:00:20,587 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 229 unique words (100.0%% of original 229, drops 0)', 'datetime': '2022-10-04T18:00:20.587296', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:00:20,588 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 468093 word corpus (100.0%% of original 468093, drops 0)', 'datetime': '2022-10-04T18:00:20.588283', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:00:20,590 : INFO : deleting the raw counts dictionary of 229 items\n",
      "2022-10-04 18:00:20,592 : INFO : sample=0.001 downsamples 10 most-common words\n",
      "2022-10-04 18:00:20,593 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 55437.8984536119 word corpus (11.8%% of prior 468093)', 'datetime': '2022-10-04T18:00:20.593295', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:00:20,596 : INFO : estimated required memory for 229 words and 2 dimensions: 118164 bytes\n",
      "2022-10-04 18:00:20,598 : INFO : resetting layer weights\n",
      "2022-10-04 18:00:20,599 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T18:00:20.599298', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 18:00:20,600 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 229 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T18:00:20.600298', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 18:00:21,322 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:00:21,328 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:00:21,329 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:00:21,330 : INFO : EPOCH - 1 : training on 468093 raw words (55561 effective words) took 0.7s, 78202 effective words/s\n",
      "2022-10-04 18:00:22,035 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:00:22,039 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:00:22,041 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:00:22,043 : INFO : EPOCH - 2 : training on 468093 raw words (55182 effective words) took 0.7s, 78506 effective words/s\n",
      "2022-10-04 18:00:22,737 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:00:22,742 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:00:22,744 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:00:22,746 : INFO : EPOCH - 3 : training on 468093 raw words (55191 effective words) took 0.7s, 79891 effective words/s\n",
      "2022-10-04 18:00:23,456 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:00:23,458 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:00:23,460 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:00:23,461 : INFO : EPOCH - 4 : training on 468093 raw words (55370 effective words) took 0.7s, 78808 effective words/s\n",
      "2022-10-04 18:00:24,165 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:00:24,173 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:00:24,174 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:00:24,176 : INFO : EPOCH - 5 : training on 468093 raw words (55352 effective words) took 0.7s, 78714 effective words/s\n",
      "2022-10-04 18:00:24,179 : INFO : Word2Vec lifecycle event {'msg': 'training on 2340465 raw words (276656 effective words) took 3.6s, 77331 effective words/s', 'datetime': '2022-10-04T18:00:24.179292', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 18:00:24,180 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=229, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T18:00:24.180281', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14 / 16  columns vectorized\n",
      "Starting to vectorize column DIPFIN\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 18:01:33,703 : INFO : collecting all words and their counts\n",
      "2022-10-04 18:01:33,705 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 18:01:33,720 : INFO : PROGRESS: at sentence #10000, processed 10000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,727 : INFO : PROGRESS: at sentence #20000, processed 20000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,735 : INFO : PROGRESS: at sentence #30000, processed 30000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,740 : INFO : PROGRESS: at sentence #40000, processed 40000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,745 : INFO : PROGRESS: at sentence #50000, processed 50000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,750 : INFO : PROGRESS: at sentence #60000, processed 60000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,755 : INFO : PROGRESS: at sentence #70000, processed 70000 words, keeping 1 word types\n",
      "2022-10-04 18:01:33,761 : INFO : PROGRESS: at sentence #80000, processed 81041 words, keeping 52 word types\n",
      "2022-10-04 18:01:33,767 : INFO : PROGRESS: at sentence #90000, processed 94825 words, keeping 74 word types\n",
      "2022-10-04 18:01:33,773 : INFO : PROGRESS: at sentence #100000, processed 108559 words, keeping 85 word types\n",
      "2022-10-04 18:01:33,779 : INFO : PROGRESS: at sentence #110000, processed 122314 words, keeping 89 word types\n",
      "2022-10-04 18:01:33,785 : INFO : PROGRESS: at sentence #120000, processed 136081 words, keeping 91 word types\n",
      "2022-10-04 18:01:33,795 : INFO : PROGRESS: at sentence #130000, processed 149875 words, keeping 93 word types\n",
      "2022-10-04 18:01:33,801 : INFO : PROGRESS: at sentence #140000, processed 163878 words, keeping 95 word types\n",
      "2022-10-04 18:01:33,807 : INFO : PROGRESS: at sentence #150000, processed 177492 words, keeping 95 word types\n",
      "2022-10-04 18:01:33,813 : INFO : PROGRESS: at sentence #160000, processed 191459 words, keeping 98 word types\n",
      "2022-10-04 18:01:33,820 : INFO : PROGRESS: at sentence #170000, processed 205951 words, keeping 101 word types\n",
      "2022-10-04 18:01:33,827 : INFO : PROGRESS: at sentence #180000, processed 220334 words, keeping 104 word types\n",
      "2022-10-04 18:01:33,834 : INFO : PROGRESS: at sentence #190000, processed 234773 words, keeping 106 word types\n",
      "2022-10-04 18:01:33,844 : INFO : PROGRESS: at sentence #200000, processed 249150 words, keeping 106 word types\n",
      "2022-10-04 18:01:33,852 : INFO : PROGRESS: at sentence #210000, processed 263690 words, keeping 106 word types\n",
      "2022-10-04 18:01:33,859 : INFO : PROGRESS: at sentence #220000, processed 278177 words, keeping 106 word types\n",
      "2022-10-04 18:01:33,865 : INFO : PROGRESS: at sentence #230000, processed 292499 words, keeping 106 word types\n",
      "2022-10-04 18:01:33,871 : INFO : PROGRESS: at sentence #240000, processed 306883 words, keeping 107 word types\n",
      "2022-10-04 18:01:33,877 : INFO : PROGRESS: at sentence #250000, processed 321419 words, keeping 107 word types\n",
      "2022-10-04 18:01:33,884 : INFO : PROGRESS: at sentence #260000, processed 335833 words, keeping 107 word types\n",
      "2022-10-04 18:01:33,891 : INFO : PROGRESS: at sentence #270000, processed 350383 words, keeping 107 word types\n",
      "2022-10-04 18:01:33,897 : INFO : PROGRESS: at sentence #280000, processed 364839 words, keeping 107 word types\n",
      "2022-10-04 18:01:33,903 : INFO : PROGRESS: at sentence #290000, processed 379299 words, keeping 107 word types\n",
      "2022-10-04 18:01:33,910 : INFO : PROGRESS: at sentence #300000, processed 393895 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,922 : INFO : PROGRESS: at sentence #310000, processed 408360 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,929 : INFO : PROGRESS: at sentence #320000, processed 422762 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,937 : INFO : PROGRESS: at sentence #330000, processed 437274 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,944 : INFO : PROGRESS: at sentence #340000, processed 450560 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,951 : INFO : PROGRESS: at sentence #350000, processed 462877 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,957 : INFO : PROGRESS: at sentence #360000, processed 475474 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,963 : INFO : PROGRESS: at sentence #370000, processed 486235 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,969 : INFO : PROGRESS: at sentence #380000, processed 496235 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,974 : INFO : PROGRESS: at sentence #390000, processed 506235 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,981 : INFO : PROGRESS: at sentence #400000, processed 516235 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,987 : INFO : PROGRESS: at sentence #410000, processed 526235 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,995 : INFO : PROGRESS: at sentence #420000, processed 536235 words, keeping 108 word types\n",
      "2022-10-04 18:01:33,999 : INFO : collected 108 word types from a corpus of 543085 raw words and 426850 sentences\n",
      "2022-10-04 18:01:34,000 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 18:01:34,002 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 108 unique words (100.0%% of original 108, drops 0)', 'datetime': '2022-10-04T18:01:34.002202', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:01:34,003 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 543085 word corpus (100.0%% of original 543085, drops 0)', 'datetime': '2022-10-04T18:01:34.003204', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:01:34,005 : INFO : deleting the raw counts dictionary of 108 items\n",
      "2022-10-04 18:01:34,006 : INFO : sample=0.001 downsamples 32 most-common words\n",
      "2022-10-04 18:01:34,007 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 107447.49997387707 word corpus (19.8%% of prior 543085)', 'datetime': '2022-10-04T18:01:34.007209', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:01:34,009 : INFO : estimated required memory for 108 words and 2 dimensions: 55728 bytes\n",
      "2022-10-04 18:01:34,010 : INFO : resetting layer weights\n",
      "2022-10-04 18:01:34,011 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T18:01:34.011198', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 18:01:34,012 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 108 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T18:01:34.012196', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 18:01:34,726 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:01:34,728 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:01:34,730 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:01:34,732 : INFO : EPOCH - 1 : training on 543085 raw words (107122 effective words) took 0.7s, 153169 effective words/s\n",
      "2022-10-04 18:01:35,437 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:01:35,442 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:01:35,443 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:01:35,444 : INFO : EPOCH - 2 : training on 543085 raw words (107106 effective words) took 0.7s, 153190 effective words/s\n",
      "2022-10-04 18:01:36,170 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:01:36,175 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:01:36,176 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:01:36,177 : INFO : EPOCH - 3 : training on 543085 raw words (107826 effective words) took 0.7s, 149379 effective words/s\n",
      "2022-10-04 18:01:36,909 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:01:36,912 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:01:36,913 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:01:36,914 : INFO : EPOCH - 4 : training on 543085 raw words (107266 effective words) took 0.7s, 147861 effective words/s\n",
      "2022-10-04 18:01:37,660 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:01:37,662 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:01:37,663 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:01:37,664 : INFO : EPOCH - 5 : training on 543085 raw words (107202 effective words) took 0.7s, 144918 effective words/s\n",
      "2022-10-04 18:01:37,666 : INFO : Word2Vec lifecycle event {'msg': 'training on 2715425 raw words (536522 effective words) took 3.7s, 146859 effective words/s', 'datetime': '2022-10-04T18:01:37.666464', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 18:01:37,667 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=108, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T18:01:37.667454', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15 / 16  columns vectorized\n",
      "Starting to vectorize column NIVFIN\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 18:02:47,322 : INFO : collecting all words and their counts\n",
      "2022-10-04 18:02:47,324 : INFO : PROGRESS: at sentence #0, processed 0 words, keeping 0 word types\n",
      "2022-10-04 18:02:47,329 : INFO : PROGRESS: at sentence #10000, processed 10000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,335 : INFO : PROGRESS: at sentence #20000, processed 20000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,340 : INFO : PROGRESS: at sentence #30000, processed 30000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,345 : INFO : PROGRESS: at sentence #40000, processed 40000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,354 : INFO : PROGRESS: at sentence #50000, processed 50000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,359 : INFO : PROGRESS: at sentence #60000, processed 60000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,365 : INFO : PROGRESS: at sentence #70000, processed 70000 words, keeping 1 word types\n",
      "2022-10-04 18:02:47,371 : INFO : PROGRESS: at sentence #80000, processed 81049 words, keeping 68 word types\n",
      "2022-10-04 18:02:47,376 : INFO : PROGRESS: at sentence #90000, processed 94852 words, keeping 106 word types\n",
      "2022-10-04 18:02:47,382 : INFO : PROGRESS: at sentence #100000, processed 108600 words, keeping 118 word types\n",
      "2022-10-04 18:02:47,389 : INFO : PROGRESS: at sentence #110000, processed 122368 words, keeping 126 word types\n",
      "2022-10-04 18:02:47,395 : INFO : PROGRESS: at sentence #120000, processed 136155 words, keeping 127 word types\n",
      "2022-10-04 18:02:47,401 : INFO : PROGRESS: at sentence #130000, processed 149949 words, keeping 128 word types\n",
      "2022-10-04 18:02:47,407 : INFO : PROGRESS: at sentence #140000, processed 163973 words, keeping 130 word types\n",
      "2022-10-04 18:02:47,413 : INFO : PROGRESS: at sentence #150000, processed 177611 words, keeping 130 word types\n",
      "2022-10-04 18:02:47,419 : INFO : PROGRESS: at sentence #160000, processed 191608 words, keeping 135 word types\n",
      "2022-10-04 18:02:47,426 : INFO : PROGRESS: at sentence #170000, processed 206246 words, keeping 141 word types\n",
      "2022-10-04 18:02:47,435 : INFO : PROGRESS: at sentence #180000, processed 220751 words, keeping 144 word types\n",
      "2022-10-04 18:02:47,442 : INFO : PROGRESS: at sentence #190000, processed 235297 words, keeping 146 word types\n",
      "2022-10-04 18:02:47,449 : INFO : PROGRESS: at sentence #200000, processed 249780 words, keeping 146 word types\n",
      "2022-10-04 18:02:47,458 : INFO : PROGRESS: at sentence #210000, processed 264464 words, keeping 146 word types\n",
      "2022-10-04 18:02:47,464 : INFO : PROGRESS: at sentence #220000, processed 279043 words, keeping 146 word types\n",
      "2022-10-04 18:02:47,471 : INFO : PROGRESS: at sentence #230000, processed 293496 words, keeping 146 word types\n",
      "2022-10-04 18:02:47,478 : INFO : PROGRESS: at sentence #240000, processed 308018 words, keeping 147 word types\n",
      "2022-10-04 18:02:47,484 : INFO : PROGRESS: at sentence #250000, processed 322695 words, keeping 147 word types\n",
      "2022-10-04 18:02:47,491 : INFO : PROGRESS: at sentence #260000, processed 337243 words, keeping 147 word types\n",
      "2022-10-04 18:02:47,498 : INFO : PROGRESS: at sentence #270000, processed 351881 words, keeping 148 word types\n",
      "2022-10-04 18:02:47,506 : INFO : PROGRESS: at sentence #280000, processed 366445 words, keeping 148 word types\n",
      "2022-10-04 18:02:47,512 : INFO : PROGRESS: at sentence #290000, processed 381009 words, keeping 148 word types\n",
      "2022-10-04 18:02:47,519 : INFO : PROGRESS: at sentence #300000, processed 395752 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,526 : INFO : PROGRESS: at sentence #310000, processed 410353 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,534 : INFO : PROGRESS: at sentence #320000, processed 424856 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,541 : INFO : PROGRESS: at sentence #330000, processed 439501 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,547 : INFO : PROGRESS: at sentence #340000, processed 452879 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,553 : INFO : PROGRESS: at sentence #350000, processed 465395 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,560 : INFO : PROGRESS: at sentence #360000, processed 478198 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,566 : INFO : PROGRESS: at sentence #370000, processed 489026 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,571 : INFO : PROGRESS: at sentence #380000, processed 499026 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,577 : INFO : PROGRESS: at sentence #390000, processed 509026 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,582 : INFO : PROGRESS: at sentence #400000, processed 519026 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,588 : INFO : PROGRESS: at sentence #410000, processed 529026 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,594 : INFO : PROGRESS: at sentence #420000, processed 539026 words, keeping 149 word types\n",
      "2022-10-04 18:02:47,598 : INFO : collected 149 word types from a corpus of 545876 raw words and 426850 sentences\n",
      "2022-10-04 18:02:47,599 : INFO : Creating a fresh vocabulary\n",
      "2022-10-04 18:02:47,601 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 retains 149 unique words (100.0%% of original 149, drops 0)', 'datetime': '2022-10-04T18:02:47.600393', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:02:47,602 : INFO : Word2Vec lifecycle event {'msg': 'effective_min_count=1 leaves 545876 word corpus (100.0%% of original 545876, drops 0)', 'datetime': '2022-10-04T18:02:47.602393', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:02:47,604 : INFO : deleting the raw counts dictionary of 149 items\n",
      "2022-10-04 18:02:47,605 : INFO : sample=0.001 downsamples 37 most-common words\n",
      "2022-10-04 18:02:47,606 : INFO : Word2Vec lifecycle event {'msg': 'downsampling leaves estimated 128461.06506082788 word corpus (23.5%% of prior 545876)', 'datetime': '2022-10-04T18:02:47.606399', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'prepare_vocab'}\n",
      "2022-10-04 18:02:47,609 : INFO : estimated required memory for 149 words and 2 dimensions: 76884 bytes\n",
      "2022-10-04 18:02:47,611 : INFO : resetting layer weights\n",
      "2022-10-04 18:02:47,612 : INFO : Word2Vec lifecycle event {'update': False, 'trim_rule': 'None', 'datetime': '2022-10-04T18:02:47.612394', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'build_vocab'}\n",
      "2022-10-04 18:02:47,613 : INFO : Word2Vec lifecycle event {'msg': 'training model with 3 workers on 149 vocabulary and 2 features, using sg=0 hs=0 sample=0.001 negative=5 window=5', 'datetime': '2022-10-04T18:02:47.612394', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 18:02:48,366 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:02:48,372 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:02:48,374 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:02:48,375 : INFO : EPOCH - 1 : training on 545876 raw words (128128 effective words) took 0.7s, 172276 effective words/s\n",
      "2022-10-04 18:02:49,089 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:02:49,093 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:02:49,095 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:02:49,096 : INFO : EPOCH - 2 : training on 545876 raw words (128731 effective words) took 0.7s, 181629 effective words/s\n",
      "2022-10-04 18:02:49,810 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:02:49,815 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:02:49,816 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:02:49,818 : INFO : EPOCH - 3 : training on 545876 raw words (128375 effective words) took 0.7s, 181003 effective words/s\n",
      "2022-10-04 18:02:50,517 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:02:50,522 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:02:50,524 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:02:50,526 : INFO : EPOCH - 4 : training on 545876 raw words (128260 effective words) took 0.7s, 184528 effective words/s\n",
      "2022-10-04 18:02:51,247 : INFO : worker thread finished; awaiting finish of 2 more threads\n",
      "2022-10-04 18:02:51,253 : INFO : worker thread finished; awaiting finish of 1 more threads\n",
      "2022-10-04 18:02:51,255 : INFO : worker thread finished; awaiting finish of 0 more threads\n",
      "2022-10-04 18:02:51,257 : INFO : EPOCH - 5 : training on 545876 raw words (128207 effective words) took 0.7s, 178339 effective words/s\n",
      "2022-10-04 18:02:51,258 : INFO : Word2Vec lifecycle event {'msg': 'training on 2729380 raw words (641701 effective words) took 3.6s, 176067 effective words/s', 'datetime': '2022-10-04T18:02:51.258371', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'train'}\n",
      "2022-10-04 18:02:51,260 : INFO : Word2Vec lifecycle event {'params': 'Word2Vec(vocab=149, vector_size=2, alpha=0.025)', 'datetime': '2022-10-04T18:02:51.260371', 'gensim': '4.0.1', 'python': '3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)]', 'platform': 'Windows-10-10.0.17763-SP0', 'event': 'created'}\n"
     ]
    }
   ],
   "source": [
    "data = col2vec(data, vectl, dim=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There were 207 columns before encoding categorical features\n",
      "OneHotEncoding column...\n",
      "SALMET\n",
      "STATUT\n",
      "SEXE\n",
      "Column IDENT not encoded : number of unique values too large\n",
      "ACTEU\n",
      "TRIM\n",
      "RGA\n",
      "SO\n",
      "IMMI\n",
      "PRIM\n",
      "PRIMS\n",
      "REVENT\n",
      "TPP\n",
      "TPPRED\n",
      "NIVETD\n",
      "TYPMEN\n",
      "SALREDTR\n",
      "RGI\n",
      "TYPVOIS\n",
      "RDQ\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "OCCREF\n",
      "QPRC\n",
      "STAT2\n",
      "TYPMEN21\n",
      "TYPMEN7\n",
      "CATAU2010\n",
      "SALMEET\n",
      "There are 423 columns after encoding categorical features\n"
     ]
    }
   ],
   "source": [
    "print('There were {} columns before encoding categorical features'.format(data.shape[1]))\n",
    "data = oneHotEncode(data, objl)\n",
    "print('There are {} columns after encoding categorical features'.format(data.shape[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "del(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "63"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Prédiction par réseau de neurone"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On vérifie qu'il n'y a plus de valeurs manquantes. Dans le cas contraire, on cherche les colonnes concernées."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1531841, 423)"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([], dtype='object')"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns[df.isnull().any()]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.1 Choix des prédicteurs\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "complete_col_list = df.columns.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['DDIPL',\n",
       " 'NAIM',\n",
       " 'NAIA',\n",
       " 'HH',\n",
       " 'HT',\n",
       " 'CSE',\n",
       " 'ANNEE',\n",
       " 'SALMEE',\n",
       " 'IDENT',\n",
       " 'EMPNBH',\n",
       " 'DATANT',\n",
       " 'DAMOIS',\n",
       " 'NRESID',\n",
       " 'HATYEAR',\n",
       " 'NBINDE',\n",
       " 'NBACTOC',\n",
       " 'NBENF18A',\n",
       " 'NBENF6A',\n",
       " 'NBENF3A',\n",
       " 'NBENF18MA',\n",
       " 'HHC',\n",
       " 'SALRED',\n",
       " 'NBCHOME',\n",
       " 'DATDIP',\n",
       " 'NBTOT',\n",
       " 'VALPRE',\n",
       " 'CSPP',\n",
       " 'CSPM',\n",
       " 'FORDAT',\n",
       " 'DIPDET',\n",
       " 'NBACTOP',\n",
       " 'NBACTIF',\n",
       " 'NBENFIND',\n",
       " 'NBENFA18',\n",
       " 'NBENFA15',\n",
       " 'NBENFA10',\n",
       " 'NBENFA6',\n",
       " 'NBENFA3',\n",
       " 'NBENFA1',\n",
       " 'NBIND',\n",
       " 'SECT',\n",
       " 'AGE',\n",
       " 'EXPE',\n",
       " 'EXPEPOT',\n",
       " 'LHHC',\n",
       " 'A',\n",
       " 'B',\n",
       " 'C',\n",
       " 'D',\n",
       " 'SectA',\n",
       " 'SectB',\n",
       " 'SectC',\n",
       " 'SectD',\n",
       " 'SectE',\n",
       " 'SectF',\n",
       " 'SectG',\n",
       " 'SectH',\n",
       " 'SectI',\n",
       " 'SectJ',\n",
       " 'DepA',\n",
       " 'DepB',\n",
       " 'DepC',\n",
       " 'DepA_DNAI',\n",
       " 'DepB_DNAI',\n",
       " 'DepC_DNAI',\n",
       " 'DepA_DEPPER',\n",
       " 'DepB_DEPPER',\n",
       " 'DepC_DEPPER',\n",
       " 'DepA_DEPMER',\n",
       " 'DepB_DEPMER',\n",
       " 'DepC_DEPMER',\n",
       " 'SALMEERED',\n",
       " 'AUTPRIM',\n",
       " 'DDIPL_nan',\n",
       " 'NAIM_nan',\n",
       " 'HH_nan',\n",
       " 'HT_nan',\n",
       " 'CSE_nan',\n",
       " 'SALMEE_nan',\n",
       " 'EMPNBH_nan',\n",
       " 'DATANT_nan',\n",
       " 'DAMOIS_nan',\n",
       " 'NRESID_nan',\n",
       " 'HATYEAR_nan',\n",
       " 'NBINDE_nan',\n",
       " 'NBACTOC_nan',\n",
       " 'NBENF18A_nan',\n",
       " 'NBENF6A_nan',\n",
       " 'NBENF3A_nan',\n",
       " 'NBENF18MA_nan',\n",
       " 'HHC_nan',\n",
       " 'SALRED_nan',\n",
       " 'NBCHOME_nan',\n",
       " 'DATDIP_nan',\n",
       " 'NBTOT_nan',\n",
       " 'VALPRE_nan',\n",
       " 'CSPP_nan',\n",
       " 'CSPM_nan',\n",
       " 'FORDAT_nan',\n",
       " 'DIPDET_nan',\n",
       " 'NBACTOP_nan',\n",
       " 'NBACTIF_nan',\n",
       " 'NBENFIND_nan',\n",
       " 'NBENFA18_nan',\n",
       " 'NBENFA15_nan',\n",
       " 'NBENFA10_nan',\n",
       " 'NBENFA6_nan',\n",
       " 'NBENFA3_nan',\n",
       " 'NBENFA1_nan',\n",
       " 'NBIND_nan',\n",
       " 'SECT_nan',\n",
       " 'EXPE_nan',\n",
       " 'EXPEPOT_nan',\n",
       " 'LHHC_nan',\n",
       " 'A_nan',\n",
       " 'B_nan',\n",
       " 'C_nan',\n",
       " 'D_nan',\n",
       " 'SectA_nan',\n",
       " 'SectB_nan',\n",
       " 'SectC_nan',\n",
       " 'SectD_nan',\n",
       " 'SectE_nan',\n",
       " 'SectF_nan',\n",
       " 'SectG_nan',\n",
       " 'SectH_nan',\n",
       " 'SectI_nan',\n",
       " 'SectJ_nan',\n",
       " 'DepA_nan',\n",
       " 'DepB_nan',\n",
       " 'DepC_nan',\n",
       " 'DepA_DNAI_nan',\n",
       " 'DepB_DNAI_nan',\n",
       " 'DepC_DNAI_nan',\n",
       " 'DepA_DEPPER_nan',\n",
       " 'DepB_DEPPER_nan',\n",
       " 'DepC_DEPPER_nan',\n",
       " 'DepA_DEPMER_nan',\n",
       " 'DepB_DEPMER_nan',\n",
       " 'DepC_DEPMER_nan',\n",
       " 'SALMEERED_nan',\n",
       " 'AUTPRIM_nan',\n",
       " 'DATDEB_vec0',\n",
       " 'DATDEB_vec1',\n",
       " 'PNAI_vec0',\n",
       " 'PNAI_vec1',\n",
       " 'CODPCL_vec0',\n",
       " 'CODPCL_vec1',\n",
       " 'CSMERE_vec0',\n",
       " 'CSMERE_vec1',\n",
       " 'CSPERE_vec0',\n",
       " 'CSPERE_vec1',\n",
       " 'DNAIM_vec0',\n",
       " 'DNAIM_vec1',\n",
       " 'DNAIP_vec0',\n",
       " 'DNAIP_vec1',\n",
       " 'REG_vec0',\n",
       " 'REG_vec1',\n",
       " 'SPE_vec0',\n",
       " 'SPE_vec1',\n",
       " 'PAIMERCDET_vec0',\n",
       " 'PAIMERCDET_vec1',\n",
       " 'PAIPERCDET_vec0',\n",
       " 'PAIPERCDET_vec1',\n",
       " 'CODNAFN_vec0',\n",
       " 'CODNAFN_vec1',\n",
       " 'PAIPER_vec0',\n",
       " 'PAIPER_vec1',\n",
       " 'PAIMER_vec0',\n",
       " 'PAIMER_vec1',\n",
       " 'DIPFIN_vec0',\n",
       " 'DIPFIN_vec1',\n",
       " 'NIVFIN_vec0',\n",
       " 'NIVFIN_vec1',\n",
       " 'SALMET_1',\n",
       " 'SALMET_10',\n",
       " 'SALMET_2',\n",
       " 'SALMET_3',\n",
       " 'SALMET_4',\n",
       " 'SALMET_5',\n",
       " 'SALMET_6',\n",
       " 'SALMET_7',\n",
       " 'SALMET_8',\n",
       " 'SALMET_9',\n",
       " 'SALMET_98',\n",
       " 'SALMET_99',\n",
       " 'SALMET_A',\n",
       " 'SALMET_B',\n",
       " 'SALMET_C',\n",
       " 'SALMET_D',\n",
       " 'SALMET_E',\n",
       " 'SALMET_F',\n",
       " 'SALMET_G',\n",
       " 'SALMET_H',\n",
       " 'SALMET_I',\n",
       " 'SALMET_J',\n",
       " 'SALMET_new_nan',\n",
       " 'STATUT_11',\n",
       " 'STATUT_12',\n",
       " 'STATUT_13',\n",
       " 'STATUT_21',\n",
       " 'STATUT_22',\n",
       " 'STATUT_33',\n",
       " 'STATUT_34',\n",
       " 'STATUT_35',\n",
       " 'STATUT_41',\n",
       " 'STATUT_42',\n",
       " 'STATUT_43',\n",
       " 'STATUT_44',\n",
       " 'STATUT_45',\n",
       " 'STATUT_new_nan',\n",
       " 'SEXE_1',\n",
       " 'SEXE_2',\n",
       " 'ACTEU_1',\n",
       " 'ACTEU_2',\n",
       " 'ACTEU_3',\n",
       " 'TRIM_1',\n",
       " 'TRIM_2',\n",
       " 'TRIM_3',\n",
       " 'TRIM_4',\n",
       " 'TRIM_new_nan',\n",
       " 'RGA_1',\n",
       " 'RGA_2',\n",
       " 'RGA_3',\n",
       " 'RGA_4',\n",
       " 'RGA_5',\n",
       " 'RGA_6',\n",
       " 'RGA_new_nan',\n",
       " 'SO_1',\n",
       " 'SO_2',\n",
       " 'SO_3',\n",
       " 'SO_4',\n",
       " 'SO_5',\n",
       " 'SO_6',\n",
       " 'SO_7',\n",
       " 'SO_new_nan',\n",
       " 'IMMI_1',\n",
       " 'IMMI_2',\n",
       " 'IMMI_new_nan',\n",
       " 'PRIM_1',\n",
       " 'PRIM_2',\n",
       " 'PRIM_9',\n",
       " 'PRIM_new_nan',\n",
       " 'PRIMS_1',\n",
       " 'PRIMS_2',\n",
       " 'PRIMS_9',\n",
       " 'PRIMS_new_nan',\n",
       " 'REVENT_8',\n",
       " 'REVENT_9',\n",
       " 'REVENT_A',\n",
       " 'REVENT_B',\n",
       " 'REVENT_C',\n",
       " 'REVENT_D',\n",
       " 'REVENT_E',\n",
       " 'REVENT_F',\n",
       " 'REVENT_G',\n",
       " 'REVENT_H',\n",
       " 'REVENT_I',\n",
       " 'REVENT_J',\n",
       " 'REVENT_new_nan',\n",
       " 'TPP_1',\n",
       " 'TPP_2',\n",
       " 'TPP_3',\n",
       " 'TPP_new_nan',\n",
       " 'TPPRED_1',\n",
       " 'TPPRED_2',\n",
       " 'TPPRED_new_nan',\n",
       " 'NIVETD_10',\n",
       " 'NIVETD_12',\n",
       " 'NIVETD_20',\n",
       " 'NIVETD_29',\n",
       " 'NIVETD_31',\n",
       " 'NIVETD_32',\n",
       " 'NIVETD_33',\n",
       " 'NIVETD_41',\n",
       " 'NIVETD_42',\n",
       " 'NIVETD_43',\n",
       " 'NIVETD_51',\n",
       " 'NIVETD_52',\n",
       " 'NIVETD_61',\n",
       " 'NIVETD_71',\n",
       " 'NIVETD_72',\n",
       " 'NIVETD_73',\n",
       " 'NIVETD_new_nan',\n",
       " 'TYPMEN_10',\n",
       " 'TYPMEN_21',\n",
       " 'TYPMEN_22',\n",
       " 'TYPMEN_31',\n",
       " 'TYPMEN_32',\n",
       " 'TYPMEN_41',\n",
       " 'TYPMEN_42',\n",
       " 'TYPMEN_43',\n",
       " 'TYPMEN_51',\n",
       " 'TYPMEN_52',\n",
       " 'TYPMEN_new_nan',\n",
       " 'SALREDTR_A',\n",
       " 'SALREDTR_B',\n",
       " 'SALREDTR_C',\n",
       " 'SALREDTR_D',\n",
       " 'SALREDTR_E',\n",
       " 'SALREDTR_F',\n",
       " 'SALREDTR_G',\n",
       " 'SALREDTR_H',\n",
       " 'SALREDTR_I',\n",
       " 'SALREDTR_J',\n",
       " 'SALREDTR_new_nan',\n",
       " 'RGI_1',\n",
       " 'RGI_2',\n",
       " 'RGI_3',\n",
       " 'RGI_4',\n",
       " 'RGI_5',\n",
       " 'RGI_6',\n",
       " 'RGI_new_nan',\n",
       " 'TYPVOIS_1',\n",
       " 'TYPVOIS_2',\n",
       " 'TYPVOIS_3',\n",
       " 'TYPVOIS_4',\n",
       " 'TYPVOIS_5',\n",
       " 'TYPVOIS_new_nan',\n",
       " 'RDQ_1',\n",
       " 'RDQ_2',\n",
       " 'RDQ_new_nan',\n",
       " 'AUTSAL_1',\n",
       " 'AUTSAL_2',\n",
       " 'AUTSAL_new_nan',\n",
       " 'TYPSAL_1',\n",
       " 'TYPSAL_2',\n",
       " 'TYPSAL_new_nan',\n",
       " 'AM2NB_1',\n",
       " 'AM2NB_2',\n",
       " 'AM2NB_3',\n",
       " 'AM2NB_new_nan',\n",
       " 'CHPUB_1',\n",
       " 'CHPUB_2',\n",
       " 'CHPUB_3',\n",
       " 'CHPUB_4',\n",
       " 'CHPUB_5',\n",
       " 'CHPUB_6',\n",
       " 'CHPUB_7',\n",
       " 'CHPUB_new_nan',\n",
       " 'CONTRA_0',\n",
       " 'CONTRA_1',\n",
       " 'CONTRA_2',\n",
       " 'CONTRA_3',\n",
       " 'CONTRA_4',\n",
       " 'CONTRA_5',\n",
       " 'CONTRA_new_nan',\n",
       " 'FONCTC_1',\n",
       " 'FONCTC_10',\n",
       " 'FONCTC_2',\n",
       " 'FONCTC_3',\n",
       " 'FONCTC_4',\n",
       " 'FONCTC_5',\n",
       " 'FONCTC_6',\n",
       " 'FONCTC_7',\n",
       " 'FONCTC_8',\n",
       " 'FONCTC_9',\n",
       " 'FONCTC_new_nan',\n",
       " 'TITC_1',\n",
       " 'TITC_2',\n",
       " 'TITC_3',\n",
       " 'TITC_4',\n",
       " 'TITC_new_nan',\n",
       " 'OCCREF_1',\n",
       " 'OCCREF_2',\n",
       " 'OCCREF_new_nan',\n",
       " 'QPRC_1',\n",
       " 'QPRC_2',\n",
       " 'QPRC_3',\n",
       " 'QPRC_4',\n",
       " 'QPRC_5',\n",
       " 'QPRC_6',\n",
       " 'QPRC_7',\n",
       " 'QPRC_8',\n",
       " 'QPRC_9',\n",
       " 'QPRC_new_nan',\n",
       " 'STAT2_2',\n",
       " 'STAT2_new_nan',\n",
       " 'TYPMEN21_11',\n",
       " 'TYPMEN21_21',\n",
       " 'TYPMEN21_22',\n",
       " 'TYPMEN21_23',\n",
       " 'TYPMEN21_31',\n",
       " 'TYPMEN21_32',\n",
       " 'TYPMEN21_41',\n",
       " 'TYPMEN21_42',\n",
       " 'TYPMEN21_43',\n",
       " 'TYPMEN21_51',\n",
       " 'TYPMEN21_52',\n",
       " 'TYPMEN21_61',\n",
       " 'TYPMEN21_62',\n",
       " 'TYPMEN21_91',\n",
       " 'TYPMEN21_92',\n",
       " 'TYPMEN21_new_nan',\n",
       " 'TYPMEN7_1',\n",
       " 'TYPMEN7_2',\n",
       " 'TYPMEN7_3',\n",
       " 'TYPMEN7_4',\n",
       " 'TYPMEN7_5',\n",
       " 'TYPMEN7_6',\n",
       " 'TYPMEN7_9',\n",
       " 'TYPMEN7_new_nan',\n",
       " 'CATAU2010_111',\n",
       " 'CATAU2010_112',\n",
       " 'CATAU2010_120',\n",
       " 'CATAU2010_211',\n",
       " 'CATAU2010_212',\n",
       " 'CATAU2010_221',\n",
       " 'CATAU2010_222',\n",
       " 'CATAU2010_300',\n",
       " 'CATAU2010_400',\n",
       " 'CATAU2010_new_nan',\n",
       " 'SALMEET_(0.0, 499.0]',\n",
       " 'SALMEET_(499.0, 999.0]',\n",
       " 'SALMEET_(999.0, 1249.0]',\n",
       " 'SALMEET_(1249.0, 1499.0]',\n",
       " 'SALMEET_(1499.0, 1999.0]',\n",
       " 'SALMEET_(1999.0, 2499.0]',\n",
       " 'SALMEET_(2499.0, 2999.0]',\n",
       " 'SALMEET_(2999.0, 4999.0]',\n",
       " 'SALMEET_(4999.0, 7999.0]',\n",
       " 'SALMEET_(7999.0, inf]',\n",
       " 'SALMEET_new_nan']"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "complete_col_list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Il est possible de simuler différents types de comportement de non-réponse en fonction des variables que l'on choisi d'exclure. S'il est nécessaire, évidemment, d'exclure les variables des salaire SALMEE et SALRED, on pourrait vouloir intégrer les réponses aux questions sur le salaire en tranche, les primes, ou les revenus issus d'une activité indépendante.\n",
    "\n",
    "Pour le moment, on exclut toutes ces variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "ylist=['SALMEE',\"SALMEERED\",'SALMEE_nan','SALMEERED_nan'] \n",
    "salvarlist=['SALRED','SALRED_nan','VALPRE','VALPRE_nan','SALMET_A','SALMET_B','SALMET_C','SALMET_D','SALMET_E',\n",
    "            'SALMET_F','SALMET_G','SALMET_H','SALMET_I','SALMET_J','SALMET_1','SALMET_2','SALMET_3','SALMET_4',\n",
    "            'SALMET_5','SALMET_6','SALMET_7','SALMET_8','SALMET_9','SALMET_10','SALMET_98','SALMET_99',\n",
    "            'SALMET_new_nan','SALREDTR_A','SALREDTR_B','SALREDTR_C','SALREDTR_D','SALREDTR_E','SALREDTR_F',\n",
    "            'SALREDTR_G','SALREDTR_H','SALREDTR_I','SALREDTR_J','SALREDTR_new_nan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "saltranchelist=['SALMET_A','SALMET_B','SALMET_C','SALMET_D','SALMET_E','SALMET_F','SALMET_G','SALMET_H','SALMET_I',\n",
    "                'SALMET_J','SALMET_1','SALMET_2','SALMET_3','SALMET_4','SALMET_5','SALMET_6','SALMET_7','SALMET_8',\n",
    "                'SALMET_9','SALMET_10','SALMET_98','SALMET_99','SALMET_new_nan','SALREDTR_A','SALREDTR_B','SALREDTR_C',\n",
    "                'SALREDTR_D','SALREDTR_E','SALREDTR_F','SALREDTR_G','SALREDTR_H','SALREDTR_I','SALREDTR_J',\n",
    "                'SALREDTR_new_nan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "salmeetlist = ['SALMEET_(0.0, 499.0]','SALMEET_(499.0, 999.0]','SALMEET_(999.0, 1249.0]','SALMEET_(1249.0, 1499.0]',\n",
    "               'SALMEET_(1499.0, 1999.0]','SALMEET_(1999.0, 2499.0]','SALMEET_(2499.0, 2999.0]','SALMEET_(2999.0, 4999.0]',\n",
    "               'SALMEET_(4999.0, 7999.0]','SALMEET_(7999.0, inf]','SALMEET_new_nan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "primlist = [\"AUTPRIM\",\"AUTPRIM_nan\",\"VALPRE\",\"VALPRE_nan\",\"PRIM_1\",\"PRIM_2\",\"PRIM_9\",\"PRIM_new_nan\",\n",
    "            \"PRIMS_1\",\"PRIMS_2\",\"PRIMS_9\",\"PRIMS_new_nan\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "reventlist = ['REVENT_8','REVENT_9','REVENT_A','REVENT_B','REVENT_C','REVENT_D','REVENT_E','REVENT_F','REVENT_G',\n",
    "              'REVENT_H','REVENT_I','REVENT_J','REVENT_new_nan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "outl=['DEP', 'P', 'IDENT', 'DNAI', 'NAFN', 'DEPPER', 'DEPMER']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "excludlist = [i for i in ylist+salvarlist+outl+salmeetlist+primlist+reventlist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['SALMEE',\n",
       " 'SALMEERED',\n",
       " 'SALMEE_nan',\n",
       " 'SALMEERED_nan',\n",
       " 'SALRED',\n",
       " 'SALRED_nan',\n",
       " 'VALPRE',\n",
       " 'VALPRE_nan',\n",
       " 'SALMET_A',\n",
       " 'SALMET_B',\n",
       " 'SALMET_C',\n",
       " 'SALMET_D',\n",
       " 'SALMET_E',\n",
       " 'SALMET_F',\n",
       " 'SALMET_G',\n",
       " 'SALMET_H',\n",
       " 'SALMET_I',\n",
       " 'SALMET_J',\n",
       " 'SALMET_1',\n",
       " 'SALMET_2',\n",
       " 'SALMET_3',\n",
       " 'SALMET_4',\n",
       " 'SALMET_5',\n",
       " 'SALMET_6',\n",
       " 'SALMET_7',\n",
       " 'SALMET_8',\n",
       " 'SALMET_9',\n",
       " 'SALMET_10',\n",
       " 'SALMET_98',\n",
       " 'SALMET_99',\n",
       " 'SALMET_new_nan',\n",
       " 'SALREDTR_A',\n",
       " 'SALREDTR_B',\n",
       " 'SALREDTR_C',\n",
       " 'SALREDTR_D',\n",
       " 'SALREDTR_E',\n",
       " 'SALREDTR_F',\n",
       " 'SALREDTR_G',\n",
       " 'SALREDTR_H',\n",
       " 'SALREDTR_I',\n",
       " 'SALREDTR_J',\n",
       " 'SALREDTR_new_nan',\n",
       " 'DEP',\n",
       " 'P',\n",
       " 'IDENT',\n",
       " 'DNAI',\n",
       " 'NAFN',\n",
       " 'DEPPER',\n",
       " 'DEPMER',\n",
       " 'SALMEET_(0.0, 499.0]',\n",
       " 'SALMEET_(499.0, 999.0]',\n",
       " 'SALMEET_(999.0, 1249.0]',\n",
       " 'SALMEET_(1249.0, 1499.0]',\n",
       " 'SALMEET_(1499.0, 1999.0]',\n",
       " 'SALMEET_(1999.0, 2499.0]',\n",
       " 'SALMEET_(2499.0, 2999.0]',\n",
       " 'SALMEET_(2999.0, 4999.0]',\n",
       " 'SALMEET_(4999.0, 7999.0]',\n",
       " 'SALMEET_(7999.0, inf]',\n",
       " 'SALMEET_new_nan',\n",
       " 'AUTPRIM',\n",
       " 'AUTPRIM_nan',\n",
       " 'VALPRE',\n",
       " 'VALPRE_nan',\n",
       " 'PRIM_1',\n",
       " 'PRIM_2',\n",
       " 'PRIM_9',\n",
       " 'PRIM_new_nan',\n",
       " 'PRIMS_1',\n",
       " 'PRIMS_2',\n",
       " 'PRIMS_9',\n",
       " 'PRIMS_new_nan',\n",
       " 'REVENT_8',\n",
       " 'REVENT_9',\n",
       " 'REVENT_A',\n",
       " 'REVENT_B',\n",
       " 'REVENT_C',\n",
       " 'REVENT_D',\n",
       " 'REVENT_E',\n",
       " 'REVENT_F',\n",
       " 'REVENT_G',\n",
       " 'REVENT_H',\n",
       " 'REVENT_I',\n",
       " 'REVENT_J',\n",
       " 'REVENT_new_nan']"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "excludlist"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "predl = [i for i in complete_col_list if (i not in excludlist)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "predicted = 'SALMEERED'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.2 Split Train / Test et séparation x/y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Echantillon d'entraînement : toutes les données jusqu'en 2017 inclus, à l'exclusion des personnes nées en mars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df = df.loc[(df[\"NAIM\"]!=3)&(df[\"ANNEE\"]<2018)&(df[\"SALMEE\"]>0)&(df[\"SALMEERED_nan\"]==0),predl+[predicted]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1113747, 347)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On shuffle l'ordre des observations du train, avant de sélectionner un échantillon de validation aléatoire."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df = train_df.sample(frac=1).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "L'échantillon test est constitué des observations de 2018 (seulement le premier trimestre, pour les résultats du document de travail) et de celles des personnes nées en mars, quelle que soit l'année d'observation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_df = df.loc[(df[\"NAIM\"]==3)&(df[\"ANNEE\"]<2018)&(df[\"SALMEE\"]>0)&(df[\"SALMEERED_nan\"]==0),predl+[predicted]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "test18_df = df.loc[(df[\"ANNEE\"]==2018)&(df[\"SALMEE\"]>0)&(df[\"SALMEERED_nan\"]==0),predl+[predicted]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train = train_df[predicted]\n",
    "x_train = train_df.drop(columns=[predicted])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test18 = test18_df[predicted]\n",
    "x_test18 = test18_df.drop(columns=[predicted])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test = test_df[predicted]\n",
    "x_test = test_df.drop(columns=[predicted])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_log = np.log(y_train+1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([5.85000e+02, 1.73000e+02, 2.14400e+03, 1.88570e+04, 1.74188e+05,\n",
       "        8.43488e+05, 7.25560e+04, 1.59300e+03, 1.33000e+02, 3.00000e+01]),\n",
       " array([ 0.58778666,  1.81392005,  3.04005344,  4.26618683,  5.49232022,\n",
       "         6.71845361,  7.944587  ,  9.17072039, 10.39685378, 11.62298717,\n",
       "        12.84912056]),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(y_train_log)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.3 Entraînement du RN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "input_shape = x_train.shape[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.layers import Input, Dense, AlphaDropout, BatchNormalization, Concatenate\n",
    "from keras.models import Model\n",
    "\n",
    "inputs = Input(shape=(input_shape,))\n",
    "from keras import regularizers\n",
    "x1 = BatchNormalization()(inputs)\n",
    "x = Dense(500, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform',\n",
    "          kernel_regularizer=regularizers.l1(0.0000001))(x1)\n",
    "x = Dense(100, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform')(x)\n",
    "x = AlphaDropout(0.2)(x)\n",
    "x = Dense(50, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform',\n",
    "          kernel_regularizer=regularizers.l1(0.000001))(x)\n",
    "x = Dense(20, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform',\n",
    "          kernel_regularizer=regularizers.l1(0.000001))(x)\n",
    "x = Dense(20, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform')(x)\n",
    "x = Dense(8, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform')(x)\n",
    "x = Dense(4, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform')(x)\n",
    "x = Dense(2, activation='selu', kernel_initializer=\"lecun_uniform\", bias_initializer='lecun_uniform')(x)\n",
    "x = Concatenate(axis=1)([x, x1])\n",
    "predictions = Dense(1, activation='linear', kernel_regularizer=regularizers.l1(0.00001))(x)\n",
    "\n",
    "model1= Model(inputs=inputs, outputs=predictions)\n",
    "model1.compile(optimizer=tf.keras.optimizers.Adagrad(0.1),\n",
    "              loss='mse',\n",
    "              metrics=['mse', 'mae'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Le modèle est un peu particulier : la dernière couche caché rassemble l'output du RN proprement dit (incluant les non-linéarités composées) et les inputs, si bien que l'output du modèle total est une combinaison linéaire du RN et des inputs. Cela permet de reproduire rapidement les performances d'un modèle linéaire, et de concentrer l'entraînement du RN sur les gains prédictifs par rapport au modèle linéaire.\n",
    "\n",
    "En pratique, on ne parvient pas à des meilleures performances plus élevées que pour un RN classique, mais l'entraînement est beaucoup plus stable.\n",
    "\n",
    "Le modèle est entraîné en plusieurs étapes, en faisant varier le nombre d'époque et la taille de batch.\n",
    "\n",
    "Si les deux premières époques n'aboutissent pas déjà à un résultat satisfaisant sur l'échantillon de validation (val_mse<0.3 par exemple) on peut reprendre la cellule précédente pour entraîner un nouveau modèle à partir de 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/2\n",
      "15663/15663 [==============================] - 72s 5ms/step - loss: 0.1845 - mse: 0.1829 - mae: 0.2688 - val_loss: 0.1540 - val_mse: 0.1524 - val_mae: 0.2446\n",
      "Epoch 2/2\n",
      "15663/15663 [==============================] - 71s 5ms/step - loss: 0.1403 - mse: 0.1388 - mae: 0.2363 - val_loss: 0.1434 - val_mse: 0.1418 - val_mae: 0.2355\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(x_train, y_train_log, validation_split=0.1, batch_size=64, epochs=2, shuffle=False)\n",
    "# starts training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "hist_df = pd.DataFrame(history.history)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/2\n",
      "101/101 [==============================] - 22s 216ms/step - loss: 0.1337 - mse: 0.1322 - mae: 0.2240 - val_loss: 0.1331 - val_mse: 0.1315 - val_mae: 0.2250\n",
      "Epoch 2/2\n",
      "101/101 [==============================] - 21s 205ms/step - loss: 0.1302 - mse: 0.1286 - mae: 0.2205 - val_loss: 0.1312 - val_mse: 0.1297 - val_mae: 0.2230\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(x_train, y_train_log, validation_split=0.1, batch_size=10000, epochs=2, shuffle=False)\n",
    "# starts training"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "hist_df = pd.concat([hist_df, pd.DataFrame(history.history)], ignore_index=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "15663/15663 [==============================] - 71s 5ms/step - loss: 0.1344 - mse: 0.1328 - mae: 0.2293 - val_loss: 0.1367 - val_mse: 0.1352 - val_mae: 0.2292\n",
      "Epoch 2/10\n",
      "15663/15663 [==============================] - 70s 4ms/step - loss: 0.1314 - mse: 0.1298 - mae: 0.2257 - val_loss: 0.1350 - val_mse: 0.1335 - val_mae: 0.2261\n",
      "Epoch 3/10\n",
      "15663/15663 [==============================] - 72s 5ms/step - loss: 0.1294 - mse: 0.1278 - mae: 0.2232 - val_loss: 0.1345 - val_mse: 0.1329 - val_mae: 0.2252\n",
      "Epoch 4/10\n",
      "15663/15663 [==============================] - 72s 5ms/step - loss: 0.1279 - mse: 0.1263 - mae: 0.2216 - val_loss: 0.1335 - val_mse: 0.1319 - val_mae: 0.2228\n",
      "Epoch 5/10\n",
      "15663/15663 [==============================] - 72s 5ms/step - loss: 0.1267 - mse: 0.1251 - mae: 0.2201 - val_loss: 0.1326 - val_mse: 0.1311 - val_mae: 0.2224\n",
      "Epoch 6/10\n",
      "15663/15663 [==============================] - 73s 5ms/step - loss: 0.1257 - mse: 0.1241 - mae: 0.2190 - val_loss: 0.1317 - val_mse: 0.1301 - val_mae: 0.2202\n",
      "Epoch 7/10\n",
      "15663/15663 [==============================] - 74s 5ms/step - loss: 0.1248 - mse: 0.1232 - mae: 0.2180 - val_loss: 0.1323 - val_mse: 0.1307 - val_mae: 0.2220\n",
      "Epoch 8/10\n",
      "15663/15663 [==============================] - 73s 5ms/step - loss: 0.1240 - mse: 0.1224 - mae: 0.2172 - val_loss: 0.1299 - val_mse: 0.1283 - val_mae: 0.2201\n",
      "Epoch 9/10\n",
      "15663/15663 [==============================] - 71s 5ms/step - loss: 0.1232 - mse: 0.1216 - mae: 0.2165 - val_loss: 0.1294 - val_mse: 0.1278 - val_mae: 0.2194\n",
      "Epoch 10/10\n",
      "15663/15663 [==============================] - 73s 5ms/step - loss: 0.1225 - mse: 0.1209 - mae: 0.2157 - val_loss: 0.1294 - val_mse: 0.1278 - val_mae: 0.2186\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(x_train, y_train_log, validation_split=0.1, batch_size=64, epochs=10, shuffle=False)\n",
    "# continues training the same model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "hist_df = pd.concat([hist_df, pd.DataFrame(history.history)], ignore_index=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "101/101 [==============================] - 22s 217ms/step - loss: 0.1208 - mse: 0.1192 - mae: 0.2106 - val_loss: 0.1228 - val_mse: 0.1212 - val_mae: 0.2121\n",
      "Epoch 2/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1183 - mse: 0.1167 - mae: 0.2084 - val_loss: 0.1215 - val_mse: 0.1199 - val_mae: 0.2109\n",
      "Epoch 3/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1176 - mse: 0.1160 - mae: 0.2076 - val_loss: 0.1208 - val_mse: 0.1192 - val_mae: 0.2103\n",
      "Epoch 4/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1171 - mse: 0.1155 - mae: 0.2072 - val_loss: 0.1205 - val_mse: 0.1189 - val_mae: 0.2100\n",
      "Epoch 5/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1170 - mse: 0.1153 - mae: 0.2070 - val_loss: 0.1203 - val_mse: 0.1187 - val_mae: 0.2098\n",
      "Epoch 6/50\n",
      "101/101 [==============================] - 21s 211ms/step - loss: 0.1168 - mse: 0.1152 - mae: 0.2068 - val_loss: 0.1202 - val_mse: 0.1185 - val_mae: 0.2096\n",
      "Epoch 7/50\n",
      "101/101 [==============================] - 21s 211ms/step - loss: 0.1166 - mse: 0.1150 - mae: 0.2067 - val_loss: 0.1201 - val_mse: 0.1185 - val_mae: 0.2096\n",
      "Epoch 8/50\n",
      "101/101 [==============================] - 21s 212ms/step - loss: 0.1165 - mse: 0.1149 - mae: 0.2066 - val_loss: 0.1199 - val_mse: 0.1183 - val_mae: 0.2094\n",
      "Epoch 9/50\n",
      "101/101 [==============================] - 21s 213ms/step - loss: 0.1164 - mse: 0.1148 - mae: 0.2064 - val_loss: 0.1199 - val_mse: 0.1183 - val_mae: 0.2094\n",
      "Epoch 10/50\n",
      "101/101 [==============================] - 21s 211ms/step - loss: 0.1163 - mse: 0.1147 - mae: 0.2063 - val_loss: 0.1197 - val_mse: 0.1181 - val_mae: 0.2092\n",
      "Epoch 11/50\n",
      "101/101 [==============================] - 21s 211ms/step - loss: 0.1162 - mse: 0.1145 - mae: 0.2062 - val_loss: 0.1197 - val_mse: 0.1181 - val_mae: 0.2092\n",
      "Epoch 12/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1161 - mse: 0.1145 - mae: 0.2061 - val_loss: 0.1197 - val_mse: 0.1180 - val_mae: 0.2091\n",
      "Epoch 13/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1160 - mse: 0.1144 - mae: 0.2060 - val_loss: 0.1196 - val_mse: 0.1180 - val_mae: 0.2090\n",
      "Epoch 14/50\n",
      "101/101 [==============================] - 21s 211ms/step - loss: 0.1158 - mse: 0.1142 - mae: 0.2059 - val_loss: 0.1196 - val_mse: 0.1179 - val_mae: 0.2090\n",
      "Epoch 15/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1159 - mse: 0.1143 - mae: 0.2059 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2089\n",
      "Epoch 16/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1158 - mse: 0.1142 - mae: 0.2059 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2090\n",
      "Epoch 17/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1158 - mse: 0.1142 - mae: 0.2059 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2089\n",
      "Epoch 18/50\n",
      "101/101 [==============================] - 21s 212ms/step - loss: 0.1157 - mse: 0.1141 - mae: 0.2057 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2088\n",
      "Epoch 19/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1157 - mse: 0.1140 - mae: 0.2057 - val_loss: 0.1193 - val_mse: 0.1177 - val_mae: 0.2088\n",
      "Epoch 20/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1156 - mse: 0.1140 - mae: 0.2056 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2089\n",
      "Epoch 21/50\n",
      "101/101 [==============================] - 21s 212ms/step - loss: 0.1157 - mse: 0.1140 - mae: 0.2056 - val_loss: 0.1193 - val_mse: 0.1177 - val_mae: 0.2088\n",
      "Epoch 22/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1155 - mse: 0.1139 - mae: 0.2056 - val_loss: 0.1192 - val_mse: 0.1176 - val_mae: 0.2087\n",
      "Epoch 23/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1155 - mse: 0.1139 - mae: 0.2055 - val_loss: 0.1192 - val_mse: 0.1176 - val_mae: 0.2087\n",
      "Epoch 24/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1154 - mse: 0.1138 - mae: 0.2054 - val_loss: 0.1192 - val_mse: 0.1176 - val_mae: 0.2087\n",
      "Epoch 25/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1154 - mse: 0.1138 - mae: 0.2053 - val_loss: 0.1192 - val_mse: 0.1176 - val_mae: 0.2087\n",
      "Epoch 26/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1154 - mse: 0.1138 - mae: 0.2054 - val_loss: 0.1192 - val_mse: 0.1176 - val_mae: 0.2087\n",
      "Epoch 27/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1153 - mse: 0.1137 - mae: 0.2054 - val_loss: 0.1191 - val_mse: 0.1175 - val_mae: 0.2086\n",
      "Epoch 28/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1152 - mse: 0.1136 - mae: 0.2053 - val_loss: 0.1191 - val_mse: 0.1174 - val_mae: 0.2086\n",
      "Epoch 29/50\n",
      "101/101 [==============================] - 21s 206ms/step - loss: 0.1153 - mse: 0.1137 - mae: 0.2054 - val_loss: 0.1191 - val_mse: 0.1175 - val_mae: 0.2086\n",
      "Epoch 30/50\n",
      "101/101 [==============================] - 21s 207ms/step - loss: 0.1152 - mse: 0.1136 - mae: 0.2052 - val_loss: 0.1191 - val_mse: 0.1175 - val_mae: 0.2086\n",
      "Epoch 31/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1151 - mse: 0.1135 - mae: 0.2051 - val_loss: 0.1191 - val_mse: 0.1175 - val_mae: 0.2086\n",
      "Epoch 32/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1152 - mse: 0.1136 - mae: 0.2052 - val_loss: 0.1190 - val_mse: 0.1174 - val_mae: 0.2085\n",
      "Epoch 33/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1151 - mse: 0.1135 - mae: 0.2051 - val_loss: 0.1190 - val_mse: 0.1174 - val_mae: 0.2085\n",
      "Epoch 34/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1151 - mse: 0.1135 - mae: 0.2051 - val_loss: 0.1191 - val_mse: 0.1174 - val_mae: 0.2085\n",
      "Epoch 35/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1151 - mse: 0.1135 - mae: 0.2051 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 36/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1150 - mse: 0.1134 - mae: 0.2050 - val_loss: 0.1190 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 37/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1150 - mse: 0.1134 - mae: 0.2050 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 38/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1150 - mse: 0.1134 - mae: 0.2051 - val_loss: 0.1190 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 39/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2049 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 40/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1149 - mse: 0.1133 - mae: 0.2050 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 41/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2049 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2083\n",
      "Epoch 42/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2048 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2083\n",
      "Epoch 43/50\n",
      "101/101 [==============================] - 21s 208ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2049 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n",
      "Epoch 44/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2048 - val_loss: 0.1189 - val_mse: 0.1172 - val_mae: 0.2084\n",
      "Epoch 45/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1149 - mse: 0.1132 - mae: 0.2049 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n",
      "Epoch 46/50\n",
      "101/101 [==============================] - 21s 212ms/step - loss: 0.1149 - mse: 0.1133 - mae: 0.2049 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 47/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1148 - mse: 0.1131 - mae: 0.2048 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n",
      "Epoch 48/50\n",
      "101/101 [==============================] - 21s 210ms/step - loss: 0.1147 - mse: 0.1130 - mae: 0.2048 - val_loss: 0.1188 - val_mse: 0.1171 - val_mae: 0.2082\n",
      "Epoch 49/50\n",
      "101/101 [==============================] - 21s 209ms/step - loss: 0.1147 - mse: 0.1131 - mae: 0.2047 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n",
      "Epoch 50/50\n",
      "101/101 [==============================] - 21s 205ms/step - loss: 0.1147 - mse: 0.1130 - mae: 0.2048 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(x_train, y_train_log, validation_split=0.1, batch_size=10000, epochs=50, shuffle=False)\n",
    "# continues training the same model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "hist_df = pd.concat([hist_df, pd.DataFrame(history.history)], ignore_index=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1161 - mse: 0.1145 - mae: 0.2060 - val_loss: 0.1189 - val_mse: 0.1172 - val_mae: 0.2082\n",
      "Epoch 2/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1158 - mse: 0.1142 - mae: 0.2058 - val_loss: 0.1200 - val_mse: 0.1183 - val_mae: 0.2096\n",
      "Epoch 3/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1157 - mse: 0.1141 - mae: 0.2057 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2087\n",
      "Epoch 4/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1154 - mse: 0.1138 - mae: 0.2055 - val_loss: 0.1199 - val_mse: 0.1183 - val_mae: 0.2096\n",
      "Epoch 5/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1154 - mse: 0.1138 - mae: 0.2054 - val_loss: 0.1186 - val_mse: 0.1170 - val_mae: 0.2080\n",
      "Epoch 6/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1152 - mse: 0.1136 - mae: 0.2053 - val_loss: 0.1201 - val_mse: 0.1185 - val_mae: 0.2099\n",
      "Epoch 7/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1150 - mse: 0.1134 - mae: 0.2052 - val_loss: 0.1191 - val_mse: 0.1175 - val_mae: 0.2087\n",
      "Epoch 8/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2051 - val_loss: 0.1196 - val_mse: 0.1180 - val_mae: 0.2091\n",
      "Epoch 9/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1148 - mse: 0.1132 - mae: 0.2050 - val_loss: 0.1193 - val_mse: 0.1176 - val_mae: 0.2089\n",
      "Epoch 10/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1147 - mse: 0.1131 - mae: 0.2048 - val_loss: 0.1198 - val_mse: 0.1182 - val_mae: 0.2100\n",
      "Epoch 11/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1146 - mse: 0.1130 - mae: 0.2048 - val_loss: 0.1204 - val_mse: 0.1187 - val_mae: 0.2105\n",
      "Epoch 12/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1145 - mse: 0.1128 - mae: 0.2048 - val_loss: 0.1191 - val_mse: 0.1174 - val_mae: 0.2087\n",
      "Epoch 13/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1143 - mse: 0.1127 - mae: 0.2045 - val_loss: 0.1195 - val_mse: 0.1178 - val_mae: 0.2090\n",
      "Epoch 14/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1142 - mse: 0.1126 - mae: 0.2045 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n",
      "Epoch 15/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1141 - mse: 0.1125 - mae: 0.2044 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2084\n",
      "Epoch 16/50\n",
      "940/940 [==============================] - 35s 38ms/step - loss: 0.1140 - mse: 0.1124 - mae: 0.2043 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2088\n",
      "Epoch 17/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1140 - mse: 0.1124 - mae: 0.2042 - val_loss: 0.1198 - val_mse: 0.1182 - val_mae: 0.2100\n",
      "Epoch 18/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1138 - mse: 0.1122 - mae: 0.2042 - val_loss: 0.1188 - val_mse: 0.1172 - val_mae: 0.2083\n",
      "Epoch 19/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1137 - mse: 0.1121 - mae: 0.2040 - val_loss: 0.1185 - val_mse: 0.1169 - val_mae: 0.2081\n",
      "Epoch 20/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1136 - mse: 0.1120 - mae: 0.2040 - val_loss: 0.1181 - val_mse: 0.1165 - val_mae: 0.2076\n",
      "Epoch 21/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1134 - mse: 0.1118 - mae: 0.2038 - val_loss: 0.1189 - val_mse: 0.1173 - val_mae: 0.2087\n",
      "Epoch 22/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1135 - mse: 0.1119 - mae: 0.2037 - val_loss: 0.1186 - val_mse: 0.1170 - val_mae: 0.2081\n",
      "Epoch 23/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1133 - mse: 0.1117 - mae: 0.2037 - val_loss: 0.1183 - val_mse: 0.1167 - val_mae: 0.2079\n",
      "Epoch 24/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1133 - mse: 0.1116 - mae: 0.2037 - val_loss: 0.1179 - val_mse: 0.1163 - val_mae: 0.2070\n",
      "Epoch 25/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1132 - mse: 0.1116 - mae: 0.2036 - val_loss: 0.1182 - val_mse: 0.1166 - val_mae: 0.2076\n",
      "Epoch 26/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1131 - mse: 0.1115 - mae: 0.2035 - val_loss: 0.1185 - val_mse: 0.1169 - val_mae: 0.2078\n",
      "Epoch 27/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1129 - mse: 0.1113 - mae: 0.2034 - val_loss: 0.1181 - val_mse: 0.1165 - val_mae: 0.2077\n",
      "Epoch 28/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1130 - mse: 0.1114 - mae: 0.2034 - val_loss: 0.1176 - val_mse: 0.1160 - val_mae: 0.2068\n",
      "Epoch 29/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1128 - mse: 0.1112 - mae: 0.2033 - val_loss: 0.1175 - val_mse: 0.1159 - val_mae: 0.2068\n",
      "Epoch 30/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1128 - mse: 0.1112 - mae: 0.2032 - val_loss: 0.1180 - val_mse: 0.1164 - val_mae: 0.2075\n",
      "Epoch 31/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1126 - mse: 0.1110 - mae: 0.2031 - val_loss: 0.1182 - val_mse: 0.1166 - val_mae: 0.2081\n",
      "Epoch 32/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1126 - mse: 0.1110 - mae: 0.2032 - val_loss: 0.1184 - val_mse: 0.1168 - val_mae: 0.2076\n",
      "Epoch 33/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1125 - mse: 0.1109 - mae: 0.2029 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2062\n",
      "Epoch 34/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1124 - mse: 0.1108 - mae: 0.2030 - val_loss: 0.1181 - val_mse: 0.1165 - val_mae: 0.2077\n",
      "Epoch 35/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1123 - mse: 0.1106 - mae: 0.2028 - val_loss: 0.1180 - val_mse: 0.1164 - val_mae: 0.2074\n",
      "Epoch 36/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1123 - mse: 0.1107 - mae: 0.2029 - val_loss: 0.1178 - val_mse: 0.1162 - val_mae: 0.2076\n",
      "Epoch 37/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1123 - mse: 0.1107 - mae: 0.2028 - val_loss: 0.1194 - val_mse: 0.1178 - val_mae: 0.2107\n",
      "Epoch 38/50\n",
      "940/940 [==============================] - 35s 37ms/step - loss: 0.1121 - mse: 0.1105 - mae: 0.2027 - val_loss: 0.1183 - val_mse: 0.1167 - val_mae: 0.2081\n",
      "Epoch 39/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1121 - mse: 0.1105 - mae: 0.2027 - val_loss: 0.1180 - val_mse: 0.1164 - val_mae: 0.2071\n",
      "Epoch 40/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1120 - mse: 0.1104 - mae: 0.2026 - val_loss: 0.1174 - val_mse: 0.1158 - val_mae: 0.2066\n",
      "Epoch 41/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1119 - mse: 0.1103 - mae: 0.2026 - val_loss: 0.1169 - val_mse: 0.1152 - val_mae: 0.2057\n",
      "Epoch 42/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1118 - mse: 0.1102 - mae: 0.2025 - val_loss: 0.1167 - val_mse: 0.1151 - val_mae: 0.2056\n",
      "Epoch 43/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1119 - mse: 0.1103 - mae: 0.2025 - val_loss: 0.1181 - val_mse: 0.1164 - val_mae: 0.2078\n",
      "Epoch 44/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1118 - mse: 0.1102 - mae: 0.2024 - val_loss: 0.1177 - val_mse: 0.1160 - val_mae: 0.2074\n",
      "Epoch 45/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1117 - mse: 0.1101 - mae: 0.2024 - val_loss: 0.1173 - val_mse: 0.1157 - val_mae: 0.2064\n",
      "Epoch 46/50\n",
      "940/940 [==============================] - 34s 37ms/step - loss: 0.1115 - mse: 0.1099 - mae: 0.2021 - val_loss: 0.1168 - val_mse: 0.1152 - val_mae: 0.2057\n",
      "Epoch 47/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1116 - mse: 0.1100 - mae: 0.2023 - val_loss: 0.1176 - val_mse: 0.1160 - val_mae: 0.2070\n",
      "Epoch 48/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1115 - mse: 0.1099 - mae: 0.2022 - val_loss: 0.1180 - val_mse: 0.1164 - val_mae: 0.2074\n",
      "Epoch 49/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1114 - mse: 0.1098 - mae: 0.2021 - val_loss: 0.1179 - val_mse: 0.1163 - val_mae: 0.2068\n",
      "Epoch 50/50\n",
      "940/940 [==============================] - 34s 36ms/step - loss: 0.1113 - mse: 0.1097 - mae: 0.2021 - val_loss: 0.1176 - val_mse: 0.1160 - val_mae: 0.2066\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(x_train, y_train_log, validation_split=0.1, batch_size=1067, epochs=50, shuffle=True)\n",
    "# continues training the same model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "hist_df = pd.concat([hist_df, pd.DataFrame(history.history)], ignore_index=True) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "100/100 [==============================] - 22s 218ms/step - loss: 0.1103 - mse: 0.1087 - mae: 0.2008 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2063\n",
      "Epoch 2/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1103 - mse: 0.1087 - mae: 0.2007 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 3/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2007 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2063\n",
      "Epoch 4/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1102 - mse: 0.1086 - mae: 0.2007 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2061\n",
      "Epoch 5/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 6/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1102 - mse: 0.1086 - mae: 0.2007 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2064\n",
      "Epoch 7/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2006 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 8/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 9/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2006 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2064\n",
      "Epoch 10/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1102 - mse: 0.1086 - mae: 0.2006 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 11/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1100 - mse: 0.1084 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 12/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2006 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 13/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1100 - mse: 0.1084 - mae: 0.2005 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 14/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1100 - mse: 0.1084 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 15/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1101 - mse: 0.1085 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 16/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1100 - mse: 0.1084 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 17/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1100 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 18/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2063\n",
      "Epoch 19/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 20/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1100 - mse: 0.1084 - mae: 0.2006 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 21/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 22/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1100 - mse: 0.1084 - mae: 0.2006 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2061\n",
      "Epoch 23/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 24/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 25/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 26/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2004 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 27/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 28/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 29/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1098 - mse: 0.1081 - mae: 0.2003 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 30/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 31/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 32/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 33/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 34/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2004 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 35/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2064\n",
      "Epoch 36/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1099 - mse: 0.1083 - mae: 0.2005 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 37/50\n",
      "100/100 [==============================] - 21s 209ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2062\n",
      "Epoch 38/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2003 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 39/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1098 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1169 - val_mse: 0.1153 - val_mae: 0.2060\n",
      "Epoch 40/50\n",
      "100/100 [==============================] - 21s 209ms/step - loss: 0.1098 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 41/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2004 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2064\n",
      "Epoch 42/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1099 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 43/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1098 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 44/50\n",
      "100/100 [==============================] - 21s 211ms/step - loss: 0.1098 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 45/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2004 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2061\n",
      "Epoch 46/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2003 - val_loss: 0.1171 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 47/50\n",
      "100/100 [==============================] - 22s 216ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2003 - val_loss: 0.1170 - val_mse: 0.1154 - val_mae: 0.2062\n",
      "Epoch 48/50\n",
      "100/100 [==============================] - 21s 210ms/step - loss: 0.1098 - mse: 0.1082 - mae: 0.2004 - val_loss: 0.1172 - val_mse: 0.1155 - val_mae: 0.2063\n",
      "Epoch 49/50\n",
      "100/100 [==============================] - 21s 212ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2003 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2064\n",
      "Epoch 50/50\n",
      "100/100 [==============================] - 21s 207ms/step - loss: 0.1097 - mse: 0.1081 - mae: 0.2003 - val_loss: 0.1172 - val_mse: 0.1156 - val_mae: 0.2064\n"
     ]
    }
   ],
   "source": [
    "history = model1.fit(x_train, y_train_log, validation_split=0.1, batch_size=10111, epochs=50, shuffle=False)\n",
    "# continues training the same model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "hist_df = pd.concat([hist_df, pd.DataFrame(history.history)], ignore_index=True) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.4 Analyse et enregistrement du modèle"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On analyse les résultat visuellement en faisant un graphique de la log-mse sur les échantillons d'entraînement et de validation. Pour qu'il soit plus lisible, on peut caler chaque courbe sur un minorant approximatif respectif."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "min_train = 0.103\n",
    "min_val = 0.11"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(np.log(hist_df['mse']-min_train), label=\"mse (échantillon d'entraînement)\")\n",
    "plt.plot(np.log(hist_df['val_mse']-min_val), label=\"mse (échantillon de validation)\")\n",
    "plt.title('Erreur quadratique moyenne, prédiction du log-salaire EEC')\n",
    "plt.ylabel('log MSE')\n",
    "plt.xlabel('Nb. epoques')\n",
    "plt.legend(loc=\"best\")\n",
    "plt.savefig('train_val_mse.png', bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Si la performance sur l'échantillon de validation est bonne, on sauvegarde le modèle, son historique d'entraînement, et les noms des colonnes sélectionnées."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Assets written to: X:/HAB-deep-learning-pour-ssp/models/02_24PM_on_October_04_2022\\assets\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-10-04 14:24:39,629 : INFO : Assets written to: X:/HAB-deep-learning-pour-ssp/models/02_24PM_on_October_04_2022\\assets\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved model to disk\n",
      "X:/HAB-deep-learning-pour-ssp/models/02_24PM_on_October_04_2022\n",
      "Saved history to disk\n",
      "X:/HAB-deep-learning-pour-ssp/models/history/02_24PM_on_October_04_2022.csv\n",
      "Saved train columns to disk\n",
      "X:/HAB-deep-learning-pour-ssp/models/traincol/02_24PM_on_October_04_2022.csv\n"
     ]
    }
   ],
   "source": [
    "if history.history['val_mse'][-1] < 0.15:\n",
    "    modelname = datetime.datetime.now().strftime(\"%I_%M%p_on_%B_%d_%Y\")\n",
    "    pathname = modelpath + modelname\n",
    "    model1.save(pathname)\n",
    "    print(\"Saved model to disk\")\n",
    "    print(pathname)\n",
    "    history_pathname = modelpath + 'history/' + modelname + '.csv'\n",
    "    hist_df.to_csv(history_pathname)\n",
    "    print(\"Saved history to disk\")\n",
    "    print(history_pathname)\n",
    "    traincol = pd.DataFrame(train_df.columns.drop(predicted))\n",
    "    traincol_pathname = modelpath + 'traincol/' + modelname + '.csv'\n",
    "    traincol.to_csv(traincol_pathname)\n",
    "    print(\"Saved train columns to disk\")\n",
    "    print(traincol_pathname)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1a5acde84c8>]"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(np.log(hist_df['val_loss']),np.log(hist_df['loss']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1418,
   "metadata": {},
   "outputs": [],
   "source": [
    "#plt.plot(hist_df['val_mse'],hist_df['val_exponential_mse'], 'bo',label='validation data')\n",
    "#plt.plot(hist_df['mse'],hist_df['exponential_mse'], 'go',label='training data')\n",
    "#plt.title('Log_wage loss and Wage loss')\n",
    "#plt.ylabel('Wage MSE')\n",
    "#plt.xlabel('Log-wage MSE')\n",
    "#plt.legend(loc=\"best\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4. Evaluation sur l'échantillon test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pour éviter de \"tricher\" (et risquer un surapprentissage invisible), on ne mobilise l'échantillon test qu'une seule fois, en fin de processus, le modèle étant déjà choisi et entraîné."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Chargement d'un modèle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"functional_1\"\n",
      "__________________________________________________________________________________________________\n",
      "Layer (type)                    Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      "input_1 (InputLayer)            [(None, 346)]        0                                            \n",
      "__________________________________________________________________________________________________\n",
      "batch_normalization (BatchNorma (None, 346)          1384        input_1[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "dense (Dense)                   (None, 500)          173500      batch_normalization[0][0]        \n",
      "__________________________________________________________________________________________________\n",
      "dense_1 (Dense)                 (None, 100)          50100       dense[0][0]                      \n",
      "__________________________________________________________________________________________________\n",
      "alpha_dropout (AlphaDropout)    (None, 100)          0           dense_1[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "dense_2 (Dense)                 (None, 50)           5050        alpha_dropout[0][0]              \n",
      "__________________________________________________________________________________________________\n",
      "dense_3 (Dense)                 (None, 20)           1020        dense_2[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "dense_4 (Dense)                 (None, 20)           420         dense_3[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "dense_5 (Dense)                 (None, 8)            168         dense_4[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "dense_6 (Dense)                 (None, 4)            36          dense_5[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "dense_7 (Dense)                 (None, 2)            10          dense_6[0][0]                    \n",
      "__________________________________________________________________________________________________\n",
      "concatenate (Concatenate)       (None, 348)          0           dense_7[0][0]                    \n",
      "                                                                 batch_normalization[0][0]        \n",
      "__________________________________________________________________________________________________\n",
      "dense_8 (Dense)                 (None, 1)            349         concatenate[0][0]                \n",
      "==================================================================================================\n",
      "Total params: 232,037\n",
      "Trainable params: 231,345\n",
      "Non-trainable params: 692\n",
      "__________________________________________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "#smodel = tf.keras.models.load_model(modelpath+'11_07PM_on_March_28_2022')\n",
    "smodel = model1\n",
    "\n",
    "# Check its architecture\n",
    "smodel.summary()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.2 Estimation sur échantillon test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Calcul du (pseudo-) R2 sur échantillon test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On définit une fonction d'estimation de la performance sur un échantillon"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "def perfestim(df, model, predvar):\n",
    "    '''\n",
    "    df: the sample on which the prediction performances are evaluated\n",
    "    model: trained predictor to be evaluated\n",
    "    predvar: the name of the column to predict in df\n",
    "    '''\n",
    "    x = df.drop(columns=[predvar])\n",
    "    y = df.loc[:,[predvar]]\n",
    "    y[\"log_SAL\"] = np.log(y+1)\n",
    "    y[\"log_SALPRED\"] = model.predict(x)\n",
    "    y[\"SALPRED\"] = np.exp(y[\"log_SALPRED\"])\n",
    "    \n",
    "    lvarsal = y[\"log_SAL\"].var()\n",
    "    lvarp = y[\"log_SALPRED\"].var()\n",
    "    lvarpred = (y[\"log_SAL\"]-y[\"log_SALPRED\"]).var()\n",
    "    lR2 = 1 - (lvarpred/lvarsal)\n",
    "    \n",
    "    varsal = y[predvar].var()\n",
    "    varp = y[\"SALPRED\"].var()\n",
    "    varpred = (y[predicted]-y[\"SALPRED\"]).var()\n",
    "    R2 = 1 - (varpred/varsal)\n",
    "    \n",
    "    results = {\n",
    "        \"Variance totale log-salaire\": lvarsal,\n",
    "        \"Variance du prédicteur du log-salaire\": lvarp,\n",
    "        \"Variance des résidus du log-salaire\": lvarpred,\n",
    "        \"R2 log-salaire\": lR2,\n",
    "        \"Variance totale salaire\": varsal,\n",
    "        \"Variance du prédicteur du salaire\": varp,\n",
    "        \"Variance des résidus du salaire\": varpred,\n",
    "        \"R2 salaire\": R2\n",
    "    }\n",
    "    \n",
    "    return [y, results]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "RNperf = perfestim(df=test_df, model=smodel, predvar=predicted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.4115341030046739, 'Variance du prédicteur du log-salaire': 0.3278769850730896, 'Variance des résidus du log-salaire': 0.11885775015141258, 'R2 log-salaire': 0.7111837165289248, 'Variance totale salaire': 2246984.6333126994, 'Variance du prédicteur du salaire': 547024.75, 'Variance des résidus du salaire': 1632906.992932268, 'R2 salaire': 0.2732896483920787}\n"
     ]
    }
   ],
   "source": [
    "print(RNperf[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On peut également regarder les performances sur des sous-échantillons tests: l'année 2018, le seul premier trimestre (test choisi pour le DT), ou seulement les personnes en première interrogation au premier trimestre 2018 (pour éviter toute \"contamination\" entre train et test par les réinterrogations)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "RNperf18 = perfestim(df=test18_df, model=smodel, predvar=predicted)\n",
    "RNperf18t1 = perfestim(df=test18_df.loc[test18_df.TRIM_1==1,], model=smodel, predvar=predicted)\n",
    "RNperf18t1r1 = perfestim(df=test18_df.loc[(test18_df.TRIM_1==1)&(test18_df.RGA_1==1),], model=smodel, predvar=predicted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.40021614820665274, 'Variance du prédicteur du log-salaire': 0.31670665740966797, 'Variance des résidus du log-salaire': 0.12557019881791212, 'R2 log-salaire': 0.6862440474214109, 'Variance totale salaire': 2664478.2905998337, 'Variance du prédicteur du salaire': 755989.9375, 'Variance des résidus du salaire': 1792878.4881361937, 'R2 salaire': 0.32711837268053834}\n",
      "{'Variance totale log-salaire': 0.40804679088513135, 'Variance du prédicteur du log-salaire': 0.33126145601272583, 'Variance des résidus du log-salaire': 0.11581858671877336, 'R2 log-salaire': 0.7161634662839995, 'Variance totale salaire': 2206705.372688974, 'Variance du prédicteur du salaire': 792100.125, 'Variance des résidus du salaire': 1240731.62960884, 'R2 salaire': 0.43774477328754113}\n",
      "{'Variance totale log-salaire': 0.40136757645660415, 'Variance du prédicteur du log-salaire': 0.33914390206336975, 'Variance des résidus du log-salaire': 0.10167172639230063, 'R2 log-salaire': 0.7466867471212055, 'Variance totale salaire': 3176474.955046984, 'Variance du prédicteur du salaire': 847440.0625, 'Variance des résidus du salaire': 2082767.7939244118, 'R2 salaire': 0.3443147440482165}\n"
     ]
    }
   ],
   "source": [
    "print(RNperf18[1])\n",
    "print(RNperf18t1[1])\n",
    "print(RNperf18t1r1[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On conserve les prédictions, et on produit des graphiques pour visualiser les performances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x1a589ce85c8>"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df18 = RNperf18[0]\n",
    "plt.hexbin(df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),predicted], \n",
    "           df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x1a5adde2c48>"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dfall = RNperf[0]\n",
    "plt.hexbin(dfall.loc[(dfall[predicted]<3000)&(dfall[\"SALPRED\"]<5000),predicted], \n",
    "           dfall.loc[(dfall[predicted]<3000)&(dfall[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Performance de prédiction par tranche"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "SALMEET = pd.cut(df18[predicted],bins=[0,499,999,1249,1499,1999,2499,2999,4999,7999,float(\"inf\")])\n",
    "SALPREDT = pd.cut(df18['SALPRED'],bins=[0,499,999,1249,1499,1999,2499,2999,4999,7999,float(\"inf\")])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_RN_salmee = pd.crosstab(SALPREDT, SALMEET, normalize='columns')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On visualise la sous-représentation ou sur-représentation des prédictions dans certaines tranches, en fonction de la vraie tranche. Les salaires de la plus haute tranche (8000 euros et plus) sont clairement sous-estimés par le prédicteur, un biais déjà bien connu sur les modèles de salaire classiques."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sn.heatmap(crosstab_RN_salmee)\n",
    "plt.savefig('crosstab_RN_salmee.png', bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Expérimentation du redressement du biais de logarithme"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On souhaite comparer prédictions et vraies valeurs sur certaines statistiques d'intérêt, qui portent en général sur les salaire en clair (et non en log). Cependant les modèles sont entraînés sur les log-salaires, ce qui peut induire un biais lorsqu'on revient au salaire. On essaye de corriger en multipliant les prédictions par l'exponentielle de la moitié de la variance des résidus du modèle en log. Cependant cette correction n'est valide que sous hypothèse de normalité des résidus.\n",
    "On vérifie que cette hypothèse est loin de la réalité ici. \n",
    "\n",
    "Selon l'entraînement, cette correction fonctionne plus ou moins bien, et augmente ou diminue la performance prédictive du modèle. Nous ne l'appliquons pas par la suite."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "t18 = pd.concat([x_test18,df18], axis=1)\n",
    "tall = pd.concat([x_test,dfall], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "tall[\"logRESIDU\"] = np.log(tall[\"SALMEERED\"]) - np.log(tall[\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.026778701210260675"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(tall[\"logRESIDU\"]).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.12363914976630347"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sigma2rn = (tall[\"logRESIDU\"]).var()\n",
    "sigma2rn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXIAAAD4CAYAAADxeG0DAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8rg+JYAAAACXBIWXMAAAsTAAALEwEAmpwYAAAW20lEQVR4nO3deaxc5X3G8ec36129G68Ym0KgZIPkhhKgTcpeiiBSq4hUpKQptZSoFUmLaChqpaj9I6VVmkSJmliEqllKVpoFJWVPk6gBciEQFmPsYBZjwNfG613mzvLrH3Nm8cy99sVzZua+4+9HGs057znnPe+L7Yd33nPOjLm7AADhSnS7AQCA1hDkABA4ghwAAkeQA0DgCHIACFyqGyddtmyZr1+/vhunBoBgPfLII7vdfXljeVeCfP369RodHe3GqQEgWGb2wkzlTK0AQOAIcgAIHEEOAIEjyAEgcAQ5AASOIAeAwBHkABA4ghwAOmDnvkl9+u4t2r57PPa6CXIA6IBX9k/pc/dv04uvT8ReN0EOAIEjyAEgcAQ5AHRE+35WkyAHgA6yNtRJkANA4AhyAAgcQQ4AgSPIAaADvH3XOglyAOgka8PVToIcAAIXW5CbWdLMfmVmd8ZVJwDg6OIckV8vaXOM9QFAz2jjFHk8QW5mayX9oaRb46gPAHqVteGRoLhG5J+RdKOk0mw7mNlGMxs1s9GxsbGYTgsAaDnIzewKSbvc/ZEj7efum9x9xN1Hli9f3uppAQCROEbk50m60syel/QNSReY2ddiqBcAMActB7m73+Tua919vaSrJd3v7te03DIA6CE8EAQAPaIdDwSl4qzM3X8i6Sdx1gkAODJG5AAQOIIcADrA2zhJTpADQAdUYpxfCAKAQHkbk5wgB4AO8GhMnmjDbSsEOQB0QGVEztQKAASqGuSMyAEgTJWpFX4hCAACVRmRJwhyAAhTqY23rRDkANAB1RhnRA4AgapOrTAiB4AgVaZWuP0QAAJVu/0w/roJcgDogNqlTqZWACBIxVL5t+kTbUhdghwAOiBXKAd5NpWMvW6CHAA6YLoa5PHHLkEOAB2QI8gBIGyVEXmGIAeAMM3rOXIzO9HMHjCzzWb2lJldH0fDAKCXtHNEnoqhjoKkv3H3R81sWNIjZnaPuz8dQ90A0BNyhaKSCVOyDV9/2PL/Gtz9FXd/NFo+KGmzpDWt1gsAvSRfLCmTbM9sdqy1mtl6SWdJemiGbRvNbNTMRsfGxuI8LQDMe9OFUlumVaQYg9zMhiR9V9LH3P1A43Z33+TuI+4+snz58rhOCwBBmC7O8yA3s7TKIf51d78jjjoBoJfkCvN4asXKvyT6ZUmb3f3TrTcJAHrPVL6o/kz8tx5K8YzIz5P0QUkXmNlj0evyGOoFgJ4xMV3UQJuCvOXbD93952rPd6UDQM+YmC6qPz1/R+QAgKOYbOOInCAHgA6YmC5oIBPHM5jNCHIA6IBDuYIGs4zIASBIhWJJYwdzOmG4ry31E+QA0GavHcyp5NLqRf1tqZ8gB4A22/H6hCRp9SJG5AAQpGdePShJOn3lgrbUT5ADQJs9tH2PVizIasWCbFvqJ8gBoI12HZzSfZt36eIzVqj8jSbxI8gBoI1u/dl25YslXXf+yW07B0EOAG2yffe4vvqLF3Tl21dr/bLBtp2nPY8ZAcBxbtuug7rm1ofVl07ohktPa+u5GJEDQIzcXXc/9are/6UHVXTX7RvP0drFA209JyNyAIjBeK6g7z32sr7yfy9oy2sHdfrKYX3xmne2dUqlgiAHgGM0lS9q9Pm9uufpV3XHr17WwamC3rx6gW75o7fpfWetadtPuzUiyAFgDtxdO/dP6Ykd+/TEy/v16Av79MiLe6s/qnzpm1fqQ+eepHesW9y22wxnQ5ADQJ2J6YJe3jup7bvHtX33uJ4bG9e2sUN69rWDOjhVkCQlE6bfXjWsD55zks47ZanOOXlp276idi4IcgA9zd11YLKgPeM5vT4+rT3j03o9eu05NK3Xx3PaEy2/sn9Seyfyhx2/bCijk5cN6aozV+u0FcN669pFOn3lsPra9Gs/x4IgBxAMd1euUNKhXEH7JvLac2iGcB6PwvlQraxQ8hnrG8gktWQwo6WDGa1YkNWZ6xZpzaJ+rV3cr5OWDmrDskEt7E93uJdvHEEOoG0KxZIm8kVNTRc1Eb3GpwsazxU0nitqPFfQoVy0Pl2MyqOy6YIO5YqaOKysqOIsoSxJw30pLR3MaMlgRmsXD+jtaxdpyVCmWlYO7Wy1bD6NqltBkAPHkVKpPKKdyhc1VShqKl/S5HRlufIqVd8no7JcvqipQrRvtFzbv3bMZLSci5ZnGwnPJJNKaCib0kAmqaFsSoPZlBb2p7VmUZ8GMqmoLKnBbEqDmZQWDaSr4bxsKKvFA5mO3SUy38QS5GZ2maTPSkpKutXdPxVHvUAvKJVc08WScoWSpgslTRej9+p6sbatcXu0nCuUGvYpHrZPLl/Zp1xXLl8pL1aPzRWKyhfnHqyN+tIJ9aWT6k8n1ZdOKpuqrS8bSqkvKi+/atsGMkn1Z2rLg1FID2bKwVwJ7XTy+AzhOLQc5GaWlPQFSRdL2iHpl2b2A3d/utW6gTeiUCwpX/RaAEYhmC8eHor5uvdcoXZM437TxZLylffD9i3WzlMoKVcN3uIMIV1qKTwbpZOmTDKhbDqpTDKhTKr86ksnlE2VywYHU8qmyuvZVELZyrZUQtlo//66wO1PJ5VNJ9WXitYzleVaIGdTiY7fUoe5i2NEfrakbe7+nCSZ2TckXSWJIO9B7q5CyZtGg0cbVeYaArRc7k3B2hSkc9w3XyzpDXyKn5N00pSOwjKdTNSCM5lQOmXV9YWZdDlcU7XtlYCtX2/cXgnXI+1z2PZkQokEYYpmcQT5Gkkv1a3vkPQ7jTuZ2UZJGyVp3bp1MZwWUu0qfi5f0lShWDffWZv7zNXNXc40j9k8H1pbrtSVy9dGm3EGZqYalFYLzLogqwRof6ZSVg7QdLI5KNMN75n6OpMJpVMJZaP3+jqyhx0bHZMgNBGOOIJ8pr/tTf/U3X2TpE2SNDIyEvPYaf5xd03mizqUK+jQVEET0zNdFIouGk3XQnNyulS98HRYoOaLmowCtT6MpwpF+TH+16x8rG6a20wltXw4W13ORh+tZxotNo4qs42jyCgk64+tBanxcR2IQRxBvkPSiXXrayXtjKHeeWG6UNLr49PafSinfRN57Z2Y1r7JvPZPTOvAVEH7J/LaP1l+HZiK3ifzOpQrvOGRayphM14s6ksnNJhNaelQtC0VzWNGy311c5r9mUTd/GZjPcx5Ar0ojiD/paRTzWyDpJclXS3pT2Kot+0KxZJe3jepHXsntWPvhHbum9Kr+6e0c/+kxg7m9OqBKe1reMqrXl86oYX9aS3oS2thf1orFvTpTSuGNdyX0nBfSkPZtIb6UhqObqkqB23tolJj2HLVHsCxaDnI3b1gZn8p6S6Vbz+8zd2farllMXvtwJQef2mfntx5QM+8ckDbxg7pxT0Th93naiYtG8pq9cI+rV08oJH1i3XCcJ+WVh8oyGrRQFqLBsrBnU31xsMEAMIWy33k7v4jST+Ko6647J/M66fPjumnz47pF8/t0Y69k5KkhEkblg3q1BOGdNmbV2r90kGduGRAaxf3a8WCvuP2gQIA4eqpJzuLJddPtuzS7Q+/qAe2jKlYci0aSOucDUv1oXPX66x1i3XGqgXqzzCSBtA7eibIf7Z1TP9459N69rVDWj6c1XXnb9DFZ6zQWesWK8ltZAB6WPBBnisU9U93btZXH3xBG5YN6rNXn6nL37qKC4cAjhtBB3mp5Lrh27/WDx/fqevO36AbLj2tZ77NDADmKugg/+x9W/XDx3fqxstO00ffe0q3mwMAXRHs/MPW1w7qCw9s0/vOXK2PvOe3ut0cAOiaYIP8M/dtVTaV0N9fcQZPKAI4rgUZ5Psn8rr7qVd19dnrtHQo2+3mAEBXBRnk//PUK8oXXe87c023mwIAXRdkkP982x6tWJDVW9Ys6HZTAKDrggzyx17aq5GTljA3DgAKMMjHcwW99PqkTl853O2mAMC8EFyQb911SJJ06gqCHACkAIN8++5ykJ9ywmCXWwIA80NwQf7agZwkaeXC/i63BADmh+CCfNeBnAYzSQ1lg/52AQCITXBBvm9iWosGMt1uBgDMG8EF+YGpvBb2p7vdDACYN4IL8v2TBDkA1AsyyBf0Mz8OABXBBfnBqYIW9DEiB4CKloLczP7FzJ4xs1+b2X+b2aKY2jWrQ1MFDfUxIgeAilZH5PdIeou7v03Ss5Juar1Js3N3jU8XuPUQAOq0FOTufre7F6LVByWtbb1Js5vMF1VyaZAgB4CqOOfIPyzpx7NtNLONZjZqZqNjY2PHdIKJ6aIkaTDDDywDQMVRh7Zmdq+klTNsutndvx/tc7OkgqSvz1aPu2+StEmSRkZG/FgaO5UvB3k2TZADQMVRg9zdLzrSdjO7VtIVki5092MK6LmqBHkfQQ4AVS1NNpvZZZL+VtJ73H0inibNbipfkiT1pYK7axIA2qbVRPy8pGFJ95jZY2b2xRjaNCtG5ADQrKURubufEldD5iJfLM/cpJL8xBsAVAQ1R1GZgk/wW50AUBVWkEfvxDgA1IQV5FGSGyNyAKgKK8ijMTk5DgA1YQV5NCJPEOQAUBVUkJecWXIAaBRUkFdjnBwHgKqggryS5OQ4ANQEFeS1i51EOQBUhBXkjMgBoEmQQc6TnQBQE1SQV+5aIccBoCaoIG/rl50DQKDCCvLqI/rdbQcAzCdBBXllTG5c7gSAqqCCvHqxM6hWA0B7BRWJperth4zIAaAiqCDn2w8BoFlYQc4DQQDQJKwgj94ZkQNATVhBztfYAkCTWILczG4wMzezZXHUNxt+WAIAmrUc5GZ2oqSLJb3YenOOjG8/BIBmcYzI/03SjerAE/Rc7ASAZi0FuZldKelld398DvtuNLNRMxsdGxs7pvPxiD4ANEsdbQczu1fSyhk23Szp7yRdMpcTufsmSZskaWRk5JhG77VLnSQ5AFQcNcjd/aKZys3srZI2SHo8mrNeK+lRMzvb3V+NtZW1tkTnbkftABCmowb5bNz9CUknVNbN7HlJI+6+O4Z2zXLOyrnadQYACE9Y95Fz1woANDnmEXkjd18fV12zn6P8TowDQE1gI/IyBuQAUBNWkPM1tgDQJKwgj8bkPKIPADVhBTm/vgwATYIK8ipG5ABQFVSQMyAHgGZBBXllboWLnQBQE1aQR7j9EABqggpyplYAoFlYQc6TnQDQJKggr+C7VgCgJqggd24kB4AmYQV59M54HABqggryCmZWAKAmqCBnZgUAmoUV5NE7DwQBQE1QQV5FjgNAVVBBzl0rANAsqCCv4GInANQEGeQAgJqggpxH9AGgWctBbmZ/ZWZbzOwpM7sljkbN4ZydOA0ABCHVysFm9vuSrpL0NnfPmdkJ8TRrZs73HwJAk1ZH5B+R9Cl3z0mSu+9qvUmzY2oFAJq1GuRvkvS7ZvaQmf2vmb1rth3NbKOZjZrZ6NjYWEsnZWYFAGqOOrViZvdKWjnDppuj4xdLOkfSuyR9y8xO9hlu+Hb3TZI2SdLIyMgxzZEwsQIAzY4a5O5+0WzbzOwjku6IgvthMytJWiaptSH3rG2JzsvkCgBUtTq18j1JF0iSmb1JUkbS7hbrPCqmVgCgpqW7ViTdJuk2M3tS0rSka2eaVokLd60AQLOWgtzdpyVdE1Nb5nC+Tp0JAMIR1JOdFUytAEBNkEEOAKgJMsi5awUAaoIKcr6PHACaBRXkpSjHEwzIAaAqqCCvPhDE1U4AqAoryKP7yIlxAKgJK8irI/LutgMA5pOwgjx6Z2oFAGqCCnIe7QSAZkEFuYtpFQBoFFaQOxc6AaBRWEEuZ34cABqEFeSMyAGgSVhBLinBiBwADhNUkJcYkgNAk6CCXOQ4ADQJKsi5/RAAmoUV5O58FzkANAgsyBmRA0CjsIJczJEDQKOWgtzMzjSzB83sMTMbNbOz42rYTMojcqIcAOq1OiK/RdIn3f1MSf8QrbeNyxmRA0CDVoPcJS2IlhdK2tlifUc+GXMrANAk1eLxH5N0l5n9q8r/Uzh3th3NbKOkjZK0bt26Yz4hOQ4AhztqkJvZvZJWzrDpZkkXSvq4u3/XzN4v6cuSLpqpHnffJGmTJI2MjBzTF4u7uxL88jIAHOaoQe7uMwazJJnZVyRdH61+W9KtMbVrRiWe7ASAJq3Oke+U9J5o+QJJW1us74j4GlsAaNbqHPlfSPqsmaUkTSmaA2+Xt6xeqHyBn3sDgHrmXfgdzJGRER8dHe34eQEgZGb2iLuPNJYH9WQnAKAZQQ4AgSPIASBwBDkABI4gB4DAEeQAEDiCHAACR5ADQOC68kCQmY1JeuEYD18maXeMzZmvjod+Hg99lOhnL+l2H09y9+WNhV0J8laY2ehMTzb1muOhn8dDHyX62Uvmax+ZWgGAwBHkABC4EIN8U7cb0CHHQz+Phz5K9LOXzMs+BjdHDgA4XIgjcgBAHYIcAAIXVJCb2WVmtsXMtpnZJ7rdnqMxsxPN7AEz22xmT5nZ9VH5EjO7x8y2Ru+L6465KerfFjO7tK78nWb2RLTtcxb95p2ZZc3sm1H5Q2a2vuMdLbcjaWa/MrM7o/Ve7OMiM/uOmT0T/Zm+u9f6aWYfj/6uPmlmt5tZXy/00cxuM7NdZvZkXVlH+mVm10bn2Gpm17alg+4exEtSUtJvJJ0sKSPpcUlndLtdR2nzKknviJaHJT0r6QxJt0j6RFT+CUn/HC2fEfUrK2lD1N9ktO1hSe9W+fenfyzpD6Lyj0r6YrR8taRvdqmvfy3pvyTdGa33Yh//U9J10XJG0qJe6qekNZK2S+qP1r8l6UO90EdJvyfpHZKerCtre78kLZH0XPS+OFpeHHv/uvEP4hj/IN4t6a669Zsk3dTtdr3BPnxf0sWStkhaFZWtkrRlpj5Juivq9ypJz9SVf0DSl+r3iZZTKj91Zh3u11pJ96n8A9yVIO+1Pi5QOeSsobxn+qlykL8UhU5K0p2SLumVPkpar8ODvO39qt8n2vYlSR+Iu28hTa1U/pJV7IjKghB91DpL0kOSVrj7K5IUvZ8Q7TZbH9dEy43lhx3j7gVJ+yUtbUsnZvcZSTdKKtWV9VofT5Y0Juk/oimkW81sUD3UT3d/WdK/SnpR0iuS9rv73eqhPjboRL86klshBbnNUBbEvZNmNiTpu5I+5u4HjrTrDGV+hPIjHdMRZnaFpF3u/shcD5mhbF73MZJS+aP5v7v7WZLGVf44Ppvg+hnNEV+l8nTCakmDZnbNkQ6ZoWxe93GO4uxXR/obUpDvkHRi3fpaSTu71JY5M7O0yiH+dXe/Iyp+zcxWRdtXSdoVlc/Wxx3RcmP5YceYWUrSQkmvx9+TWZ0n6Uoze17SNyRdYGZfU2/1sdKGHe7+ULT+HZWDvZf6eZGk7e4+5u55SXdIOle91cd6nehXR3IrpCD/paRTzWyDmWVUvqDwgy636YiiK9pflrTZ3T9dt+kHkipXr69Vee68Un51dAV8g6RTJT0cfew7aGbnRHX+acMxlbr+WNL9Hk3GdYK73+Tua919vcp/Jve7+zXqoT5Kkru/KuklMzstKrpQ0tPqrX6+KOkcMxuI2nahpM3qrT7W60S/7pJ0iZktjj7xXBKVxasTFxlivFhxucp3fvxG0s3dbs8c2nu+yh+jfi3pseh1ucpzZ/dJ2hq9L6k75uaof1sUXRGPykckPRlt+7xqT+X2Sfq2pG0qX1E/uYv9fa9qFzt7ro+SzpQ0Gv15fk/luxB6qp+SPinpmah9X1X5zo3g+yjpdpXn/fMqj5L/vFP9kvThqHybpD9rR/94RB8AAhfS1AoAYAYEOQAEjiAHgMAR5AAQOIIcAAJHkANA4AhyAAjc/wPXCQVRlveF1AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import scipy.stats as stats\n",
    "residuals = sorted(tall[\"logRESIDU\"])\n",
    "normal_distribution = stats.norm.pdf(residuals, np.mean(residuals), np.std(residuals))\n",
    "plt.plot(residuals)\n",
    "\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(np.log(tall.loc[1:10000,\"SALPRED\"]),tall.loc[1:10000,\"logRESIDU\"])\n",
    "\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stats.probplot(residuals, dist=\"norm\", plot=plt)\n",
    "plt.title(\"Normal Q-Q plot\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [],
   "source": [
    "tall[\"SALPREDRED\"] = tall[\"SALPRED\"]*np.exp(sigma2rn/2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "tall[\"RESIDU\"] = (tall[\"SALMEERED\"]) - (tall[\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "105.33800982890092"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(tall[\"RESIDU\"]).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1632906.992932268"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(tall[\"RESIDU\"]).var()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [],
   "source": [
    "tall[\"corRESIDU\"] = (tall[\"SALMEERED\"]) - (tall[\"SALPREDRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15.807187597737933"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(tall[\"corRESIDU\"]).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1630856.2913191437"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(tall[\"corRESIDU\"]).var()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Statistiques d'intérêts sur salaires observés et imputés"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SALMEERED     1509.293501\n",
       "SALPRED       1403.959717\n",
       "SALPREDRED    1493.483032\n",
       "dtype: float64"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Moyenne et Moyennes annuelles\n",
    "ma = tall.loc[:,('ANNEE','SALMEERED','SALPRED','SALPREDRED')].groupby('ANNEE').mean()\n",
    "tall.loc[:,('SALMEERED','SALPRED','SALPREDRED')].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(ma['SALMEERED'], label=\"Salaire déclaré\")\n",
    "plt.plot(ma['SALPRED'], label=\"Salaire prédit\")\n",
    "plt.plot(ma['SALPREDRED'], label=\"Salaire prédit, corrigé du log\")\n",
    "plt.title('Salaire moyen par année')\n",
    "plt.ylabel('Salaire (en euros)')\n",
    "plt.legend(loc=\"best\")\n",
    "plt.savefig('salaire_moyen_annuel.png', bbox_inches='tight')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SALMEERED</th>\n",
       "      <th>SALPRED</th>\n",
       "      <th>SALPREDRED</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SEXE_1</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1292.244325</td>\n",
       "      <td>1214.008423</td>\n",
       "      <td>1291.426270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1716.184363</td>\n",
       "      <td>1585.012573</td>\n",
       "      <td>1686.089478</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          SALMEERED      SALPRED   SALPREDRED\n",
       "SEXE_1                                       \n",
       "0       1292.244325  1214.008423  1291.426270\n",
       "1       1716.184363  1585.012573  1686.089478"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Moyenne par sexe\n",
    "sx = tall.loc[:,('SEXE_1','SALMEERED','SALPRED','SALPREDRED')].groupby('SEXE_1').mean()\n",
    "sx"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4.3 Prédictions sur données manquantes avec réponses en tranches"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Entre 2013 et 2019, le salaire déclaré par tranche répond à la même question (tranches identiques) et est codé par des valeurs de SALMET de 1 à 10.\n",
    "\n",
    "On utilise le modèle pour prédire les salaires des enquêtés qui n'ont pas répondu en clair mais ont répondu en tranche. Il faut d'abord sélectionner cet échantillon et mettre en forme cette variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "salmetlist = ['SALMET_1','SALMET_2','SALMET_3','SALMET_4','SALMET_5','SALMET_6',\n",
    " 'SALMET_7','SALMET_8','SALMET_9','SALMET_10']\n",
    "keeplist = predl+salmetlist\n",
    "misslist = [i for i in keeplist if i in complete_col_list]\n",
    "miss_df = df.loc[(df[\"ANNEE\"]>2012)&(df[\"ANNEE\"]<2019)&(df[\"SALMET_new_nan\"]==0)&(df[\"SALMEE_nan\"]==1),misslist]\n",
    "miss_df[\"SALMET\"] = miss_df[\"SALMET_1\"]+2*miss_df[\"SALMET_2\"]+3*miss_df[\"SALMET_3\"]+4*miss_df[\"SALMET_4\"]+5*miss_df[\"SALMET_5\"]+6*miss_df[\"SALMET_6\"]+7*miss_df[\"SALMET_7\"]+8*miss_df[\"SALMET_8\"]+9*miss_df[\"SALMET_9\"]+10*miss_df[\"SALMET_10\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_testm = miss_df.loc[:,predl]\n",
    "dfm = miss_df.loc[:,[\"SALMET\"]]\n",
    "dfm[\"SALPRED\"] = np.exp(smodel.predict(x_testm))\n",
    "dfm = dfm.loc[dfm[\"SALMET\"]!=0,:]\n",
    "SALMET = dfm[\"SALMET\"]\n",
    "SALPREDT = pd.cut(dfm['SALPRED'],bins=[0,499,999,1249,1499,1999,2499,2999,4999,7999,float(\"inf\")])\n",
    "RN_tranches = pd.crosstab(SALPREDT,SALMET)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='SALMET', ylabel='SALPRED'>"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sn.heatmap(RN_tranches)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_RN_salmet = pd.crosstab(SALPREDT, SALMET, normalize='columns')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On visualise la sous-représentation ou la sur-représentation des prédictions par tranche en fonction de la vraie tranche, pour les enquêtés qui n'ont pas répondu pour leur salaire en clair. La structure ressemble à celle des enquêtés répondants de l'échantillon test, ce qui est rassurant et suggère que le modèle ne dérive pas lorsqu'il est confronté à de véritables non-répondants (en clair)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sn.heatmap(crosstab_RN_salmet)\n",
    "plt.savefig('crosstab_RN_salmet.png', bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On peut comparer directement ces erreurs de prédiction entre la population des répondants en clair (sur l'échantillon test) et la population des non-répondants en clair, mais répondants en tranche. Les écarts sont faibles, ce qui est rassurant, mais vont plutôt dans le sens d'une prédiction moins précise sur les véritables non-répondants."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "NR_diff = crosstab_RN_salmet.subtract(crosstab_RN_salmee.values, axis='index')\n",
    "sn.heatmap(NR_diff, cmap=\"PiYG\")\n",
    "plt.savefig('crosstab_RN_diff.png', bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5. Comparaisons"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5.1 Comparaison avec un modèle linéaire sur l'ensemble des features du RN"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On exploite directement les fichiers construits pour l'entraînement du RN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared:         </th>  <td>   0.629</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.629</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   7267.</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 04 Oct 2022</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>18:13:08</td>     <th>  Log-Likelihood:    </th> <td>-5.3217e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>1113747</td>     <th>  AIC:               </th>  <td>1.065e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>1113486</td>     <th>  BIC:               </th>  <td>1.068e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   260</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "          <td></td>             <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL</th>             <td>   -0.0694</td> <td>    0.000</td> <td> -194.535</td> <td> 0.000</td> <td>   -0.070</td> <td>   -0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIM</th>              <td>   -0.0005</td> <td>    0.000</td> <td>   -4.443</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIA</th>              <td>   -0.0005</td> <td>    0.000</td> <td>   -2.056</td> <td> 0.040</td> <td>   -0.001</td> <td>-2.39e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HH</th>                <td>    0.0272</td> <td> 7.58e-05</td> <td>  358.524</td> <td> 0.000</td> <td>    0.027</td> <td>    0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HT</th>                <td>    0.0020</td> <td> 4.29e-05</td> <td>   45.845</td> <td> 0.000</td> <td>    0.002</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE</th>               <td>   -0.0149</td> <td> 6.65e-05</td> <td> -224.686</td> <td> 0.000</td> <td>   -0.015</td> <td>   -0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ANNEE</th>             <td>    0.0085</td> <td>    0.000</td> <td>   16.966</td> <td> 0.000</td> <td>    0.007</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EMPNBH</th>            <td>    0.0034</td> <td> 7.48e-05</td> <td>   45.836</td> <td> 0.000</td> <td>    0.003</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATANT</th>            <td>    0.0048</td> <td>    0.001</td> <td>    6.817</td> <td> 0.000</td> <td>    0.003</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DAMOIS</th>            <td>   -0.0005</td> <td>    0.000</td> <td>   -3.632</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NRESID</th>            <td>    0.0011</td> <td>    0.000</td> <td>    7.780</td> <td> 0.000</td> <td>    0.001</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HATYEAR</th>           <td>    0.0018</td> <td> 8.42e-05</td> <td>   21.012</td> <td> 0.000</td> <td>    0.002</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBINDE</th>            <td>    0.0005</td> <td>    0.001</td> <td>    0.380</td> <td> 0.704</td> <td>   -0.002</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBACTOC</th>           <td>   -0.0082</td> <td>    0.002</td> <td>   -4.725</td> <td> 0.000</td> <td>   -0.012</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF18A</th>          <td>    0.0126</td> <td>    0.001</td> <td>    8.702</td> <td> 0.000</td> <td>    0.010</td> <td>    0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF6A</th>           <td>    0.0057</td> <td>    0.002</td> <td>    2.777</td> <td> 0.005</td> <td>    0.002</td> <td>    0.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF3A</th>           <td>    0.0107</td> <td>    0.004</td> <td>    2.868</td> <td> 0.004</td> <td>    0.003</td> <td>    0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF18MA</th>         <td>   -0.0098</td> <td>    0.004</td> <td>   -2.394</td> <td> 0.017</td> <td>   -0.018</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HHC</th>               <td>   -0.0134</td> <td>    0.000</td> <td>  -96.320</td> <td> 0.000</td> <td>   -0.014</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBCHOME</th>           <td>   -0.0101</td> <td>    0.002</td> <td>   -5.048</td> <td> 0.000</td> <td>   -0.014</td> <td>   -0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDIP</th>            <td>   -0.0013</td> <td>    0.000</td> <td>   -9.775</td> <td> 0.000</td> <td>   -0.002</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBTOT</th>             <td>    0.0009</td> <td>    0.000</td> <td>    3.188</td> <td> 0.001</td> <td>    0.000</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSPP</th>              <td>   -0.0001</td> <td> 3.75e-05</td> <td>   -3.597</td> <td> 0.000</td> <td>   -0.000</td> <td>-6.13e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSPM</th>              <td>    0.0001</td> <td> 3.18e-05</td> <td>    3.989</td> <td> 0.000</td> <td> 6.45e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FORDAT</th>            <td>   -0.0081</td> <td>    0.001</td> <td>  -12.206</td> <td> 0.000</td> <td>   -0.009</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DIPDET</th>            <td>    0.0060</td> <td>    0.000</td> <td>   31.525</td> <td> 0.000</td> <td>    0.006</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBACTOP</th>           <td>   -0.0058</td> <td>    0.002</td> <td>   -3.861</td> <td> 0.000</td> <td>   -0.009</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBACTIF</th>           <td>   -0.0160</td> <td>    0.002</td> <td>   -8.580</td> <td> 0.000</td> <td>   -0.020</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFIND</th>          <td>    0.0230</td> <td>    0.002</td> <td>   12.855</td> <td> 0.000</td> <td>    0.019</td> <td>    0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA18</th>          <td>   -0.0107</td> <td>    0.003</td> <td>   -3.672</td> <td> 0.000</td> <td>   -0.016</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA15</th>          <td>    0.0024</td> <td>    0.003</td> <td>    0.846</td> <td> 0.398</td> <td>   -0.003</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA10</th>          <td>    0.0005</td> <td>    0.003</td> <td>    0.200</td> <td> 0.841</td> <td>   -0.005</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA6</th>           <td>   -0.0020</td> <td>    0.003</td> <td>   -0.632</td> <td> 0.527</td> <td>   -0.008</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA3</th>           <td>   -0.0027</td> <td>    0.004</td> <td>   -0.685</td> <td> 0.493</td> <td>   -0.010</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA1</th>           <td>   -0.0187</td> <td>    0.005</td> <td>   -3.599</td> <td> 0.000</td> <td>   -0.029</td> <td>   -0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBIND</th>             <td>   -0.0018</td> <td>    0.002</td> <td>   -0.734</td> <td> 0.463</td> <td>   -0.007</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT</th>              <td>   -0.0003</td> <td> 2.26e-06</td> <td> -126.037</td> <td> 0.000</td> <td>   -0.000</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE</th>               <td>    0.0090</td> <td>    0.000</td> <td>   35.775</td> <td> 0.000</td> <td>    0.008</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPE</th>              <td>    0.0048</td> <td>    0.001</td> <td>    6.789</td> <td> 0.000</td> <td>    0.003</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT</th>           <td>   -0.0134</td> <td>    0.001</td> <td>  -20.515</td> <td> 0.000</td> <td>   -0.015</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC</th>              <td>    0.9353</td> <td>    0.004</td> <td>  260.851</td> <td> 0.000</td> <td>    0.928</td> <td>    0.942</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>A</th>                 <td>   -0.0545</td> <td>    0.003</td> <td>  -19.172</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>B</th>                 <td>    0.0162</td> <td>    0.003</td> <td>    5.651</td> <td> 0.000</td> <td>    0.011</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C</th>                 <td>   -0.0620</td> <td>    0.004</td> <td>  -16.437</td> <td> 0.000</td> <td>   -0.069</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D</th>                 <td>    0.1943</td> <td>    0.007</td> <td>   28.495</td> <td> 0.000</td> <td>    0.181</td> <td>    0.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectA</th>             <td>    0.0118</td> <td>    0.003</td> <td>    3.769</td> <td> 0.000</td> <td>    0.006</td> <td>    0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectB</th>             <td>   -0.0303</td> <td>    0.004</td> <td>   -8.081</td> <td> 0.000</td> <td>   -0.038</td> <td>   -0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectC</th>             <td>    0.0093</td> <td>    0.003</td> <td>    3.392</td> <td> 0.001</td> <td>    0.004</td> <td>    0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectD</th>             <td>   -0.0762</td> <td>    0.004</td> <td>  -21.187</td> <td> 0.000</td> <td>   -0.083</td> <td>   -0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectE</th>             <td>   -0.0085</td> <td>    0.004</td> <td>   -1.930</td> <td> 0.054</td> <td>   -0.017</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectF</th>             <td>   -0.0807</td> <td>    0.005</td> <td>  -17.030</td> <td> 0.000</td> <td>   -0.090</td> <td>   -0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectG</th>             <td>   -0.0150</td> <td>    0.004</td> <td>   -3.467</td> <td> 0.001</td> <td>   -0.023</td> <td>   -0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectH</th>             <td>    0.0224</td> <td>    0.004</td> <td>    5.427</td> <td> 0.000</td> <td>    0.014</td> <td>    0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectI</th>             <td>    0.0416</td> <td>    0.003</td> <td>   14.844</td> <td> 0.000</td> <td>    0.036</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectJ</th>             <td>    0.0232</td> <td>    0.003</td> <td>    6.972</td> <td> 0.000</td> <td>    0.017</td> <td>    0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA</th>              <td>    0.0247</td> <td>    0.000</td> <td>   79.936</td> <td> 0.000</td> <td>    0.024</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB</th>              <td>    0.0076</td> <td>    0.000</td> <td>   34.710</td> <td> 0.000</td> <td>    0.007</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC</th>              <td>    0.0387</td> <td>    0.000</td> <td>   85.646</td> <td> 0.000</td> <td>    0.038</td> <td>    0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_DNAI</th>         <td>   -0.0005</td> <td>    0.000</td> <td>   -1.071</td> <td> 0.284</td> <td>   -0.001</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_DNAI</th>         <td>-4.299e-05</td> <td>    0.000</td> <td>   -0.107</td> <td> 0.915</td> <td>   -0.001</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_DNAI</th>         <td>   -0.0001</td> <td>    0.001</td> <td>   -0.181</td> <td> 0.856</td> <td>   -0.001</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_DEPPER</th>       <td>   -0.0028</td> <td>    0.001</td> <td>   -3.341</td> <td> 0.001</td> <td>   -0.004</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_DEPPER</th>       <td>   -0.0004</td> <td>    0.001</td> <td>   -0.555</td> <td> 0.579</td> <td>   -0.002</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_DEPPER</th>       <td>   -0.0061</td> <td>    0.001</td> <td>   -4.908</td> <td> 0.000</td> <td>   -0.009</td> <td>   -0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_DEPMER</th>       <td>   -0.0030</td> <td>    0.001</td> <td>   -3.572</td> <td> 0.000</td> <td>   -0.005</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_DEPMER</th>       <td>   -0.0012</td> <td>    0.001</td> <td>   -1.838</td> <td> 0.066</td> <td>   -0.003</td> <td>  8.1e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_DEPMER</th>       <td>   -0.0088</td> <td>    0.001</td> <td>   -7.148</td> <td> 0.000</td> <td>   -0.011</td> <td>   -0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_nan</th>         <td>   -0.5797</td> <td>    0.047</td> <td>  -12.326</td> <td> 0.000</td> <td>   -0.672</td> <td>   -0.488</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIM_nan</th>          <td>   -0.0625</td> <td>    0.019</td> <td>   -3.307</td> <td> 0.001</td> <td>   -0.099</td> <td>   -0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HH_nan</th>            <td>    1.0472</td> <td>    0.004</td> <td>  290.512</td> <td> 0.000</td> <td>    1.040</td> <td>    1.054</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HT_nan</th>            <td>   -0.1980</td> <td>    0.014</td> <td>  -14.357</td> <td> 0.000</td> <td>   -0.225</td> <td>   -0.171</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_nan</th>           <td>   -0.1260</td> <td>    0.190</td> <td>   -0.664</td> <td> 0.507</td> <td>   -0.498</td> <td>    0.246</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EMPNBH_nan</th>        <td>    0.1113</td> <td>    0.003</td> <td>   35.451</td> <td> 0.000</td> <td>    0.105</td> <td>    0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATANT_nan</th>        <td>    9.3194</td> <td>    1.376</td> <td>    6.775</td> <td> 0.000</td> <td>    6.623</td> <td>   12.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DAMOIS_nan</th>        <td>    0.0802</td> <td>    0.001</td> <td>   55.044</td> <td> 0.000</td> <td>    0.077</td> <td>    0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NRESID_nan</th>        <td>    0.0707</td> <td>    0.009</td> <td>    7.966</td> <td> 0.000</td> <td>    0.053</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HATYEAR_nan</th>       <td>    0.2566</td> <td>    0.009</td> <td>   27.969</td> <td> 0.000</td> <td>    0.239</td> <td>    0.275</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBINDE_nan</th>        <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBACTOC_nan</th>       <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF18A_nan</th>      <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF6A_nan</th>       <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF3A_nan</th>       <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENF18MA_nan</th>     <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>HHC_nan</th>           <td>    2.2048</td> <td>    0.009</td> <td>  248.230</td> <td> 0.000</td> <td>    2.187</td> <td>    2.222</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBCHOME_nan</th>       <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDIP_nan</th>        <td>   -0.0733</td> <td>    0.007</td> <td>  -10.670</td> <td> 0.000</td> <td>   -0.087</td> <td>   -0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBTOT_nan</th>         <td>    0.0630</td> <td>    0.011</td> <td>    5.690</td> <td> 0.000</td> <td>    0.041</td> <td>    0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSPP_nan</th>          <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSPM_nan</th>          <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FORDAT_nan</th>        <td>   -0.4280</td> <td>    0.024</td> <td>  -17.943</td> <td> 0.000</td> <td>   -0.475</td> <td>   -0.381</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DIPDET_nan</th>        <td>    0.6922</td> <td>    0.053</td> <td>   13.082</td> <td> 0.000</td> <td>    0.588</td> <td>    0.796</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBACTOP_nan</th>       <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBACTIF_nan</th>       <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFIND_nan</th>      <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA18_nan</th>      <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA15_nan</th>      <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA10_nan</th>      <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA6_nan</th>       <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA3_nan</th>       <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBENFA1_nan</th>       <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBIND_nan</th>         <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_nan</th>          <td>   -0.1513</td> <td>    0.002</td> <td>  -61.262</td> <td> 0.000</td> <td>   -0.156</td> <td>   -0.146</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPE_nan</th>          <td>    9.3194</td> <td>    1.376</td> <td>    6.775</td> <td> 0.000</td> <td>    6.623</td> <td>   12.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT_nan</th>       <td>   -0.4280</td> <td>    0.024</td> <td>  -17.943</td> <td> 0.000</td> <td>   -0.475</td> <td>   -0.381</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC_nan</th>          <td>    2.2048</td> <td>    0.009</td> <td>  248.230</td> <td> 0.000</td> <td>    2.187</td> <td>    2.222</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>A_nan</th>             <td>   -0.2348</td> <td>    0.006</td> <td>  -37.633</td> <td> 0.000</td> <td>   -0.247</td> <td>   -0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>B_nan</th>             <td>   -0.2348</td> <td>    0.006</td> <td>  -37.633</td> <td> 0.000</td> <td>   -0.247</td> <td>   -0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>C_nan</th>             <td>   -0.2348</td> <td>    0.006</td> <td>  -37.633</td> <td> 0.000</td> <td>   -0.247</td> <td>   -0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>D_nan</th>             <td>   -0.2348</td> <td>    0.006</td> <td>  -37.633</td> <td> 0.000</td> <td>   -0.247</td> <td>   -0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectA_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectB_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectC_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectD_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectE_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectF_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectG_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectH_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectI_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SectJ_nan</th>         <td>    0.0242</td> <td>    0.023</td> <td>    1.070</td> <td> 0.285</td> <td>   -0.020</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_nan</th>          <td>    0.0614</td> <td>    0.033</td> <td>    1.886</td> <td> 0.059</td> <td>   -0.002</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_nan</th>          <td>    0.0614</td> <td>    0.033</td> <td>    1.886</td> <td> 0.059</td> <td>   -0.002</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_nan</th>          <td>    0.0614</td> <td>    0.033</td> <td>    1.886</td> <td> 0.059</td> <td>   -0.002</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_DNAI_nan</th>     <td>    0.0063</td> <td>    0.003</td> <td>    2.481</td> <td> 0.013</td> <td>    0.001</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_DNAI_nan</th>     <td>    0.0063</td> <td>    0.003</td> <td>    2.481</td> <td> 0.013</td> <td>    0.001</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_DNAI_nan</th>     <td>    0.0063</td> <td>    0.003</td> <td>    2.481</td> <td> 0.013</td> <td>    0.001</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_DEPPER_nan</th>   <td>   -0.0202</td> <td>    0.004</td> <td>   -5.309</td> <td> 0.000</td> <td>   -0.028</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_DEPPER_nan</th>   <td>   -0.0202</td> <td>    0.004</td> <td>   -5.309</td> <td> 0.000</td> <td>   -0.028</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_DEPPER_nan</th>   <td>   -0.0202</td> <td>    0.004</td> <td>   -5.309</td> <td> 0.000</td> <td>   -0.028</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepA_DEPMER_nan</th>   <td>   -0.0206</td> <td>    0.004</td> <td>   -5.278</td> <td> 0.000</td> <td>   -0.028</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepB_DEPMER_nan</th>   <td>   -0.0206</td> <td>    0.004</td> <td>   -5.278</td> <td> 0.000</td> <td>   -0.028</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DepC_DEPMER_nan</th>   <td>   -0.0206</td> <td>    0.004</td> <td>   -5.278</td> <td> 0.000</td> <td>   -0.028</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDEB_vec0</th>       <td>   -0.0008</td> <td>    0.000</td> <td>   -1.512</td> <td> 0.131</td> <td>   -0.002</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDEB_vec1</th>       <td>    0.0006</td> <td>    0.001</td> <td>    0.710</td> <td> 0.478</td> <td>   -0.001</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PNAI_vec0</th>         <td>   -0.0319</td> <td>    0.006</td> <td>   -5.108</td> <td> 0.000</td> <td>   -0.044</td> <td>   -0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PNAI_vec1</th>         <td>    0.0376</td> <td>    0.008</td> <td>    4.593</td> <td> 0.000</td> <td>    0.022</td> <td>    0.054</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CODPCL_vec0</th>       <td>    0.2826</td> <td>    0.005</td> <td>   57.622</td> <td> 0.000</td> <td>    0.273</td> <td>    0.292</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CODPCL_vec1</th>       <td>   -0.0505</td> <td>    0.001</td> <td>  -41.663</td> <td> 0.000</td> <td>   -0.053</td> <td>   -0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSMERE_vec0</th>       <td>    0.0595</td> <td>    0.017</td> <td>    3.589</td> <td> 0.000</td> <td>    0.027</td> <td>    0.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSMERE_vec1</th>       <td>    0.0039</td> <td>    0.007</td> <td>    0.595</td> <td> 0.552</td> <td>   -0.009</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSPERE_vec0</th>       <td>   -0.0037</td> <td>    0.012</td> <td>   -0.316</td> <td> 0.752</td> <td>   -0.027</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSPERE_vec1</th>       <td>    0.0066</td> <td>    0.009</td> <td>    0.713</td> <td> 0.476</td> <td>   -0.012</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DNAIM_vec0</th>        <td>    0.0003</td> <td>    0.003</td> <td>    0.125</td> <td> 0.901</td> <td>   -0.005</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DNAIM_vec1</th>        <td>   -0.0138</td> <td>    0.011</td> <td>   -1.313</td> <td> 0.189</td> <td>   -0.034</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DNAIP_vec0</th>        <td>    0.0456</td> <td>    0.008</td> <td>    6.034</td> <td> 0.000</td> <td>    0.031</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DNAIP_vec1</th>        <td>    0.0547</td> <td>    0.009</td> <td>    6.099</td> <td> 0.000</td> <td>    0.037</td> <td>    0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REG_vec0</th>          <td>   -0.0086</td> <td>    0.002</td> <td>   -4.570</td> <td> 0.000</td> <td>   -0.012</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REG_vec1</th>          <td>    0.0069</td> <td>    0.002</td> <td>    3.412</td> <td> 0.001</td> <td>    0.003</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SPE_vec0</th>          <td>   -0.2367</td> <td>    0.009</td> <td>  -25.172</td> <td> 0.000</td> <td>   -0.255</td> <td>   -0.218</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SPE_vec1</th>          <td>   -0.1707</td> <td>    0.009</td> <td>  -18.368</td> <td> 0.000</td> <td>   -0.189</td> <td>   -0.153</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIMERCDET_vec0</th>   <td>   -0.0256</td> <td>    0.005</td> <td>   -5.190</td> <td> 0.000</td> <td>   -0.035</td> <td>   -0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIMERCDET_vec1</th>   <td>    0.0615</td> <td>    0.013</td> <td>    4.680</td> <td> 0.000</td> <td>    0.036</td> <td>    0.087</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIPERCDET_vec0</th>   <td>    0.0014</td> <td>    0.001</td> <td>    1.324</td> <td> 0.186</td> <td>   -0.001</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIPERCDET_vec1</th>   <td>   -0.0877</td> <td>    0.014</td> <td>   -6.399</td> <td> 0.000</td> <td>   -0.115</td> <td>   -0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CODNAFN_vec0</th>      <td>   -0.1929</td> <td>    0.008</td> <td>  -25.448</td> <td> 0.000</td> <td>   -0.208</td> <td>   -0.178</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CODNAFN_vec1</th>      <td>    0.0508</td> <td>    0.002</td> <td>   23.555</td> <td> 0.000</td> <td>    0.047</td> <td>    0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIPER_vec0</th>       <td>   -0.0101</td> <td>    0.004</td> <td>   -2.542</td> <td> 0.011</td> <td>   -0.018</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIPER_vec1</th>       <td>   -0.0590</td> <td>    0.016</td> <td>   -3.655</td> <td> 0.000</td> <td>   -0.091</td> <td>   -0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIMER_vec0</th>       <td>    0.0154</td> <td>    0.005</td> <td>    2.842</td> <td> 0.004</td> <td>    0.005</td> <td>    0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PAIMER_vec1</th>       <td>   -0.0154</td> <td>    0.009</td> <td>   -1.639</td> <td> 0.101</td> <td>   -0.034</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DIPFIN_vec0</th>       <td>    0.0283</td> <td>    0.004</td> <td>    6.982</td> <td> 0.000</td> <td>    0.020</td> <td>    0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DIPFIN_vec1</th>       <td>    0.3583</td> <td>    0.019</td> <td>   18.625</td> <td> 0.000</td> <td>    0.321</td> <td>    0.396</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVFIN_vec0</th>       <td>    0.0823</td> <td>    0.011</td> <td>    7.597</td> <td> 0.000</td> <td>    0.061</td> <td>    0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVFIN_vec1</th>       <td>   -0.1053</td> <td>    0.010</td> <td>  -10.658</td> <td> 0.000</td> <td>   -0.125</td> <td>   -0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_11</th>         <td>   -0.3002</td> <td>    0.020</td> <td>  -14.702</td> <td> 0.000</td> <td>   -0.340</td> <td>   -0.260</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_12</th>         <td>   -0.0366</td> <td>    0.019</td> <td>   -1.900</td> <td> 0.057</td> <td>   -0.074</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_13</th>         <td>   -0.5141</td> <td>    0.055</td> <td>   -9.387</td> <td> 0.000</td> <td>   -0.621</td> <td>   -0.407</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_21</th>         <td>    0.2072</td> <td>    0.019</td> <td>   10.995</td> <td> 0.000</td> <td>    0.170</td> <td>    0.244</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_22</th>         <td>   -0.3935</td> <td>    0.019</td> <td>  -20.843</td> <td> 0.000</td> <td>   -0.430</td> <td>   -0.356</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_33</th>         <td>    0.0532</td> <td>    0.019</td> <td>    2.853</td> <td> 0.004</td> <td>    0.017</td> <td>    0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_34</th>         <td>   -0.0558</td> <td>    0.019</td> <td>   -2.979</td> <td> 0.003</td> <td>   -0.093</td> <td>   -0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_35</th>         <td>    0.1797</td> <td>    0.019</td> <td>    9.678</td> <td> 0.000</td> <td>    0.143</td> <td>    0.216</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_41</th>         <td>    0.2931</td> <td>    0.019</td> <td>   15.752</td> <td> 0.000</td> <td>    0.257</td> <td>    0.330</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_42</th>         <td>   -0.4420</td> <td>    0.054</td> <td>   -8.207</td> <td> 0.000</td> <td>   -0.548</td> <td>   -0.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_43</th>         <td>    0.0319</td> <td>    0.019</td> <td>    1.691</td> <td> 0.091</td> <td>   -0.005</td> <td>    0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_44</th>         <td>    0.0477</td> <td>    0.019</td> <td>    2.447</td> <td> 0.014</td> <td>    0.009</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_45</th>         <td>    0.1878</td> <td>    0.019</td> <td>   10.083</td> <td> 0.000</td> <td>    0.151</td> <td>    0.224</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_new_nan</th>    <td>   -0.1260</td> <td>    0.190</td> <td>   -0.664</td> <td> 0.507</td> <td>   -0.498</td> <td>    0.246</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SEXE_1</th>            <td>   -0.3468</td> <td>    0.067</td> <td>   -5.144</td> <td> 0.000</td> <td>   -0.479</td> <td>   -0.215</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SEXE_2</th>            <td>   -0.5209</td> <td>    0.067</td> <td>   -7.726</td> <td> 0.000</td> <td>   -0.653</td> <td>   -0.389</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_1</th>           <td>   -0.2635</td> <td>    0.045</td> <td>   -5.793</td> <td> 0.000</td> <td>   -0.353</td> <td>   -0.174</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_2</th>           <td>   -0.3213</td> <td>    0.045</td> <td>   -7.073</td> <td> 0.000</td> <td>   -0.410</td> <td>   -0.232</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_3</th>           <td>   -0.2829</td> <td>    0.046</td> <td>   -6.200</td> <td> 0.000</td> <td>   -0.372</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_1</th>            <td>   -0.3648</td> <td>    0.047</td> <td>   -7.680</td> <td> 0.000</td> <td>   -0.458</td> <td>   -0.272</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_2</th>            <td>   -0.3574</td> <td>    0.048</td> <td>   -7.524</td> <td> 0.000</td> <td>   -0.451</td> <td>   -0.264</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_3</th>            <td>   -0.3504</td> <td>    0.047</td> <td>   -7.377</td> <td> 0.000</td> <td>   -0.443</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_4</th>            <td>   -0.3517</td> <td>    0.048</td> <td>   -7.404</td> <td> 0.000</td> <td>   -0.445</td> <td>   -0.259</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_new_nan</th>      <td>    0.5566</td> <td>    0.059</td> <td>    9.510</td> <td> 0.000</td> <td>    0.442</td> <td>    0.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_1</th>             <td>   -0.2434</td> <td>    0.032</td> <td>   -7.680</td> <td> 0.000</td> <td>   -0.305</td> <td>   -0.181</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_2</th>             <td>   -0.2402</td> <td>    0.032</td> <td>   -7.549</td> <td> 0.000</td> <td>   -0.303</td> <td>   -0.178</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_3</th>             <td>   -0.2389</td> <td>    0.032</td> <td>   -7.488</td> <td> 0.000</td> <td>   -0.301</td> <td>   -0.176</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_4</th>             <td>   -0.2351</td> <td>    0.032</td> <td>   -7.359</td> <td> 0.000</td> <td>   -0.298</td> <td>   -0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_5</th>             <td>   -0.2244</td> <td>    0.032</td> <td>   -7.014</td> <td> 0.000</td> <td>   -0.287</td> <td>   -0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_6</th>             <td>   -0.2424</td> <td>    0.032</td> <td>   -7.648</td> <td> 0.000</td> <td>   -0.304</td> <td>   -0.180</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_new_nan</th>       <td>    0.5566</td> <td>    0.059</td> <td>    9.510</td> <td> 0.000</td> <td>    0.442</td> <td>    0.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_1</th>              <td>   -0.0690</td> <td>    0.017</td> <td>   -3.973</td> <td> 0.000</td> <td>   -0.103</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_2</th>              <td>   -0.0819</td> <td>    0.017</td> <td>   -4.725</td> <td> 0.000</td> <td>   -0.116</td> <td>   -0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_3</th>              <td>   -0.1294</td> <td>    0.017</td> <td>   -7.438</td> <td> 0.000</td> <td>   -0.164</td> <td>   -0.095</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_4</th>              <td>   -0.1035</td> <td>    0.017</td> <td>   -5.957</td> <td> 0.000</td> <td>   -0.138</td> <td>   -0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_5</th>              <td>   -0.1243</td> <td>    0.018</td> <td>   -6.910</td> <td> 0.000</td> <td>   -0.160</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_6</th>              <td>   -0.1463</td> <td>    0.018</td> <td>   -8.315</td> <td> 0.000</td> <td>   -0.181</td> <td>   -0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_7</th>              <td>   -0.1152</td> <td>    0.030</td> <td>   -3.800</td> <td> 0.000</td> <td>   -0.175</td> <td>   -0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SO_new_nan</th>        <td>   -0.0980</td> <td>    0.017</td> <td>   -5.634</td> <td> 0.000</td> <td>   -0.132</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>IMMI_1</th>            <td>   -0.7256</td> <td>    0.095</td> <td>   -7.626</td> <td> 0.000</td> <td>   -0.912</td> <td>   -0.539</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>IMMI_2</th>            <td>   -0.6987</td> <td>    0.095</td> <td>   -7.366</td> <td> 0.000</td> <td>   -0.885</td> <td>   -0.513</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>IMMI_new_nan</th>      <td>    0.5566</td> <td>    0.059</td> <td>    9.510</td> <td> 0.000</td> <td>    0.442</td> <td>    0.671</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_1</th>             <td>   -0.1482</td> <td>    0.035</td> <td>   -4.235</td> <td> 0.000</td> <td>   -0.217</td> <td>   -0.080</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_2</th>             <td>   -0.0645</td> <td>    0.035</td> <td>   -1.858</td> <td> 0.063</td> <td>   -0.132</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_3</th>             <td>   -0.4041</td> <td>    0.035</td> <td>  -11.686</td> <td> 0.000</td> <td>   -0.472</td> <td>   -0.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_new_nan</th>       <td>   -0.2509</td> <td>    0.035</td> <td>   -7.152</td> <td> 0.000</td> <td>   -0.320</td> <td>   -0.182</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_1</th>          <td>   -0.2318</td> <td>    0.048</td> <td>   -4.792</td> <td> 0.000</td> <td>   -0.327</td> <td>   -0.137</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_2</th>          <td>   -0.5366</td> <td>    0.048</td> <td>  -11.120</td> <td> 0.000</td> <td>   -0.631</td> <td>   -0.442</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_new_nan</th>    <td>   -0.0993</td> <td>    0.057</td> <td>   -1.743</td> <td> 0.081</td> <td>   -0.211</td> <td>    0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_10</th>         <td>    0.0227</td> <td>    0.017</td> <td>    1.373</td> <td> 0.170</td> <td>   -0.010</td> <td>    0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_12</th>         <td>    0.0832</td> <td>    0.017</td> <td>    5.030</td> <td> 0.000</td> <td>    0.051</td> <td>    0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_20</th>         <td>   -0.0093</td> <td>    0.017</td> <td>   -0.562</td> <td> 0.574</td> <td>   -0.042</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_29</th>         <td>   -0.0178</td> <td>    0.017</td> <td>   -1.077</td> <td> 0.281</td> <td>   -0.050</td> <td>    0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_31</th>         <td>    0.0863</td> <td>    0.016</td> <td>    5.246</td> <td> 0.000</td> <td>    0.054</td> <td>    0.119</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_32</th>         <td>    0.0732</td> <td>    0.016</td> <td>    4.501</td> <td> 0.000</td> <td>    0.041</td> <td>    0.105</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_33</th>         <td>    0.1159</td> <td>    0.017</td> <td>    6.990</td> <td> 0.000</td> <td>    0.083</td> <td>    0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_41</th>         <td>    0.1194</td> <td>    0.016</td> <td>    7.326</td> <td> 0.000</td> <td>    0.087</td> <td>    0.151</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_42</th>         <td>    0.1132</td> <td>    0.016</td> <td>    6.900</td> <td> 0.000</td> <td>    0.081</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_43</th>         <td>    0.0965</td> <td>    0.016</td> <td>    5.907</td> <td> 0.000</td> <td>    0.064</td> <td>    0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_51</th>         <td>    0.1456</td> <td>    0.016</td> <td>    8.860</td> <td> 0.000</td> <td>    0.113</td> <td>    0.178</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_52</th>         <td>    0.0956</td> <td>    0.016</td> <td>    5.916</td> <td> 0.000</td> <td>    0.064</td> <td>    0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_61</th>         <td>    0.1127</td> <td>    0.016</td> <td>    6.915</td> <td> 0.000</td> <td>    0.081</td> <td>    0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_71</th>         <td>    0.0858</td> <td>    0.017</td> <td>    5.158</td> <td> 0.000</td> <td>    0.053</td> <td>    0.118</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_72</th>         <td>    0.0070</td> <td>    0.016</td> <td>    0.425</td> <td> 0.671</td> <td>   -0.025</td> <td>    0.039</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_73</th>         <td>   -0.0583</td> <td>    0.019</td> <td>   -3.108</td> <td> 0.002</td> <td>   -0.095</td> <td>   -0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NIVETD_new_nan</th>    <td>   -1.9393</td> <td>    0.216</td> <td>   -8.963</td> <td> 0.000</td> <td>   -2.363</td> <td>   -1.515</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_10</th>         <td>   -0.0619</td> <td>    0.009</td> <td>   -6.773</td> <td> 0.000</td> <td>   -0.080</td> <td>   -0.044</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_21</th>         <td>   -0.0299</td> <td>    0.009</td> <td>   -3.288</td> <td> 0.001</td> <td>   -0.048</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_22</th>         <td>   -0.1341</td> <td>    0.011</td> <td>  -12.757</td> <td> 0.000</td> <td>   -0.155</td> <td>   -0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_31</th>         <td>   -0.0768</td> <td>    0.009</td> <td>   -8.292</td> <td> 0.000</td> <td>   -0.095</td> <td>   -0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_32</th>         <td>   -0.0465</td> <td>    0.009</td> <td>   -5.156</td> <td> 0.000</td> <td>   -0.064</td> <td>   -0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_41</th>         <td>   -0.0406</td> <td>    0.009</td> <td>   -4.439</td> <td> 0.000</td> <td>   -0.058</td> <td>   -0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_42</th>         <td>   -0.0424</td> <td>    0.009</td> <td>   -4.717</td> <td> 0.000</td> <td>   -0.060</td> <td>   -0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_43</th>         <td>   -0.1078</td> <td>    0.011</td> <td>   -9.967</td> <td> 0.000</td> <td>   -0.129</td> <td>   -0.087</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_51</th>         <td>   -0.1413</td> <td>    0.011</td> <td>  -12.378</td> <td> 0.000</td> <td>   -0.164</td> <td>   -0.119</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_52</th>         <td>   -0.0757</td> <td>    0.010</td> <td>   -7.820</td> <td> 0.000</td> <td>   -0.095</td> <td>   -0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN_new_nan</th>    <td>   -0.1106</td> <td>    0.056</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.220</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_1</th>             <td>   -0.1043</td> <td>    0.021</td> <td>   -5.049</td> <td> 0.000</td> <td>   -0.145</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_2</th>             <td>   -0.1350</td> <td>    0.021</td> <td>   -6.308</td> <td> 0.000</td> <td>   -0.177</td> <td>   -0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_3</th>             <td>   -0.1421</td> <td>    0.021</td> <td>   -6.693</td> <td> 0.000</td> <td>   -0.184</td> <td>   -0.100</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_4</th>             <td>   -0.1287</td> <td>    0.021</td> <td>   -6.134</td> <td> 0.000</td> <td>   -0.170</td> <td>   -0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_5</th>             <td>   -0.1307</td> <td>    0.021</td> <td>   -6.287</td> <td> 0.000</td> <td>   -0.171</td> <td>   -0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_6</th>             <td>   -0.1359</td> <td>    0.021</td> <td>   -6.585</td> <td> 0.000</td> <td>   -0.176</td> <td>   -0.095</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGI_new_nan</th>       <td>   -0.0910</td> <td>    0.044</td> <td>   -2.076</td> <td> 0.038</td> <td>   -0.177</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPVOIS_1</th>         <td>   -0.1326</td> <td>    0.023</td> <td>   -5.867</td> <td> 0.000</td> <td>   -0.177</td> <td>   -0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPVOIS_2</th>         <td>   -0.1476</td> <td>    0.023</td> <td>   -6.553</td> <td> 0.000</td> <td>   -0.192</td> <td>   -0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPVOIS_3</th>         <td>   -0.1545</td> <td>    0.023</td> <td>   -6.846</td> <td> 0.000</td> <td>   -0.199</td> <td>   -0.110</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPVOIS_4</th>         <td>   -0.1555</td> <td>    0.023</td> <td>   -6.862</td> <td> 0.000</td> <td>   -0.200</td> <td>   -0.111</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPVOIS_5</th>         <td>   -0.1418</td> <td>    0.023</td> <td>   -6.208</td> <td> 0.000</td> <td>   -0.187</td> <td>   -0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPVOIS_new_nan</th>   <td>   -0.1357</td> <td>    0.023</td> <td>   -5.859</td> <td> 0.000</td> <td>   -0.181</td> <td>   -0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RDQ_1</th>             <td>   -0.3102</td> <td>    0.136</td> <td>   -2.276</td> <td> 0.023</td> <td>   -0.577</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RDQ_2</th>             <td>   -0.3186</td> <td>    0.136</td> <td>   -2.337</td> <td> 0.019</td> <td>   -0.586</td> <td>   -0.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RDQ_new_nan</th>       <td>   -0.2389</td> <td>    0.265</td> <td>   -0.900</td> <td> 0.368</td> <td>   -0.759</td> <td>    0.281</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_1</th>          <td>   -0.2919</td> <td>    0.046</td> <td>   -6.317</td> <td> 0.000</td> <td>   -0.382</td> <td>   -0.201</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_2</th>          <td>   -0.2771</td> <td>    0.045</td> <td>   -6.110</td> <td> 0.000</td> <td>   -0.366</td> <td>   -0.188</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_new_nan</th>    <td>   -0.2987</td> <td>    0.045</td> <td>   -6.587</td> <td> 0.000</td> <td>   -0.388</td> <td>   -0.210</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_1</th>          <td>   -0.2976</td> <td>    0.053</td> <td>   -5.594</td> <td> 0.000</td> <td>   -0.402</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_2</th>          <td>   -0.3696</td> <td>    0.053</td> <td>   -6.949</td> <td> 0.000</td> <td>   -0.474</td> <td>   -0.265</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_new_nan</th>    <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_1</th>           <td>   -0.2284</td> <td>    0.035</td> <td>   -6.454</td> <td> 0.000</td> <td>   -0.298</td> <td>   -0.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_2</th>           <td>   -0.2328</td> <td>    0.038</td> <td>   -6.192</td> <td> 0.000</td> <td>   -0.307</td> <td>   -0.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_3</th>           <td>   -0.1891</td> <td>    0.044</td> <td>   -4.312</td> <td> 0.000</td> <td>   -0.275</td> <td>   -0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_new_nan</th>     <td>   -0.2173</td> <td>    0.036</td> <td>   -6.118</td> <td> 0.000</td> <td>   -0.287</td> <td>   -0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_1</th>           <td>   -0.0752</td> <td>    0.021</td> <td>   -3.557</td> <td> 0.000</td> <td>   -0.117</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_2</th>           <td>   -0.0193</td> <td>    0.021</td> <td>   -0.902</td> <td> 0.367</td> <td>   -0.061</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_3</th>           <td>   -0.0977</td> <td>    0.025</td> <td>   -3.912</td> <td> 0.000</td> <td>   -0.147</td> <td>   -0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_4</th>           <td>   -0.1263</td> <td>    0.025</td> <td>   -5.057</td> <td> 0.000</td> <td>   -0.175</td> <td>   -0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_5</th>           <td>   -0.0860</td> <td>    0.025</td> <td>   -3.422</td> <td> 0.001</td> <td>   -0.135</td> <td>   -0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_6</th>           <td>   -0.0105</td> <td>    0.028</td> <td>   -0.371</td> <td> 0.711</td> <td>   -0.066</td> <td>    0.045</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_7</th>           <td>   -0.2598</td> <td>    0.025</td> <td>  -10.550</td> <td> 0.000</td> <td>   -0.308</td> <td>   -0.212</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_new_nan</th>     <td>   -0.1930</td> <td>    0.030</td> <td>   -6.335</td> <td> 0.000</td> <td>   -0.253</td> <td>   -0.133</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_0</th>          <td>   -0.3414</td> <td>    0.020</td> <td>  -16.936</td> <td> 0.000</td> <td>   -0.381</td> <td>   -0.302</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_1</th>          <td>   -0.1722</td> <td>    0.020</td> <td>   -8.768</td> <td> 0.000</td> <td>   -0.211</td> <td>   -0.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_2</th>          <td>   -0.1088</td> <td>    0.020</td> <td>   -5.511</td> <td> 0.000</td> <td>   -0.147</td> <td>   -0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_3</th>          <td>    0.0624</td> <td>    0.022</td> <td>    2.875</td> <td> 0.004</td> <td>    0.020</td> <td>    0.105</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_4</th>          <td>   -0.0630</td> <td>    0.021</td> <td>   -3.068</td> <td> 0.002</td> <td>   -0.103</td> <td>   -0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_5</th>          <td>    0.1015</td> <td>    0.021</td> <td>    4.876</td> <td> 0.000</td> <td>    0.061</td> <td>    0.142</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_new_nan</th>    <td>   -0.3462</td> <td>    0.020</td> <td>  -16.991</td> <td> 0.000</td> <td>   -0.386</td> <td>   -0.306</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_1</th>          <td>   -0.0806</td> <td>    0.013</td> <td>   -6.416</td> <td> 0.000</td> <td>   -0.105</td> <td>   -0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_10</th>         <td>   -0.0648</td> <td>    0.013</td> <td>   -5.135</td> <td> 0.000</td> <td>   -0.090</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_2</th>          <td>   -0.1067</td> <td>    0.013</td> <td>   -8.295</td> <td> 0.000</td> <td>   -0.132</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_3</th>          <td>   -0.1023</td> <td>    0.013</td> <td>   -7.938</td> <td> 0.000</td> <td>   -0.128</td> <td>   -0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_4</th>          <td>   -0.0926</td> <td>    0.013</td> <td>   -7.026</td> <td> 0.000</td> <td>   -0.118</td> <td>   -0.067</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_5</th>          <td>   -0.0551</td> <td>    0.013</td> <td>   -4.343</td> <td> 0.000</td> <td>   -0.080</td> <td>   -0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_6</th>          <td>   -0.0212</td> <td>    0.013</td> <td>   -1.670</td> <td> 0.095</td> <td>   -0.046</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_7</th>          <td>   -0.0852</td> <td>    0.013</td> <td>   -6.720</td> <td> 0.000</td> <td>   -0.110</td> <td>   -0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_8</th>          <td>   -0.0849</td> <td>    0.013</td> <td>   -6.661</td> <td> 0.000</td> <td>   -0.110</td> <td>   -0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_9</th>          <td>   -0.1026</td> <td>    0.013</td> <td>   -8.122</td> <td> 0.000</td> <td>   -0.127</td> <td>   -0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_new_nan</th>    <td>   -0.0716</td> <td>    0.013</td> <td>   -5.649</td> <td> 0.000</td> <td>   -0.096</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_1</th>            <td>   -0.1013</td> <td>    0.029</td> <td>   -3.497</td> <td> 0.000</td> <td>   -0.158</td> <td>   -0.045</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_2</th>            <td>    0.0104</td> <td>    0.028</td> <td>    0.371</td> <td> 0.711</td> <td>   -0.045</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_3</th>            <td>   -0.2613</td> <td>    0.028</td> <td>   -9.183</td> <td> 0.000</td> <td>   -0.317</td> <td>   -0.206</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_4</th>            <td>   -0.2460</td> <td>    0.030</td> <td>   -8.184</td> <td> 0.000</td> <td>   -0.305</td> <td>   -0.187</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_new_nan</th>      <td>   -0.2695</td> <td>    0.035</td> <td>   -7.614</td> <td> 0.000</td> <td>   -0.339</td> <td>   -0.200</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_1</th>          <td>   -0.2887</td> <td>    0.053</td> <td>   -5.420</td> <td> 0.000</td> <td>   -0.393</td> <td>   -0.184</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_2</th>          <td>   -0.3786</td> <td>    0.053</td> <td>   -7.092</td> <td> 0.000</td> <td>   -0.483</td> <td>   -0.274</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_new_nan</th>    <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_1</th>            <td>   -0.1179</td> <td>    0.014</td> <td>   -8.297</td> <td> 0.000</td> <td>   -0.146</td> <td>   -0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_2</th>            <td>   -0.0952</td> <td>    0.014</td> <td>   -6.824</td> <td> 0.000</td> <td>   -0.122</td> <td>   -0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_3</th>            <td>   -0.1696</td> <td>    0.014</td> <td>  -12.006</td> <td> 0.000</td> <td>   -0.197</td> <td>   -0.142</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_4</th>            <td>   -0.1355</td> <td>    0.014</td> <td>   -9.772</td> <td> 0.000</td> <td>   -0.163</td> <td>   -0.108</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_5</th>            <td>   -0.1084</td> <td>    0.014</td> <td>   -7.845</td> <td> 0.000</td> <td>   -0.135</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_6</th>            <td>   -0.0170</td> <td>    0.014</td> <td>   -1.205</td> <td> 0.228</td> <td>   -0.045</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_7</th>            <td>    0.1444</td> <td>    0.018</td> <td>    7.806</td> <td> 0.000</td> <td>    0.108</td> <td>    0.181</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_8</th>            <td>   -0.1272</td> <td>    0.014</td> <td>   -8.835</td> <td> 0.000</td> <td>   -0.155</td> <td>   -0.099</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_9</th>            <td>   -0.1082</td> <td>    0.014</td> <td>   -7.785</td> <td> 0.000</td> <td>   -0.135</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_new_nan</th>      <td>   -0.1331</td> <td>    0.020</td> <td>   -6.639</td> <td> 0.000</td> <td>   -0.172</td> <td>   -0.094</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STAT2_2</th>           <td>   -0.6672</td> <td>    0.106</td> <td>   -6.274</td> <td> 0.000</td> <td>   -0.876</td> <td>   -0.459</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STAT2_new_nan</th>     <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_11</th>       <td>   -0.0727</td> <td>    0.015</td> <td>   -4.702</td> <td> 0.000</td> <td>   -0.103</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_21</th>       <td>    0.0388</td> <td>    0.103</td> <td>    0.377</td> <td> 0.706</td> <td>   -0.163</td> <td>    0.241</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_22</th>       <td>   -0.0656</td> <td>    0.103</td> <td>   -0.637</td> <td> 0.524</td> <td>   -0.268</td> <td>    0.136</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_23</th>       <td>   -0.1176</td> <td>    0.288</td> <td>   -0.409</td> <td> 0.683</td> <td>   -0.681</td> <td>    0.446</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_31</th>       <td>   -0.0595</td> <td>    0.011</td> <td>   -5.595</td> <td> 0.000</td> <td>   -0.080</td> <td>   -0.039</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_32</th>       <td>   -0.0222</td> <td>    0.011</td> <td>   -2.111</td> <td> 0.035</td> <td>   -0.043</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_41</th>       <td>   -0.0159</td> <td>    0.008</td> <td>   -1.898</td> <td> 0.058</td> <td>   -0.032</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_42</th>       <td>    0.0085</td> <td>    0.008</td> <td>    0.998</td> <td> 0.318</td> <td>   -0.008</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_43</th>       <td>   -0.0945</td> <td>    0.011</td> <td>   -8.911</td> <td> 0.000</td> <td>   -0.115</td> <td>   -0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_51</th>       <td>   -0.0548</td> <td>    0.016</td> <td>   -3.427</td> <td> 0.001</td> <td>   -0.086</td> <td>   -0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_52</th>       <td>   -0.0500</td> <td>    0.016</td> <td>   -3.184</td> <td> 0.001</td> <td>   -0.081</td> <td>   -0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_61</th>       <td>   -0.0556</td> <td>    0.017</td> <td>   -3.243</td> <td> 0.001</td> <td>   -0.089</td> <td>   -0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_62</th>       <td>   -0.0461</td> <td>    0.014</td> <td>   -3.186</td> <td> 0.001</td> <td>   -0.074</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_91</th>       <td>   -0.0431</td> <td>    0.013</td> <td>   -3.375</td> <td> 0.001</td> <td>   -0.068</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_92</th>       <td>   -0.0169</td> <td>    0.012</td> <td>   -1.447</td> <td> 0.148</td> <td>   -0.040</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN21_new_nan</th>  <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_1</th>         <td>   -0.0727</td> <td>    0.015</td> <td>   -4.702</td> <td> 0.000</td> <td>   -0.103</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_2</th>         <td>   -0.1444</td> <td>    0.084</td> <td>   -1.718</td> <td> 0.086</td> <td>   -0.309</td> <td>    0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_3</th>         <td>   -0.0817</td> <td>    0.021</td> <td>   -3.978</td> <td> 0.000</td> <td>   -0.122</td> <td>   -0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_4</th>         <td>   -0.1020</td> <td>    0.023</td> <td>   -4.395</td> <td> 0.000</td> <td>   -0.147</td> <td>   -0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_5</th>         <td>   -0.1048</td> <td>    0.022</td> <td>   -4.870</td> <td> 0.000</td> <td>   -0.147</td> <td>   -0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_6</th>         <td>   -0.1017</td> <td>    0.021</td> <td>   -4.732</td> <td> 0.000</td> <td>   -0.144</td> <td>   -0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_9</th>         <td>   -0.0600</td> <td>    0.021</td> <td>   -2.878</td> <td> 0.004</td> <td>   -0.101</td> <td>   -0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPMEN7_new_nan</th>   <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_111</th>     <td>   -0.0636</td> <td>    0.012</td> <td>   -5.229</td> <td> 0.000</td> <td>   -0.087</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_112</th>     <td>   -0.0695</td> <td>    0.012</td> <td>   -5.688</td> <td> 0.000</td> <td>   -0.093</td> <td>   -0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_120</th>     <td>   -0.0554</td> <td>    0.012</td> <td>   -4.456</td> <td> 0.000</td> <td>   -0.080</td> <td>   -0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_211</th>     <td>   -0.0543</td> <td>    0.013</td> <td>   -4.261</td> <td> 0.000</td> <td>   -0.079</td> <td>   -0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_212</th>     <td>   -0.0589</td> <td>    0.016</td> <td>   -3.771</td> <td> 0.000</td> <td>   -0.090</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_221</th>     <td>   -0.0652</td> <td>    0.013</td> <td>   -5.099</td> <td> 0.000</td> <td>   -0.090</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_222</th>     <td>   -0.1621</td> <td>    0.021</td> <td>   -7.737</td> <td> 0.000</td> <td>   -0.203</td> <td>   -0.121</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_300</th>     <td>   -0.0793</td> <td>    0.013</td> <td>   -6.342</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_400</th>     <td>   -0.0588</td> <td>    0.013</td> <td>   -4.651</td> <td> 0.000</td> <td>   -0.084</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CATAU2010_new_nan</th> <td>   -0.2005</td> <td>    0.036</td> <td>   -5.573</td> <td> 0.000</td> <td>   -0.271</td> <td>   -0.130</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>865179.454</td> <th>  Durbin-Watson:     </th>   <td>   2.000</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>   <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>107442123.771</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>            <td>-3.005</td>   <th>  Prob(JB):          </th>   <td>    0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>        <td>50.740</td>   <th>  Cond. No.          </th>   <td>1.09e+16</td>   \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 2.64e-19. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                      y   R-squared:                       0.629\n",
       "Model:                            OLS   Adj. R-squared:                  0.629\n",
       "Method:                 Least Squares   F-statistic:                     7267.\n",
       "Date:                Tue, 04 Oct 2022   Prob (F-statistic):               0.00\n",
       "Time:                        18:13:08   Log-Likelihood:            -5.3217e+05\n",
       "No. Observations:             1113747   AIC:                         1.065e+06\n",
       "Df Residuals:                 1113486   BIC:                         1.068e+06\n",
       "Df Model:                         260                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=====================================================================================\n",
       "                        coef    std err          t      P>|t|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------------\n",
       "DDIPL                -0.0694      0.000   -194.535      0.000      -0.070      -0.069\n",
       "NAIM                 -0.0005      0.000     -4.443      0.000      -0.001      -0.000\n",
       "NAIA                 -0.0005      0.000     -2.056      0.040      -0.001   -2.39e-05\n",
       "HH                    0.0272   7.58e-05    358.524      0.000       0.027       0.027\n",
       "HT                    0.0020   4.29e-05     45.845      0.000       0.002       0.002\n",
       "CSE                  -0.0149   6.65e-05   -224.686      0.000      -0.015      -0.015\n",
       "ANNEE                 0.0085      0.000     16.966      0.000       0.007       0.009\n",
       "EMPNBH                0.0034   7.48e-05     45.836      0.000       0.003       0.004\n",
       "DATANT                0.0048      0.001      6.817      0.000       0.003       0.006\n",
       "DAMOIS               -0.0005      0.000     -3.632      0.000      -0.001      -0.000\n",
       "NRESID                0.0011      0.000      7.780      0.000       0.001       0.001\n",
       "HATYEAR               0.0018   8.42e-05     21.012      0.000       0.002       0.002\n",
       "NBINDE                0.0005      0.001      0.380      0.704      -0.002       0.003\n",
       "NBACTOC              -0.0082      0.002     -4.725      0.000      -0.012      -0.005\n",
       "NBENF18A              0.0126      0.001      8.702      0.000       0.010       0.015\n",
       "NBENF6A               0.0057      0.002      2.777      0.005       0.002       0.010\n",
       "NBENF3A               0.0107      0.004      2.868      0.004       0.003       0.018\n",
       "NBENF18MA            -0.0098      0.004     -2.394      0.017      -0.018      -0.002\n",
       "HHC                  -0.0134      0.000    -96.320      0.000      -0.014      -0.013\n",
       "NBCHOME              -0.0101      0.002     -5.048      0.000      -0.014      -0.006\n",
       "DATDIP               -0.0013      0.000     -9.775      0.000      -0.002      -0.001\n",
       "NBTOT                 0.0009      0.000      3.188      0.001       0.000       0.001\n",
       "CSPP                 -0.0001   3.75e-05     -3.597      0.000      -0.000   -6.13e-05\n",
       "CSPM                  0.0001   3.18e-05      3.989      0.000    6.45e-05       0.000\n",
       "FORDAT               -0.0081      0.001    -12.206      0.000      -0.009      -0.007\n",
       "DIPDET                0.0060      0.000     31.525      0.000       0.006       0.006\n",
       "NBACTOP              -0.0058      0.002     -3.861      0.000      -0.009      -0.003\n",
       "NBACTIF              -0.0160      0.002     -8.580      0.000      -0.020      -0.012\n",
       "NBENFIND              0.0230      0.002     12.855      0.000       0.019       0.026\n",
       "NBENFA18             -0.0107      0.003     -3.672      0.000      -0.016      -0.005\n",
       "NBENFA15              0.0024      0.003      0.846      0.398      -0.003       0.008\n",
       "NBENFA10              0.0005      0.003      0.200      0.841      -0.005       0.006\n",
       "NBENFA6              -0.0020      0.003     -0.632      0.527      -0.008       0.004\n",
       "NBENFA3              -0.0027      0.004     -0.685      0.493      -0.010       0.005\n",
       "NBENFA1              -0.0187      0.005     -3.599      0.000      -0.029      -0.009\n",
       "NBIND                -0.0018      0.002     -0.734      0.463      -0.007       0.003\n",
       "SECT                 -0.0003   2.26e-06   -126.037      0.000      -0.000      -0.000\n",
       "AGE                   0.0090      0.000     35.775      0.000       0.008       0.009\n",
       "EXPE                  0.0048      0.001      6.789      0.000       0.003       0.006\n",
       "EXPEPOT              -0.0134      0.001    -20.515      0.000      -0.015      -0.012\n",
       "LHHC                  0.9353      0.004    260.851      0.000       0.928       0.942\n",
       "A                    -0.0545      0.003    -19.172      0.000      -0.060      -0.049\n",
       "B                     0.0162      0.003      5.651      0.000       0.011       0.022\n",
       "C                    -0.0620      0.004    -16.437      0.000      -0.069      -0.055\n",
       "D                     0.1943      0.007     28.495      0.000       0.181       0.208\n",
       "SectA                 0.0118      0.003      3.769      0.000       0.006       0.018\n",
       "SectB                -0.0303      0.004     -8.081      0.000      -0.038      -0.023\n",
       "SectC                 0.0093      0.003      3.392      0.001       0.004       0.015\n",
       "SectD                -0.0762      0.004    -21.187      0.000      -0.083      -0.069\n",
       "SectE                -0.0085      0.004     -1.930      0.054      -0.017       0.000\n",
       "SectF                -0.0807      0.005    -17.030      0.000      -0.090      -0.071\n",
       "SectG                -0.0150      0.004     -3.467      0.001      -0.023      -0.006\n",
       "SectH                 0.0224      0.004      5.427      0.000       0.014       0.030\n",
       "SectI                 0.0416      0.003     14.844      0.000       0.036       0.047\n",
       "SectJ                 0.0232      0.003      6.972      0.000       0.017       0.030\n",
       "DepA                  0.0247      0.000     79.936      0.000       0.024       0.025\n",
       "DepB                  0.0076      0.000     34.710      0.000       0.007       0.008\n",
       "DepC                  0.0387      0.000     85.646      0.000       0.038       0.040\n",
       "DepA_DNAI            -0.0005      0.000     -1.071      0.284      -0.001       0.000\n",
       "DepB_DNAI         -4.299e-05      0.000     -0.107      0.915      -0.001       0.001\n",
       "DepC_DNAI            -0.0001      0.001     -0.181      0.856      -0.001       0.001\n",
       "DepA_DEPPER          -0.0028      0.001     -3.341      0.001      -0.004      -0.001\n",
       "DepB_DEPPER          -0.0004      0.001     -0.555      0.579      -0.002       0.001\n",
       "DepC_DEPPER          -0.0061      0.001     -4.908      0.000      -0.009      -0.004\n",
       "DepA_DEPMER          -0.0030      0.001     -3.572      0.000      -0.005      -0.001\n",
       "DepB_DEPMER          -0.0012      0.001     -1.838      0.066      -0.003     8.1e-05\n",
       "DepC_DEPMER          -0.0088      0.001     -7.148      0.000      -0.011      -0.006\n",
       "DDIPL_nan            -0.5797      0.047    -12.326      0.000      -0.672      -0.488\n",
       "NAIM_nan             -0.0625      0.019     -3.307      0.001      -0.099      -0.025\n",
       "HH_nan                1.0472      0.004    290.512      0.000       1.040       1.054\n",
       "HT_nan               -0.1980      0.014    -14.357      0.000      -0.225      -0.171\n",
       "CSE_nan              -0.1260      0.190     -0.664      0.507      -0.498       0.246\n",
       "EMPNBH_nan            0.1113      0.003     35.451      0.000       0.105       0.117\n",
       "DATANT_nan            9.3194      1.376      6.775      0.000       6.623      12.015\n",
       "DAMOIS_nan            0.0802      0.001     55.044      0.000       0.077       0.083\n",
       "NRESID_nan            0.0707      0.009      7.966      0.000       0.053       0.088\n",
       "HATYEAR_nan           0.2566      0.009     27.969      0.000       0.239       0.275\n",
       "NBINDE_nan           -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "NBACTOC_nan          -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "NBENF18A_nan         -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "NBENF6A_nan          -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "NBENF3A_nan          -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "NBENF18MA_nan        -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "HHC_nan               2.2048      0.009    248.230      0.000       2.187       2.222\n",
       "NBCHOME_nan          -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "DATDIP_nan           -0.0733      0.007    -10.670      0.000      -0.087      -0.060\n",
       "NBTOT_nan             0.0630      0.011      5.690      0.000       0.041       0.085\n",
       "CSPP_nan             -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "CSPM_nan             -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "FORDAT_nan           -0.4280      0.024    -17.943      0.000      -0.475      -0.381\n",
       "DIPDET_nan            0.6922      0.053     13.082      0.000       0.588       0.796\n",
       "NBACTOP_nan          -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBACTIF_nan          -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFIND_nan         -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFA18_nan         -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFA15_nan         -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFA10_nan         -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFA6_nan          -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFA3_nan          -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBENFA1_nan          -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "NBIND_nan            -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "SECT_nan             -0.1513      0.002    -61.262      0.000      -0.156      -0.146\n",
       "EXPE_nan              9.3194      1.376      6.775      0.000       6.623      12.015\n",
       "EXPEPOT_nan          -0.4280      0.024    -17.943      0.000      -0.475      -0.381\n",
       "LHHC_nan              2.2048      0.009    248.230      0.000       2.187       2.222\n",
       "A_nan                -0.2348      0.006    -37.633      0.000      -0.247      -0.223\n",
       "B_nan                -0.2348      0.006    -37.633      0.000      -0.247      -0.223\n",
       "C_nan                -0.2348      0.006    -37.633      0.000      -0.247      -0.223\n",
       "D_nan                -0.2348      0.006    -37.633      0.000      -0.247      -0.223\n",
       "SectA_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectB_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectC_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectD_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectE_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectF_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectG_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectH_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectI_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "SectJ_nan             0.0242      0.023      1.070      0.285      -0.020       0.068\n",
       "DepA_nan              0.0614      0.033      1.886      0.059      -0.002       0.125\n",
       "DepB_nan              0.0614      0.033      1.886      0.059      -0.002       0.125\n",
       "DepC_nan              0.0614      0.033      1.886      0.059      -0.002       0.125\n",
       "DepA_DNAI_nan         0.0063      0.003      2.481      0.013       0.001       0.011\n",
       "DepB_DNAI_nan         0.0063      0.003      2.481      0.013       0.001       0.011\n",
       "DepC_DNAI_nan         0.0063      0.003      2.481      0.013       0.001       0.011\n",
       "DepA_DEPPER_nan      -0.0202      0.004     -5.309      0.000      -0.028      -0.013\n",
       "DepB_DEPPER_nan      -0.0202      0.004     -5.309      0.000      -0.028      -0.013\n",
       "DepC_DEPPER_nan      -0.0202      0.004     -5.309      0.000      -0.028      -0.013\n",
       "DepA_DEPMER_nan      -0.0206      0.004     -5.278      0.000      -0.028      -0.013\n",
       "DepB_DEPMER_nan      -0.0206      0.004     -5.278      0.000      -0.028      -0.013\n",
       "DepC_DEPMER_nan      -0.0206      0.004     -5.278      0.000      -0.028      -0.013\n",
       "DATDEB_vec0          -0.0008      0.000     -1.512      0.131      -0.002       0.000\n",
       "DATDEB_vec1           0.0006      0.001      0.710      0.478      -0.001       0.002\n",
       "PNAI_vec0            -0.0319      0.006     -5.108      0.000      -0.044      -0.020\n",
       "PNAI_vec1             0.0376      0.008      4.593      0.000       0.022       0.054\n",
       "CODPCL_vec0           0.2826      0.005     57.622      0.000       0.273       0.292\n",
       "CODPCL_vec1          -0.0505      0.001    -41.663      0.000      -0.053      -0.048\n",
       "CSMERE_vec0           0.0595      0.017      3.589      0.000       0.027       0.092\n",
       "CSMERE_vec1           0.0039      0.007      0.595      0.552      -0.009       0.017\n",
       "CSPERE_vec0          -0.0037      0.012     -0.316      0.752      -0.027       0.019\n",
       "CSPERE_vec1           0.0066      0.009      0.713      0.476      -0.012       0.025\n",
       "DNAIM_vec0            0.0003      0.003      0.125      0.901      -0.005       0.006\n",
       "DNAIM_vec1           -0.0138      0.011     -1.313      0.189      -0.034       0.007\n",
       "DNAIP_vec0            0.0456      0.008      6.034      0.000       0.031       0.060\n",
       "DNAIP_vec1            0.0547      0.009      6.099      0.000       0.037       0.072\n",
       "REG_vec0             -0.0086      0.002     -4.570      0.000      -0.012      -0.005\n",
       "REG_vec1              0.0069      0.002      3.412      0.001       0.003       0.011\n",
       "SPE_vec0             -0.2367      0.009    -25.172      0.000      -0.255      -0.218\n",
       "SPE_vec1             -0.1707      0.009    -18.368      0.000      -0.189      -0.153\n",
       "PAIMERCDET_vec0      -0.0256      0.005     -5.190      0.000      -0.035      -0.016\n",
       "PAIMERCDET_vec1       0.0615      0.013      4.680      0.000       0.036       0.087\n",
       "PAIPERCDET_vec0       0.0014      0.001      1.324      0.186      -0.001       0.003\n",
       "PAIPERCDET_vec1      -0.0877      0.014     -6.399      0.000      -0.115      -0.061\n",
       "CODNAFN_vec0         -0.1929      0.008    -25.448      0.000      -0.208      -0.178\n",
       "CODNAFN_vec1          0.0508      0.002     23.555      0.000       0.047       0.055\n",
       "PAIPER_vec0          -0.0101      0.004     -2.542      0.011      -0.018      -0.002\n",
       "PAIPER_vec1          -0.0590      0.016     -3.655      0.000      -0.091      -0.027\n",
       "PAIMER_vec0           0.0154      0.005      2.842      0.004       0.005       0.026\n",
       "PAIMER_vec1          -0.0154      0.009     -1.639      0.101      -0.034       0.003\n",
       "DIPFIN_vec0           0.0283      0.004      6.982      0.000       0.020       0.036\n",
       "DIPFIN_vec1           0.3583      0.019     18.625      0.000       0.321       0.396\n",
       "NIVFIN_vec0           0.0823      0.011      7.597      0.000       0.061       0.104\n",
       "NIVFIN_vec1          -0.1053      0.010    -10.658      0.000      -0.125      -0.086\n",
       "STATUT_11            -0.3002      0.020    -14.702      0.000      -0.340      -0.260\n",
       "STATUT_12            -0.0366      0.019     -1.900      0.057      -0.074       0.001\n",
       "STATUT_13            -0.5141      0.055     -9.387      0.000      -0.621      -0.407\n",
       "STATUT_21             0.2072      0.019     10.995      0.000       0.170       0.244\n",
       "STATUT_22            -0.3935      0.019    -20.843      0.000      -0.430      -0.356\n",
       "STATUT_33             0.0532      0.019      2.853      0.004       0.017       0.090\n",
       "STATUT_34            -0.0558      0.019     -2.979      0.003      -0.093      -0.019\n",
       "STATUT_35             0.1797      0.019      9.678      0.000       0.143       0.216\n",
       "STATUT_41             0.2931      0.019     15.752      0.000       0.257       0.330\n",
       "STATUT_42            -0.4420      0.054     -8.207      0.000      -0.548      -0.336\n",
       "STATUT_43             0.0319      0.019      1.691      0.091      -0.005       0.069\n",
       "STATUT_44             0.0477      0.019      2.447      0.014       0.009       0.086\n",
       "STATUT_45             0.1878      0.019     10.083      0.000       0.151       0.224\n",
       "STATUT_new_nan       -0.1260      0.190     -0.664      0.507      -0.498       0.246\n",
       "SEXE_1               -0.3468      0.067     -5.144      0.000      -0.479      -0.215\n",
       "SEXE_2               -0.5209      0.067     -7.726      0.000      -0.653      -0.389\n",
       "ACTEU_1              -0.2635      0.045     -5.793      0.000      -0.353      -0.174\n",
       "ACTEU_2              -0.3213      0.045     -7.073      0.000      -0.410      -0.232\n",
       "ACTEU_3              -0.2829      0.046     -6.200      0.000      -0.372      -0.193\n",
       "TRIM_1               -0.3648      0.047     -7.680      0.000      -0.458      -0.272\n",
       "TRIM_2               -0.3574      0.048     -7.524      0.000      -0.451      -0.264\n",
       "TRIM_3               -0.3504      0.047     -7.377      0.000      -0.443      -0.257\n",
       "TRIM_4               -0.3517      0.048     -7.404      0.000      -0.445      -0.259\n",
       "TRIM_new_nan          0.5566      0.059      9.510      0.000       0.442       0.671\n",
       "RGA_1                -0.2434      0.032     -7.680      0.000      -0.305      -0.181\n",
       "RGA_2                -0.2402      0.032     -7.549      0.000      -0.303      -0.178\n",
       "RGA_3                -0.2389      0.032     -7.488      0.000      -0.301      -0.176\n",
       "RGA_4                -0.2351      0.032     -7.359      0.000      -0.298      -0.172\n",
       "RGA_5                -0.2244      0.032     -7.014      0.000      -0.287      -0.162\n",
       "RGA_6                -0.2424      0.032     -7.648      0.000      -0.304      -0.180\n",
       "RGA_new_nan           0.5566      0.059      9.510      0.000       0.442       0.671\n",
       "SO_1                 -0.0690      0.017     -3.973      0.000      -0.103      -0.035\n",
       "SO_2                 -0.0819      0.017     -4.725      0.000      -0.116      -0.048\n",
       "SO_3                 -0.1294      0.017     -7.438      0.000      -0.164      -0.095\n",
       "SO_4                 -0.1035      0.017     -5.957      0.000      -0.138      -0.069\n",
       "SO_5                 -0.1243      0.018     -6.910      0.000      -0.160      -0.089\n",
       "SO_6                 -0.1463      0.018     -8.315      0.000      -0.181      -0.112\n",
       "SO_7                 -0.1152      0.030     -3.800      0.000      -0.175      -0.056\n",
       "SO_new_nan           -0.0980      0.017     -5.634      0.000      -0.132      -0.064\n",
       "IMMI_1               -0.7256      0.095     -7.626      0.000      -0.912      -0.539\n",
       "IMMI_2               -0.6987      0.095     -7.366      0.000      -0.885      -0.513\n",
       "IMMI_new_nan          0.5566      0.059      9.510      0.000       0.442       0.671\n",
       "TPP_1                -0.1482      0.035     -4.235      0.000      -0.217      -0.080\n",
       "TPP_2                -0.0645      0.035     -1.858      0.063      -0.132       0.004\n",
       "TPP_3                -0.4041      0.035    -11.686      0.000      -0.472      -0.336\n",
       "TPP_new_nan          -0.2509      0.035     -7.152      0.000      -0.320      -0.182\n",
       "TPPRED_1             -0.2318      0.048     -4.792      0.000      -0.327      -0.137\n",
       "TPPRED_2             -0.5366      0.048    -11.120      0.000      -0.631      -0.442\n",
       "TPPRED_new_nan       -0.0993      0.057     -1.743      0.081      -0.211       0.012\n",
       "NIVETD_10             0.0227      0.017      1.373      0.170      -0.010       0.055\n",
       "NIVETD_12             0.0832      0.017      5.030      0.000       0.051       0.116\n",
       "NIVETD_20            -0.0093      0.017     -0.562      0.574      -0.042       0.023\n",
       "NIVETD_29            -0.0178      0.017     -1.077      0.281      -0.050       0.015\n",
       "NIVETD_31             0.0863      0.016      5.246      0.000       0.054       0.119\n",
       "NIVETD_32             0.0732      0.016      4.501      0.000       0.041       0.105\n",
       "NIVETD_33             0.1159      0.017      6.990      0.000       0.083       0.148\n",
       "NIVETD_41             0.1194      0.016      7.326      0.000       0.087       0.151\n",
       "NIVETD_42             0.1132      0.016      6.900      0.000       0.081       0.145\n",
       "NIVETD_43             0.0965      0.016      5.907      0.000       0.064       0.129\n",
       "NIVETD_51             0.1456      0.016      8.860      0.000       0.113       0.178\n",
       "NIVETD_52             0.0956      0.016      5.916      0.000       0.064       0.127\n",
       "NIVETD_61             0.1127      0.016      6.915      0.000       0.081       0.145\n",
       "NIVETD_71             0.0858      0.017      5.158      0.000       0.053       0.118\n",
       "NIVETD_72             0.0070      0.016      0.425      0.671      -0.025       0.039\n",
       "NIVETD_73            -0.0583      0.019     -3.108      0.002      -0.095      -0.022\n",
       "NIVETD_new_nan       -1.9393      0.216     -8.963      0.000      -2.363      -1.515\n",
       "TYPMEN_10            -0.0619      0.009     -6.773      0.000      -0.080      -0.044\n",
       "TYPMEN_21            -0.0299      0.009     -3.288      0.001      -0.048      -0.012\n",
       "TYPMEN_22            -0.1341      0.011    -12.757      0.000      -0.155      -0.114\n",
       "TYPMEN_31            -0.0768      0.009     -8.292      0.000      -0.095      -0.059\n",
       "TYPMEN_32            -0.0465      0.009     -5.156      0.000      -0.064      -0.029\n",
       "TYPMEN_41            -0.0406      0.009     -4.439      0.000      -0.058      -0.023\n",
       "TYPMEN_42            -0.0424      0.009     -4.717      0.000      -0.060      -0.025\n",
       "TYPMEN_43            -0.1078      0.011     -9.967      0.000      -0.129      -0.087\n",
       "TYPMEN_51            -0.1413      0.011    -12.378      0.000      -0.164      -0.119\n",
       "TYPMEN_52            -0.0757      0.010     -7.820      0.000      -0.095      -0.057\n",
       "TYPMEN_new_nan       -0.1106      0.056     -1.977      0.048      -0.220      -0.001\n",
       "RGI_1                -0.1043      0.021     -5.049      0.000      -0.145      -0.064\n",
       "RGI_2                -0.1350      0.021     -6.308      0.000      -0.177      -0.093\n",
       "RGI_3                -0.1421      0.021     -6.693      0.000      -0.184      -0.100\n",
       "RGI_4                -0.1287      0.021     -6.134      0.000      -0.170      -0.088\n",
       "RGI_5                -0.1307      0.021     -6.287      0.000      -0.171      -0.090\n",
       "RGI_6                -0.1359      0.021     -6.585      0.000      -0.176      -0.095\n",
       "RGI_new_nan          -0.0910      0.044     -2.076      0.038      -0.177      -0.005\n",
       "TYPVOIS_1            -0.1326      0.023     -5.867      0.000      -0.177      -0.088\n",
       "TYPVOIS_2            -0.1476      0.023     -6.553      0.000      -0.192      -0.103\n",
       "TYPVOIS_3            -0.1545      0.023     -6.846      0.000      -0.199      -0.110\n",
       "TYPVOIS_4            -0.1555      0.023     -6.862      0.000      -0.200      -0.111\n",
       "TYPVOIS_5            -0.1418      0.023     -6.208      0.000      -0.187      -0.097\n",
       "TYPVOIS_new_nan      -0.1357      0.023     -5.859      0.000      -0.181      -0.090\n",
       "RDQ_1                -0.3102      0.136     -2.276      0.023      -0.577      -0.043\n",
       "RDQ_2                -0.3186      0.136     -2.337      0.019      -0.586      -0.051\n",
       "RDQ_new_nan          -0.2389      0.265     -0.900      0.368      -0.759       0.281\n",
       "AUTSAL_1             -0.2919      0.046     -6.317      0.000      -0.382      -0.201\n",
       "AUTSAL_2             -0.2771      0.045     -6.110      0.000      -0.366      -0.188\n",
       "AUTSAL_new_nan       -0.2987      0.045     -6.587      0.000      -0.388      -0.210\n",
       "TYPSAL_1             -0.2976      0.053     -5.594      0.000      -0.402      -0.193\n",
       "TYPSAL_2             -0.3696      0.053     -6.949      0.000      -0.474      -0.265\n",
       "TYPSAL_new_nan       -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "AM2NB_1              -0.2284      0.035     -6.454      0.000      -0.298      -0.159\n",
       "AM2NB_2              -0.2328      0.038     -6.192      0.000      -0.307      -0.159\n",
       "AM2NB_3              -0.1891      0.044     -4.312      0.000      -0.275      -0.103\n",
       "AM2NB_new_nan        -0.2173      0.036     -6.118      0.000      -0.287      -0.148\n",
       "CHPUB_1              -0.0752      0.021     -3.557      0.000      -0.117      -0.034\n",
       "CHPUB_2              -0.0193      0.021     -0.902      0.367      -0.061       0.023\n",
       "CHPUB_3              -0.0977      0.025     -3.912      0.000      -0.147      -0.049\n",
       "CHPUB_4              -0.1263      0.025     -5.057      0.000      -0.175      -0.077\n",
       "CHPUB_5              -0.0860      0.025     -3.422      0.001      -0.135      -0.037\n",
       "CHPUB_6              -0.0105      0.028     -0.371      0.711      -0.066       0.045\n",
       "CHPUB_7              -0.2598      0.025    -10.550      0.000      -0.308      -0.212\n",
       "CHPUB_new_nan        -0.1930      0.030     -6.335      0.000      -0.253      -0.133\n",
       "CONTRA_0             -0.3414      0.020    -16.936      0.000      -0.381      -0.302\n",
       "CONTRA_1             -0.1722      0.020     -8.768      0.000      -0.211      -0.134\n",
       "CONTRA_2             -0.1088      0.020     -5.511      0.000      -0.147      -0.070\n",
       "CONTRA_3              0.0624      0.022      2.875      0.004       0.020       0.105\n",
       "CONTRA_4             -0.0630      0.021     -3.068      0.002      -0.103      -0.023\n",
       "CONTRA_5              0.1015      0.021      4.876      0.000       0.061       0.142\n",
       "CONTRA_new_nan       -0.3462      0.020    -16.991      0.000      -0.386      -0.306\n",
       "FONCTC_1             -0.0806      0.013     -6.416      0.000      -0.105      -0.056\n",
       "FONCTC_10            -0.0648      0.013     -5.135      0.000      -0.090      -0.040\n",
       "FONCTC_2             -0.1067      0.013     -8.295      0.000      -0.132      -0.081\n",
       "FONCTC_3             -0.1023      0.013     -7.938      0.000      -0.128      -0.077\n",
       "FONCTC_4             -0.0926      0.013     -7.026      0.000      -0.118      -0.067\n",
       "FONCTC_5             -0.0551      0.013     -4.343      0.000      -0.080      -0.030\n",
       "FONCTC_6             -0.0212      0.013     -1.670      0.095      -0.046       0.004\n",
       "FONCTC_7             -0.0852      0.013     -6.720      0.000      -0.110      -0.060\n",
       "FONCTC_8             -0.0849      0.013     -6.661      0.000      -0.110      -0.060\n",
       "FONCTC_9             -0.1026      0.013     -8.122      0.000      -0.127      -0.078\n",
       "FONCTC_new_nan       -0.0716      0.013     -5.649      0.000      -0.096      -0.047\n",
       "TITC_1               -0.1013      0.029     -3.497      0.000      -0.158      -0.045\n",
       "TITC_2                0.0104      0.028      0.371      0.711      -0.045       0.066\n",
       "TITC_3               -0.2613      0.028     -9.183      0.000      -0.317      -0.206\n",
       "TITC_4               -0.2460      0.030     -8.184      0.000      -0.305      -0.187\n",
       "TITC_new_nan         -0.2695      0.035     -7.614      0.000      -0.339      -0.200\n",
       "OCCREF_1             -0.2887      0.053     -5.420      0.000      -0.393      -0.184\n",
       "OCCREF_2             -0.3786      0.053     -7.092      0.000      -0.483      -0.274\n",
       "OCCREF_new_nan       -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "QPRC_1               -0.1179      0.014     -8.297      0.000      -0.146      -0.090\n",
       "QPRC_2               -0.0952      0.014     -6.824      0.000      -0.122      -0.068\n",
       "QPRC_3               -0.1696      0.014    -12.006      0.000      -0.197      -0.142\n",
       "QPRC_4               -0.1355      0.014     -9.772      0.000      -0.163      -0.108\n",
       "QPRC_5               -0.1084      0.014     -7.845      0.000      -0.135      -0.081\n",
       "QPRC_6               -0.0170      0.014     -1.205      0.228      -0.045       0.011\n",
       "QPRC_7                0.1444      0.018      7.806      0.000       0.108       0.181\n",
       "QPRC_8               -0.1272      0.014     -8.835      0.000      -0.155      -0.099\n",
       "QPRC_9               -0.1082      0.014     -7.785      0.000      -0.135      -0.081\n",
       "QPRC_new_nan         -0.1331      0.020     -6.639      0.000      -0.172      -0.094\n",
       "STAT2_2              -0.6672      0.106     -6.274      0.000      -0.876      -0.459\n",
       "STAT2_new_nan        -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "TYPMEN21_11          -0.0727      0.015     -4.702      0.000      -0.103      -0.042\n",
       "TYPMEN21_21           0.0388      0.103      0.377      0.706      -0.163       0.241\n",
       "TYPMEN21_22          -0.0656      0.103     -0.637      0.524      -0.268       0.136\n",
       "TYPMEN21_23          -0.1176      0.288     -0.409      0.683      -0.681       0.446\n",
       "TYPMEN21_31          -0.0595      0.011     -5.595      0.000      -0.080      -0.039\n",
       "TYPMEN21_32          -0.0222      0.011     -2.111      0.035      -0.043      -0.002\n",
       "TYPMEN21_41          -0.0159      0.008     -1.898      0.058      -0.032       0.001\n",
       "TYPMEN21_42           0.0085      0.008      0.998      0.318      -0.008       0.025\n",
       "TYPMEN21_43          -0.0945      0.011     -8.911      0.000      -0.115      -0.074\n",
       "TYPMEN21_51          -0.0548      0.016     -3.427      0.001      -0.086      -0.023\n",
       "TYPMEN21_52          -0.0500      0.016     -3.184      0.001      -0.081      -0.019\n",
       "TYPMEN21_61          -0.0556      0.017     -3.243      0.001      -0.089      -0.022\n",
       "TYPMEN21_62          -0.0461      0.014     -3.186      0.001      -0.074      -0.018\n",
       "TYPMEN21_91          -0.0431      0.013     -3.375      0.001      -0.068      -0.018\n",
       "TYPMEN21_92          -0.0169      0.012     -1.447      0.148      -0.040       0.006\n",
       "TYPMEN21_new_nan     -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "TYPMEN7_1            -0.0727      0.015     -4.702      0.000      -0.103      -0.042\n",
       "TYPMEN7_2            -0.1444      0.084     -1.718      0.086      -0.309       0.020\n",
       "TYPMEN7_3            -0.0817      0.021     -3.978      0.000      -0.122      -0.041\n",
       "TYPMEN7_4            -0.1020      0.023     -4.395      0.000      -0.147      -0.056\n",
       "TYPMEN7_5            -0.1048      0.022     -4.870      0.000      -0.147      -0.063\n",
       "TYPMEN7_6            -0.1017      0.021     -4.732      0.000      -0.144      -0.060\n",
       "TYPMEN7_9            -0.0600      0.021     -2.878      0.004      -0.101      -0.019\n",
       "TYPMEN7_new_nan      -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "CATAU2010_111        -0.0636      0.012     -5.229      0.000      -0.087      -0.040\n",
       "CATAU2010_112        -0.0695      0.012     -5.688      0.000      -0.093      -0.046\n",
       "CATAU2010_120        -0.0554      0.012     -4.456      0.000      -0.080      -0.031\n",
       "CATAU2010_211        -0.0543      0.013     -4.261      0.000      -0.079      -0.029\n",
       "CATAU2010_212        -0.0589      0.016     -3.771      0.000      -0.090      -0.028\n",
       "CATAU2010_221        -0.0652      0.013     -5.099      0.000      -0.090      -0.040\n",
       "CATAU2010_222        -0.1621      0.021     -7.737      0.000      -0.203      -0.121\n",
       "CATAU2010_300        -0.0793      0.013     -6.342      0.000      -0.104      -0.055\n",
       "CATAU2010_400        -0.0588      0.013     -4.651      0.000      -0.084      -0.034\n",
       "CATAU2010_new_nan    -0.2005      0.036     -5.573      0.000      -0.271      -0.130\n",
       "==============================================================================\n",
       "Omnibus:                   865179.454   Durbin-Watson:                   2.000\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):        107442123.771\n",
       "Skew:                          -3.005   Prob(JB):                         0.00\n",
       "Kurtosis:                      50.740   Cond. No.                     1.09e+16\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 2.64e-19. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = x_train\n",
    "Y = y_train_log.values\n",
    "\n",
    "OLSmodel = sm.OLS(Y, X).fit()\n",
    "predictions = OLSmodel.predict(X)\n",
    "\n",
    "OLSmodel.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On estime les performances de ce modèle linéaire sur les différents échantillons test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "OLSperf = perfestim(df=test_df, model=OLSmodel, predvar=predicted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.4115341030046739, 'Variance du prédicteur du log-salaire': 0.2545616494441364, 'Variance des résidus du log-salaire': 0.15487313749749906, 'R2 log-salaire': 0.6236687643460253, 'Variance totale salaire': 2246984.6333126994, 'Variance du prédicteur du salaire': 505714.02261606074, 'Variance des résidus du salaire': 1724675.410571853, 'R2 salaire': 0.23244895180738867}\n"
     ]
    }
   ],
   "source": [
    "print(OLSperf[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "ols_df = OLSperf[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x257055d6548>"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hexbin(ols_df.loc[ols_df[predicted]<6000,predicted], ols_df.loc[ols_df[predicted]<6000,\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "OLSperf18 = perfestim(df=test18_df, model=OLSmodel, predvar=predicted)\n",
    "OLSperf18t1 = perfestim(df=test18_df.loc[test18_df.TRIM_1==1,], model=OLSmodel, predvar=predicted)\n",
    "OLSperf18t1r1 = perfestim(df=test18_df.loc[(test18_df.TRIM_1==1)&(test18_df.RGA_1==1),], model=OLSmodel, predvar=predicted)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.40021614820665274, 'Variance du prédicteur du log-salaire': 0.27324865162559825, 'Variance des résidus du log-salaire': 0.14424863645328082, 'R2 log-salaire': 0.6395731728975673, 'Variance totale salaire': 2664478.2905998337, 'Variance du prédicteur du salaire': 653106.3189686481, 'Variance des résidus du salaire': 1898242.0029435405, 'R2 salaire': 0.28757460338841656}\n",
      "{'Variance totale log-salaire': 0.40804679088513135, 'Variance du prédicteur du log-salaire': 0.28116953306052694, 'Variance des résidus du log-salaire': 0.13790644174070923, 'R2 log-salaire': 0.6620327746198815, 'Variance totale salaire': 2206705.372688974, 'Variance du prédicteur du salaire': 667081.9407937265, 'Variance des résidus du salaire': 1376219.3022167399, 'R2 salaire': 0.3763466028363577}\n",
      "{'Variance totale log-salaire': 0.40136757645660415, 'Variance du prédicteur du log-salaire': 0.2910952257362159, 'Variance des résidus du log-salaire': 0.12625644188681698, 'R2 log-salaire': 0.6854343766343871, 'Variance totale salaire': 3176474.955046984, 'Variance du prédicteur du salaire': 705874.1948071019, 'Variance des résidus du salaire': 2242271.7118175277, 'R2 salaire': 0.2941006167056772}\n"
     ]
    }
   ],
   "source": [
    "print(OLSperf18[1])\n",
    "print(OLSperf18t1[1])\n",
    "print(OLSperf18t1r1[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "ols_df18 = OLSperf18[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x2577a32aa88>"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hexbin(ols_df18.loc[ols_df18[predicted]<6000,predicted], ols_df18.loc[ols_df18[predicted]<6000,\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On compare les prédictions par tranche sur la population des non-répondants en clair mais répondants en tranche, pour le modèle OLS et pour le modèle RN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_testm = miss_df.loc[:,predl]\n",
    "dfo = miss_df.loc[:,[\"SALMET\"]]\n",
    "dfo[\"SALPRED\"] = np.exp(OLSmodel.predict(x_testm))\n",
    "dfo = dfo.loc[dfo[\"SALMET\"]!=0,:]\n",
    "SALMETols = dfo[\"SALMET\"]\n",
    "SALPREDTols = pd.cut(dfo['SALPRED'],bins=[0,499,999,1249,1499,1999,2499,2999,4999,7999,float(\"inf\")])\n",
    "ols_tranches = pd.crosstab(SALPREDTols, SALMETols,  normalize='columns', dropna=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "RN_ols_diff = ols_tranches.subtract(crosstab_RN_salmet.values, axis='index')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sn.heatmap(RN_ols_diff, cmap=\"PiYG\")\n",
    "plt.savefig('RN_ols_diff', bbox_inches='tight')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On distingue nettement la forte différence d'erreur de prédiction pour les hauts salaires : les enquêtés ayant déclaré, en tranche, gagner plus de 8000 euros par mois ont une tranche de salaire bien mieux prédite par le modèle RN que par le modèle OLS. Les non-linéarités du RN réduisent donc le biais de prédiction sur les hauts salaires."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5.2 Comparaison avec des modèles linéaires avec des jeux de variable différents"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "La sélection des variables se fait avant les étapes de retraitements des valeurs manquantes et de vectorisation. On doit donc reprendre une partie de ces retraitements après sélection des variables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Mincer sans les nomenclatures (sauf le secteur en trois chiffres)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1531841, 36)\n",
      "replacing nan in...\n",
      "numerical column...\n",
      "NAIM\n",
      "NAIA\n",
      "ANNEE\n",
      "LHHC\n",
      "DATANT\n",
      "DAMOIS\n",
      "DATDIP\n",
      "NBTOT\n",
      "FORDAT\n",
      "AGE\n",
      "EXPE\n",
      "EXPEPOT\n",
      "SALMEERED\n",
      "categorical column...\n",
      "STATUT\n",
      "CSE\n",
      "DDIPL\n",
      "SEXE\n",
      "ACTEU\n",
      "RGA\n",
      "PRIM\n",
      "PRIMS\n",
      "REVENT\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "TPP\n",
      "OCCREF\n",
      "QPRC\n",
      "TPPRED\n",
      "IMMI\n",
      "SECT\n",
      "TRIM\n",
      "(1531841, 46)\n",
      "There were 46 columns before encoding categorical features\n",
      "OneHotEncoding column...\n",
      "STATUT\n",
      "CSE\n",
      "DDIPL\n",
      "SEXE\n",
      "ACTEU\n",
      "RGA\n",
      "PRIM\n",
      "PRIMS\n",
      "REVENT\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "TPP\n",
      "OCCREF\n",
      "QPRC\n",
      "TPPRED\n",
      "IMMI\n",
      "SECT\n",
      "TRIM\n",
      "There are 273 columns after encoding categorical features\n"
     ]
    }
   ],
   "source": [
    "# Mincer sans nomenclatures\n",
    "madata = copy.deepcopy(datasave2.loc[:,Mincercola])\n",
    "print(madata.shape)\n",
    "madata.loc[:,\"SECT\"] = [i[0:2] for i in madata.loc[:,\"SECT\"].astype(\"str\")]\n",
    "objl = [i for i in madata.columns if (i not in numl)]\n",
    "objl = objl+['CSE','DDIPL','SECT']\n",
    "numl = [i for i in madata.columns if (i not in objl)]\n",
    "madata_nonan = replace_nans(madata, numl, objl)\n",
    "#num_cols = get_cols(madata_nonan , 'num')\n",
    "#cat_cols = get_cols(madata_nonan , 'no_num')\n",
    "print(madata_nonan.shape)\n",
    "print('There were {} columns before encoding categorical features'.format(madata_nonan.shape[1]))\n",
    "Mincera = oneHotEncode(madata_nonan, objl)\n",
    "print('There are {} columns after encoding categorical features'.format(Mincera.shape[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "45"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(madata)\n",
    "del(madata_nonan)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincera[['SALMET']] = datasave2.loc[:,['SALMET']]\n",
    "Mincera[['CONSTANT']]=1\n",
    "Mincera[['AGE2']]=Mincera[['AGE']]*Mincera[['AGE']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "mdata= Mincera.loc[Mincera[\"SALMEERED_nan\"]==0,:].drop(columns=[\"SALMET\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "mtrain = mdata.loc[(mdata[\"NAIM\"]!=3)&(mdata[\"ANNEE\"]<2018),:]\n",
    "my_train = mtrain.loc[:,\"SALMEERED\"].values\n",
    "mx_train = mtrain.drop(columns=[\"SALMEERED\"])\n",
    "mtest = mdata.loc[(mdata[\"NAIM\"]==3)|(mdata[\"ANNEE\"]==2018),:]\n",
    "mtest18 = mdata.loc[mdata[\"ANNEE\"]==2018,:]\n",
    "mylog_train = np.log(my_train+1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared:         </th>  <td>   0.617</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.617</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   7436.</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 04 Oct 2022</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>18:17:59</td>     <th>  Log-Likelihood:    </th> <td>-6.0515e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>1114668</td>     <th>  AIC:               </th>  <td>1.211e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>1114426</td>     <th>  BIC:               </th>  <td>1.214e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   241</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIM</th>           <td>   -0.0003</td> <td>    0.000</td> <td>   -2.588</td> <td> 0.010</td> <td>   -0.001</td> <td>-7.27e-05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIA</th>           <td>   -0.0084</td> <td>    0.000</td> <td>  -30.051</td> <td> 0.000</td> <td>   -0.009</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ANNEE</th>          <td>    0.0180</td> <td>    0.001</td> <td>   33.702</td> <td> 0.000</td> <td>    0.017</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC</th>           <td>    0.6075</td> <td>    0.002</td> <td>  302.290</td> <td> 0.000</td> <td>    0.604</td> <td>    0.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATANT</th>         <td>    0.0037</td> <td>    0.001</td> <td>    5.001</td> <td> 0.000</td> <td>    0.002</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DAMOIS</th>         <td>   -0.0007</td> <td>    0.000</td> <td>   -5.119</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDIP</th>         <td>   -0.0024</td> <td>    0.000</td> <td>  -17.161</td> <td> 0.000</td> <td>   -0.003</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBTOT</th>          <td>    0.0028</td> <td>    0.000</td> <td>    9.848</td> <td> 0.000</td> <td>    0.002</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FORDAT</th>         <td>   -0.0059</td> <td>    0.001</td> <td>   -8.480</td> <td> 0.000</td> <td>   -0.007</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE</th>            <td>    0.0264</td> <td>    0.000</td> <td>   81.923</td> <td> 0.000</td> <td>    0.026</td> <td>    0.027</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPE</th>           <td>    0.0037</td> <td>    0.001</td> <td>    4.995</td> <td> 0.000</td> <td>    0.002</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT</th>        <td>   -0.0089</td> <td>    0.001</td> <td>  -13.022</td> <td> 0.000</td> <td>   -0.010</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIM_nan</th>       <td>   -0.0413</td> <td>    0.020</td> <td>   -2.052</td> <td> 0.040</td> <td>   -0.081</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC_nan</th>       <td>    3.1801</td> <td>    0.017</td> <td>  183.794</td> <td> 0.000</td> <td>    3.146</td> <td>    3.214</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATANT_nan</th>     <td>    7.2968</td> <td>    1.462</td> <td>    4.990</td> <td> 0.000</td> <td>    4.431</td> <td>   10.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DAMOIS_nan</th>     <td>    0.0425</td> <td>    0.002</td> <td>   28.085</td> <td> 0.000</td> <td>    0.040</td> <td>    0.045</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDIP_nan</th>     <td>   -0.0234</td> <td>    0.007</td> <td>   -3.317</td> <td> 0.001</td> <td>   -0.037</td> <td>   -0.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBTOT_nan</th>      <td>    0.1508</td> <td>    0.012</td> <td>   12.811</td> <td> 0.000</td> <td>    0.128</td> <td>    0.174</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FORDAT_nan</th>     <td>   -0.3135</td> <td>    0.025</td> <td>  -12.545</td> <td> 0.000</td> <td>   -0.362</td> <td>   -0.264</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPE_nan</th>       <td>    7.2968</td> <td>    1.462</td> <td>    4.990</td> <td> 0.000</td> <td>    4.431</td> <td>   10.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT_nan</th>    <td>   -0.3135</td> <td>    0.025</td> <td>  -12.545</td> <td> 0.000</td> <td>   -0.362</td> <td>   -0.264</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SALMEERED_nan</th>  <td>-5.574e-13</td> <td> 9.43e-14</td> <td>   -5.914</td> <td> 0.000</td> <td>-7.42e-13</td> <td>-3.73e-13</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_11</th>      <td>    0.0534</td> <td>    0.026</td> <td>    2.040</td> <td> 0.041</td> <td>    0.002</td> <td>    0.105</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_12</th>      <td>    0.2999</td> <td>    0.026</td> <td>   11.532</td> <td> 0.000</td> <td>    0.249</td> <td>    0.351</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_13</th>      <td>   -0.2666</td> <td>    0.061</td> <td>   -4.377</td> <td> 0.000</td> <td>   -0.386</td> <td>   -0.147</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_21</th>      <td>    0.0016</td> <td>    0.023</td> <td>    0.069</td> <td> 0.945</td> <td>   -0.044</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_22</th>      <td>   -0.3927</td> <td>    0.023</td> <td>  -16.800</td> <td> 0.000</td> <td>   -0.439</td> <td>   -0.347</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_33</th>      <td>   -0.0983</td> <td>    0.023</td> <td>   -4.245</td> <td> 0.000</td> <td>   -0.144</td> <td>   -0.053</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_34</th>      <td>   -0.3542</td> <td>    0.023</td> <td>  -15.238</td> <td> 0.000</td> <td>   -0.400</td> <td>   -0.309</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_35</th>      <td>    0.0174</td> <td>    0.023</td> <td>    0.755</td> <td> 0.450</td> <td>   -0.028</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_41</th>      <td>    0.1100</td> <td>    0.023</td> <td>    4.751</td> <td> 0.000</td> <td>    0.065</td> <td>    0.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_42</th>      <td>   -0.5054</td> <td>    0.032</td> <td>  -15.925</td> <td> 0.000</td> <td>   -0.568</td> <td>   -0.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_43</th>      <td>   -0.1220</td> <td>    0.023</td> <td>   -5.230</td> <td> 0.000</td> <td>   -0.168</td> <td>   -0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_44</th>      <td>   -0.1034</td> <td>    0.024</td> <td>   -4.315</td> <td> 0.000</td> <td>   -0.150</td> <td>   -0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_45</th>      <td>    0.0517</td> <td>    0.023</td> <td>    2.233</td> <td> 0.026</td> <td>    0.006</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_new_nan</th> <td>    0.2424</td> <td>    0.200</td> <td>    1.213</td> <td> 0.225</td> <td>   -0.149</td> <td>    0.634</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_00</th>         <td>    0.0158</td> <td>    0.026</td> <td>    0.602</td> <td> 0.547</td> <td>   -0.036</td> <td>    0.067</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_11</th>         <td>   -0.2881</td> <td>    0.041</td> <td>   -7.060</td> <td> 0.000</td> <td>   -0.368</td> <td>   -0.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_12</th>         <td>   -0.2851</td> <td>    0.042</td> <td>   -6.742</td> <td> 0.000</td> <td>   -0.368</td> <td>   -0.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_13</th>         <td>   -0.3325</td> <td>    0.039</td> <td>   -8.584</td> <td> 0.000</td> <td>   -0.408</td> <td>   -0.257</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_21</th>         <td>   -0.0776</td> <td>    0.018</td> <td>   -4.307</td> <td> 0.000</td> <td>   -0.113</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_22</th>         <td>   -0.0309</td> <td>    0.017</td> <td>   -1.817</td> <td> 0.069</td> <td>   -0.064</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_23</th>         <td>    0.4361</td> <td>    0.018</td> <td>   24.265</td> <td> 0.000</td> <td>    0.401</td> <td>    0.471</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_31</th>         <td>    0.2318</td> <td>    0.012</td> <td>   19.313</td> <td> 0.000</td> <td>    0.208</td> <td>    0.255</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_33</th>         <td>    0.3473</td> <td>    0.010</td> <td>   35.929</td> <td> 0.000</td> <td>    0.328</td> <td>    0.366</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_34</th>         <td>    0.2947</td> <td>    0.010</td> <td>   30.960</td> <td> 0.000</td> <td>    0.276</td> <td>    0.313</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_35</th>         <td>    0.1099</td> <td>    0.010</td> <td>   10.675</td> <td> 0.000</td> <td>    0.090</td> <td>    0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_37</th>         <td>    0.4428</td> <td>    0.009</td> <td>   47.192</td> <td> 0.000</td> <td>    0.424</td> <td>    0.461</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_38</th>         <td>    0.3942</td> <td>    0.009</td> <td>   41.862</td> <td> 0.000</td> <td>    0.376</td> <td>    0.413</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_42</th>         <td>    0.0690</td> <td>    0.009</td> <td>    7.304</td> <td> 0.000</td> <td>    0.051</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_43</th>         <td>    0.0815</td> <td>    0.009</td> <td>    8.701</td> <td> 0.000</td> <td>    0.063</td> <td>    0.100</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_44</th>         <td>   -0.5121</td> <td>    0.019</td> <td>  -27.422</td> <td> 0.000</td> <td>   -0.549</td> <td>   -0.475</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_45</th>         <td>    0.0956</td> <td>    0.010</td> <td>    9.954</td> <td> 0.000</td> <td>    0.077</td> <td>    0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_46</th>         <td>    0.0713</td> <td>    0.009</td> <td>    7.666</td> <td> 0.000</td> <td>    0.053</td> <td>    0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_47</th>         <td>    0.0472</td> <td>    0.009</td> <td>    5.034</td> <td> 0.000</td> <td>    0.029</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_48</th>         <td>    0.0946</td> <td>    0.010</td> <td>    9.936</td> <td> 0.000</td> <td>    0.076</td> <td>    0.113</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_52</th>         <td>   -0.1246</td> <td>    0.009</td> <td>  -13.415</td> <td> 0.000</td> <td>   -0.143</td> <td>   -0.106</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_53</th>         <td>-3.169e-05</td> <td>    0.010</td> <td>   -0.003</td> <td> 0.997</td> <td>   -0.019</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_54</th>         <td>   -0.0755</td> <td>    0.009</td> <td>   -8.132</td> <td> 0.000</td> <td>   -0.094</td> <td>   -0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_55</th>         <td>   -0.1791</td> <td>    0.009</td> <td>  -19.016</td> <td> 0.000</td> <td>   -0.198</td> <td>   -0.161</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_56</th>         <td>   -0.3571</td> <td>    0.009</td> <td>  -38.166</td> <td> 0.000</td> <td>   -0.375</td> <td>   -0.339</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_62</th>         <td>   -0.0983</td> <td>    0.009</td> <td>  -10.518</td> <td> 0.000</td> <td>   -0.117</td> <td>   -0.080</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_63</th>         <td>   -0.1294</td> <td>    0.009</td> <td>  -13.886</td> <td> 0.000</td> <td>   -0.148</td> <td>   -0.111</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_64</th>         <td>   -0.1669</td> <td>    0.010</td> <td>  -17.532</td> <td> 0.000</td> <td>   -0.186</td> <td>   -0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_65</th>         <td>   -0.1207</td> <td>    0.010</td> <td>  -12.581</td> <td> 0.000</td> <td>   -0.139</td> <td>   -0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_67</th>         <td>   -0.1991</td> <td>    0.009</td> <td>  -21.226</td> <td> 0.000</td> <td>   -0.217</td> <td>   -0.181</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_68</th>         <td>   -0.3560</td> <td>    0.009</td> <td>  -37.698</td> <td> 0.000</td> <td>   -0.374</td> <td>   -0.337</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_69</th>         <td>   -0.2022</td> <td>    0.010</td> <td>  -19.608</td> <td> 0.000</td> <td>   -0.222</td> <td>   -0.182</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_83</th>         <td>   -0.5054</td> <td>    0.032</td> <td>  -15.925</td> <td> 0.000</td> <td>   -0.568</td> <td>   -0.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_new_nan</th>    <td>    0.2424</td> <td>    0.200</td> <td>    1.213</td> <td> 0.225</td> <td>   -0.149</td> <td>    0.634</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_1</th>        <td>   -0.0091</td> <td>    0.031</td> <td>   -0.296</td> <td> 0.767</td> <td>   -0.070</td> <td>    0.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_3</th>        <td>   -0.0704</td> <td>    0.031</td> <td>   -2.286</td> <td> 0.022</td> <td>   -0.131</td> <td>   -0.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_4</th>        <td>   -0.1333</td> <td>    0.031</td> <td>   -4.332</td> <td> 0.000</td> <td>   -0.194</td> <td>   -0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_5</th>        <td>   -0.1776</td> <td>    0.031</td> <td>   -5.774</td> <td> 0.000</td> <td>   -0.238</td> <td>   -0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_6</th>        <td>   -0.1845</td> <td>    0.031</td> <td>   -5.998</td> <td> 0.000</td> <td>   -0.245</td> <td>   -0.124</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_7</th>        <td>   -0.2920</td> <td>    0.031</td> <td>   -9.497</td> <td> 0.000</td> <td>   -0.352</td> <td>   -0.232</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_new_nan</th>  <td>   -0.1995</td> <td>    0.036</td> <td>   -5.587</td> <td> 0.000</td> <td>   -0.269</td> <td>   -0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SEXE_1</th>         <td>   -0.4570</td> <td>    0.107</td> <td>   -4.268</td> <td> 0.000</td> <td>   -0.667</td> <td>   -0.247</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SEXE_2</th>         <td>   -0.6093</td> <td>    0.107</td> <td>   -5.690</td> <td> 0.000</td> <td>   -0.819</td> <td>   -0.399</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_1</th>        <td>   -0.2598</td> <td>    0.071</td> <td>   -3.635</td> <td> 0.000</td> <td>   -0.400</td> <td>   -0.120</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_2</th>        <td>   -0.4103</td> <td>    0.072</td> <td>   -5.722</td> <td> 0.000</td> <td>   -0.551</td> <td>   -0.270</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_3</th>        <td>   -0.3962</td> <td>    0.072</td> <td>   -5.538</td> <td> 0.000</td> <td>   -0.536</td> <td>   -0.256</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_1</th>          <td>   -0.4544</td> <td>    0.027</td> <td>  -16.554</td> <td> 0.000</td> <td>   -0.508</td> <td>   -0.401</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_2</th>          <td>   -0.4455</td> <td>    0.028</td> <td>  -16.162</td> <td> 0.000</td> <td>   -0.499</td> <td>   -0.391</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_3</th>          <td>   -0.4454</td> <td>    0.028</td> <td>  -16.078</td> <td> 0.000</td> <td>   -0.500</td> <td>   -0.391</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_4</th>          <td>   -0.4436</td> <td>    0.028</td> <td>  -15.968</td> <td> 0.000</td> <td>   -0.498</td> <td>   -0.389</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_5</th>          <td>   -0.4323</td> <td>    0.028</td> <td>  -15.525</td> <td> 0.000</td> <td>   -0.487</td> <td>   -0.378</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_6</th>          <td>   -0.4507</td> <td>    0.027</td> <td>  -16.413</td> <td> 0.000</td> <td>   -0.505</td> <td>   -0.397</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_new_nan</th>    <td>    1.6055</td> <td>    0.052</td> <td>   30.696</td> <td> 0.000</td> <td>    1.503</td> <td>    1.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_1</th>         <td>    1.4656</td> <td>    0.054</td> <td>   27.274</td> <td> 0.000</td> <td>    1.360</td> <td>    1.571</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_2</th>         <td>    1.3824</td> <td>    0.054</td> <td>   25.726</td> <td> 0.000</td> <td>    1.277</td> <td>    1.488</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_9</th>         <td>    1.4166</td> <td>    0.054</td> <td>   26.101</td> <td> 0.000</td> <td>    1.310</td> <td>    1.523</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_new_nan</th>   <td>   -5.3309</td> <td>    0.055</td> <td>  -97.209</td> <td> 0.000</td> <td>   -5.438</td> <td>   -5.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_1</th>        <td>   -0.1849</td> <td>    0.054</td> <td>   -3.445</td> <td> 0.001</td> <td>   -0.290</td> <td>   -0.080</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_2</th>        <td>   -0.2208</td> <td>    0.054</td> <td>   -4.114</td> <td> 0.000</td> <td>   -0.326</td> <td>   -0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_9</th>        <td>   -0.2341</td> <td>    0.054</td> <td>   -4.327</td> <td> 0.000</td> <td>   -0.340</td> <td>   -0.128</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_new_nan</th>  <td>   -0.4266</td> <td>    0.055</td> <td>   -7.762</td> <td> 0.000</td> <td>   -0.534</td> <td>   -0.319</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_8</th>       <td>   -0.3491</td> <td>    0.062</td> <td>   -5.673</td> <td> 0.000</td> <td>   -0.470</td> <td>   -0.229</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_9</th>       <td>    0.0276</td> <td>    0.022</td> <td>    1.279</td> <td> 0.201</td> <td>   -0.015</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_A</th>       <td>   -0.3163</td> <td>    0.027</td> <td>  -11.774</td> <td> 0.000</td> <td>   -0.369</td> <td>   -0.264</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_B</th>       <td>   -0.4938</td> <td>    0.050</td> <td>   -9.795</td> <td> 0.000</td> <td>   -0.593</td> <td>   -0.395</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_C</th>       <td>   -0.2842</td> <td>    0.047</td> <td>   -6.036</td> <td> 0.000</td> <td>   -0.376</td> <td>   -0.192</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_D</th>       <td>   -0.2016</td> <td>    0.047</td> <td>   -4.261</td> <td> 0.000</td> <td>   -0.294</td> <td>   -0.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_E</th>       <td>   -0.0394</td> <td>    0.050</td> <td>   -0.781</td> <td> 0.435</td> <td>   -0.138</td> <td>    0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_F</th>       <td>   -0.1356</td> <td>    0.057</td> <td>   -2.392</td> <td> 0.017</td> <td>   -0.247</td> <td>   -0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_G</th>       <td>   -0.0231</td> <td>    0.065</td> <td>   -0.356</td> <td> 0.722</td> <td>   -0.150</td> <td>    0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_H</th>       <td>    0.0077</td> <td>    0.051</td> <td>    0.152</td> <td> 0.879</td> <td>   -0.092</td> <td>    0.107</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_I</th>       <td>    0.2671</td> <td>    0.044</td> <td>    6.088</td> <td> 0.000</td> <td>    0.181</td> <td>    0.353</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_J</th>       <td>    0.4628</td> <td>    0.054</td> <td>    8.531</td> <td> 0.000</td> <td>    0.356</td> <td>    0.569</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REVENT_new_nan</th> <td>    0.0116</td> <td>    0.021</td> <td>    0.542</td> <td> 0.588</td> <td>   -0.030</td> <td>    0.053</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_1</th>       <td>   -0.3580</td> <td>    0.072</td> <td>   -4.953</td> <td> 0.000</td> <td>   -0.500</td> <td>   -0.216</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_2</th>       <td>   -0.3493</td> <td>    0.072</td> <td>   -4.872</td> <td> 0.000</td> <td>   -0.490</td> <td>   -0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_new_nan</th> <td>   -0.3590</td> <td>    0.072</td> <td>   -5.008</td> <td> 0.000</td> <td>   -0.500</td> <td>   -0.219</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_1</th>       <td>   -0.3754</td> <td>    0.071</td> <td>   -5.252</td> <td> 0.000</td> <td>   -0.516</td> <td>   -0.235</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_2</th>       <td>   -0.4540</td> <td>    0.071</td> <td>   -6.350</td> <td> 0.000</td> <td>   -0.594</td> <td>   -0.314</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_new_nan</th> <td>   -0.2370</td> <td>    0.072</td> <td>   -3.287</td> <td> 0.001</td> <td>   -0.378</td> <td>   -0.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_1</th>        <td>   -0.2690</td> <td>    0.055</td> <td>   -4.915</td> <td> 0.000</td> <td>   -0.376</td> <td>   -0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_2</th>        <td>   -0.2923</td> <td>    0.056</td> <td>   -5.183</td> <td> 0.000</td> <td>   -0.403</td> <td>   -0.182</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_3</th>        <td>   -0.2466</td> <td>    0.061</td> <td>   -4.013</td> <td> 0.000</td> <td>   -0.367</td> <td>   -0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_new_nan</th>  <td>   -0.2584</td> <td>    0.055</td> <td>   -4.715</td> <td> 0.000</td> <td>   -0.366</td> <td>   -0.151</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_1</th>        <td>   -0.1107</td> <td>    0.030</td> <td>   -3.678</td> <td> 0.000</td> <td>   -0.170</td> <td>   -0.052</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_2</th>        <td>   -0.0255</td> <td>    0.030</td> <td>   -0.839</td> <td> 0.402</td> <td>   -0.085</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_3</th>        <td>   -0.1545</td> <td>    0.033</td> <td>   -4.663</td> <td> 0.000</td> <td>   -0.219</td> <td>   -0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_4</th>        <td>   -0.2044</td> <td>    0.033</td> <td>   -6.159</td> <td> 0.000</td> <td>   -0.269</td> <td>   -0.139</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_5</th>        <td>   -0.1869</td> <td>    0.033</td> <td>   -5.593</td> <td> 0.000</td> <td>   -0.252</td> <td>   -0.121</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_6</th>        <td>   -0.0497</td> <td>    0.036</td> <td>   -1.372</td> <td> 0.170</td> <td>   -0.121</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_7</th>        <td>   -0.2277</td> <td>    0.033</td> <td>   -6.820</td> <td> 0.000</td> <td>   -0.293</td> <td>   -0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_new_nan</th>  <td>   -0.1069</td> <td>    0.038</td> <td>   -2.807</td> <td> 0.005</td> <td>   -0.182</td> <td>   -0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_0</th>       <td>   -0.3844</td> <td>    0.031</td> <td>  -12.275</td> <td> 0.000</td> <td>   -0.446</td> <td>   -0.323</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_1</th>       <td>   -0.1820</td> <td>    0.031</td> <td>   -5.883</td> <td> 0.000</td> <td>   -0.243</td> <td>   -0.121</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_2</th>       <td>   -0.1077</td> <td>    0.031</td> <td>   -3.468</td> <td> 0.001</td> <td>   -0.169</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_3</th>       <td>    0.0526</td> <td>    0.032</td> <td>    1.620</td> <td> 0.105</td> <td>   -0.011</td> <td>    0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_4</th>       <td>   -0.0654</td> <td>    0.034</td> <td>   -1.934</td> <td> 0.053</td> <td>   -0.132</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_5</th>       <td>    0.0027</td> <td>    0.032</td> <td>    0.086</td> <td> 0.931</td> <td>   -0.060</td> <td>    0.065</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_new_nan</th> <td>   -0.3822</td> <td>    0.031</td> <td>  -12.155</td> <td> 0.000</td> <td>   -0.444</td> <td>   -0.321</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_1</th>       <td>   -0.1101</td> <td>    0.020</td> <td>   -5.591</td> <td> 0.000</td> <td>   -0.149</td> <td>   -0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_10</th>      <td>   -0.0984</td> <td>    0.020</td> <td>   -4.991</td> <td> 0.000</td> <td>   -0.137</td> <td>   -0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_2</th>       <td>   -0.1197</td> <td>    0.020</td> <td>   -6.011</td> <td> 0.000</td> <td>   -0.159</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_3</th>       <td>   -0.0954</td> <td>    0.020</td> <td>   -4.786</td> <td> 0.000</td> <td>   -0.134</td> <td>   -0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_4</th>       <td>   -0.1213</td> <td>    0.020</td> <td>   -6.018</td> <td> 0.000</td> <td>   -0.161</td> <td>   -0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_5</th>       <td>   -0.0855</td> <td>    0.020</td> <td>   -4.322</td> <td> 0.000</td> <td>   -0.124</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_6</th>       <td>   -0.0712</td> <td>    0.020</td> <td>   -3.596</td> <td> 0.000</td> <td>   -0.110</td> <td>   -0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_7</th>       <td>   -0.0807</td> <td>    0.020</td> <td>   -4.079</td> <td> 0.000</td> <td>   -0.119</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_8</th>       <td>   -0.1127</td> <td>    0.020</td> <td>   -5.693</td> <td> 0.000</td> <td>   -0.152</td> <td>   -0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_9</th>       <td>   -0.0750</td> <td>    0.020</td> <td>   -3.812</td> <td> 0.000</td> <td>   -0.114</td> <td>   -0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_new_nan</th> <td>   -0.0965</td> <td>    0.020</td> <td>   -4.860</td> <td> 0.000</td> <td>   -0.135</td> <td>   -0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_1</th>         <td>   -0.1368</td> <td>    0.044</td> <td>   -3.084</td> <td> 0.002</td> <td>   -0.224</td> <td>   -0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_2</th>         <td>   -0.0180</td> <td>    0.044</td> <td>   -0.413</td> <td> 0.680</td> <td>   -0.104</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_3</th>         <td>   -0.3069</td> <td>    0.044</td> <td>   -6.984</td> <td> 0.000</td> <td>   -0.393</td> <td>   -0.221</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_4</th>         <td>   -0.2689</td> <td>    0.045</td> <td>   -5.954</td> <td> 0.000</td> <td>   -0.357</td> <td>   -0.180</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_new_nan</th>   <td>   -0.3357</td> <td>    0.049</td> <td>   -6.823</td> <td> 0.000</td> <td>   -0.432</td> <td>   -0.239</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_1</th>          <td>   -0.2218</td> <td>    0.055</td> <td>   -4.068</td> <td> 0.000</td> <td>   -0.329</td> <td>   -0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_2</th>          <td>   -0.0986</td> <td>    0.054</td> <td>   -1.816</td> <td> 0.069</td> <td>   -0.205</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_3</th>          <td>   -0.4444</td> <td>    0.054</td> <td>   -8.196</td> <td> 0.000</td> <td>   -0.551</td> <td>   -0.338</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_new_nan</th>    <td>   -0.3015</td> <td>    0.054</td> <td>   -5.544</td> <td> 0.000</td> <td>   -0.408</td> <td>   -0.195</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_1</th>       <td>   -0.4556</td> <td>    0.072</td> <td>   -6.336</td> <td> 0.000</td> <td>   -0.597</td> <td>   -0.315</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_2</th>       <td>   -0.3737</td> <td>    0.072</td> <td>   -5.217</td> <td> 0.000</td> <td>   -0.514</td> <td>   -0.233</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_new_nan</th> <td>   -0.2370</td> <td>    0.072</td> <td>   -3.287</td> <td> 0.001</td> <td>   -0.378</td> <td>   -0.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_1</th>         <td>   -0.0552</td> <td>    0.022</td> <td>   -2.523</td> <td> 0.012</td> <td>   -0.098</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_2</th>         <td>   -0.1006</td> <td>    0.022</td> <td>   -4.630</td> <td> 0.000</td> <td>   -0.143</td> <td>   -0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_3</th>         <td>   -0.1528</td> <td>    0.022</td> <td>   -6.974</td> <td> 0.000</td> <td>   -0.196</td> <td>   -0.110</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_4</th>         <td>   -0.1065</td> <td>    0.022</td> <td>   -4.902</td> <td> 0.000</td> <td>   -0.149</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_5</th>         <td>   -0.1178</td> <td>    0.022</td> <td>   -5.453</td> <td> 0.000</td> <td>   -0.160</td> <td>   -0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_6</th>         <td>   -0.1357</td> <td>    0.022</td> <td>   -6.185</td> <td> 0.000</td> <td>   -0.179</td> <td>   -0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_7</th>         <td>   -0.0334</td> <td>    0.025</td> <td>   -1.318</td> <td> 0.187</td> <td>   -0.083</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_8</th>         <td>   -0.1466</td> <td>    0.022</td> <td>   -6.650</td> <td> 0.000</td> <td>   -0.190</td> <td>   -0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_9</th>         <td>   -0.1026</td> <td>    0.022</td> <td>   -4.725</td> <td> 0.000</td> <td>   -0.145</td> <td>   -0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_new_nan</th>   <td>   -0.1150</td> <td>    0.027</td> <td>   -4.293</td> <td> 0.000</td> <td>   -0.168</td> <td>   -0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_1</th>       <td>   -0.2764</td> <td>    0.074</td> <td>   -3.723</td> <td> 0.000</td> <td>   -0.422</td> <td>   -0.131</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_2</th>       <td>   -0.5508</td> <td>    0.074</td> <td>   -7.429</td> <td> 0.000</td> <td>   -0.696</td> <td>   -0.405</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_new_nan</th> <td>   -0.2392</td> <td>    0.080</td> <td>   -2.989</td> <td> 0.003</td> <td>   -0.396</td> <td>   -0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>IMMI_1</th>         <td>   -1.3251</td> <td>    0.082</td> <td>  -16.113</td> <td> 0.000</td> <td>   -1.486</td> <td>   -1.164</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>IMMI_2</th>         <td>   -1.3468</td> <td>    0.082</td> <td>  -16.378</td> <td> 0.000</td> <td>   -1.508</td> <td>   -1.186</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>IMMI_new_nan</th>   <td>    1.6055</td> <td>    0.052</td> <td>   30.696</td> <td> 0.000</td> <td>    1.503</td> <td>    1.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_00</th>        <td>   -0.0636</td> <td>    0.012</td> <td>   -5.436</td> <td> 0.000</td> <td>   -0.087</td> <td>   -0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_01</th>        <td>   -0.1517</td> <td>    0.006</td> <td>  -24.165</td> <td> 0.000</td> <td>   -0.164</td> <td>   -0.139</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_02</th>        <td>   -0.0716</td> <td>    0.013</td> <td>   -5.725</td> <td> 0.000</td> <td>   -0.096</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_03</th>        <td>    0.0332</td> <td>    0.047</td> <td>    0.708</td> <td> 0.479</td> <td>   -0.059</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_05</th>        <td>    0.0406</td> <td>    0.019</td> <td>    2.126</td> <td> 0.033</td> <td>    0.003</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_06</th>        <td>    0.4268</td> <td>    0.106</td> <td>    4.009</td> <td> 0.000</td> <td>    0.218</td> <td>    0.635</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_07</th>        <td>    0.4926</td> <td>    0.138</td> <td>    3.582</td> <td> 0.000</td> <td>    0.223</td> <td>    0.762</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_08</th>        <td>   -0.0552</td> <td>    0.027</td> <td>   -2.010</td> <td> 0.044</td> <td>   -0.109</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_09</th>        <td>    0.4311</td> <td>    0.119</td> <td>    3.623</td> <td> 0.000</td> <td>    0.198</td> <td>    0.664</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_10</th>        <td>   -0.0380</td> <td>    0.007</td> <td>   -5.703</td> <td> 0.000</td> <td>   -0.051</td> <td>   -0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_11</th>        <td>    0.1686</td> <td>    0.017</td> <td>    9.875</td> <td> 0.000</td> <td>    0.135</td> <td>    0.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_12</th>        <td>    0.3163</td> <td>    0.075</td> <td>    4.200</td> <td> 0.000</td> <td>    0.169</td> <td>    0.464</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_13</th>        <td>   -0.0514</td> <td>    0.019</td> <td>   -2.683</td> <td> 0.007</td> <td>   -0.089</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_14</th>        <td>   -0.0336</td> <td>    0.012</td> <td>   -2.833</td> <td> 0.005</td> <td>   -0.057</td> <td>   -0.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_15</th>        <td>   -0.0617</td> <td>    0.005</td> <td>  -12.833</td> <td> 0.000</td> <td>   -0.071</td> <td>   -0.052</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_16</th>        <td>   -0.0362</td> <td>    0.015</td> <td>   -2.422</td> <td> 0.015</td> <td>   -0.066</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_17</th>        <td>   -0.0579</td> <td>    0.007</td> <td>   -8.177</td> <td> 0.000</td> <td>   -0.072</td> <td>   -0.044</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_18</th>        <td>   -0.0877</td> <td>    0.007</td> <td>  -11.907</td> <td> 0.000</td> <td>   -0.102</td> <td>   -0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_19</th>        <td>   -0.0401</td> <td>    0.011</td> <td>   -3.667</td> <td> 0.000</td> <td>   -0.062</td> <td>   -0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_20</th>        <td>   -0.0256</td> <td>    0.007</td> <td>   -3.703</td> <td> 0.000</td> <td>   -0.039</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_21</th>        <td>    0.0768</td> <td>    0.007</td> <td>   10.402</td> <td> 0.000</td> <td>    0.062</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_22</th>        <td>    0.0163</td> <td>    0.006</td> <td>    2.775</td> <td> 0.006</td> <td>    0.005</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_23</th>        <td>    0.0627</td> <td>    0.010</td> <td>    6.195</td> <td> 0.000</td> <td>    0.043</td> <td>    0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_24</th>        <td>    0.1038</td> <td>    0.006</td> <td>   18.726</td> <td> 0.000</td> <td>    0.093</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_25</th>        <td>   -0.0080</td> <td>    0.005</td> <td>   -1.471</td> <td> 0.141</td> <td>   -0.019</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_26</th>        <td>    0.0257</td> <td>    0.006</td> <td>    4.077</td> <td> 0.000</td> <td>    0.013</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_27</th>        <td>    0.0304</td> <td>    0.007</td> <td>    4.638</td> <td> 0.000</td> <td>    0.018</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_28</th>        <td>   -0.0063</td> <td>    0.005</td> <td>   -1.273</td> <td> 0.203</td> <td>   -0.016</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_29</th>        <td>    0.0079</td> <td>    0.005</td> <td>    1.522</td> <td> 0.128</td> <td>   -0.002</td> <td>    0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_30</th>        <td>    0.0910</td> <td>    0.009</td> <td>   10.167</td> <td> 0.000</td> <td>    0.073</td> <td>    0.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_31</th>        <td>    0.0102</td> <td>    0.006</td> <td>    1.577</td> <td> 0.115</td> <td>   -0.002</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_32</th>        <td>    0.0223</td> <td>    0.007</td> <td>    3.164</td> <td> 0.002</td> <td>    0.008</td> <td>    0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_33</th>        <td>    0.0196</td> <td>    0.006</td> <td>    3.033</td> <td> 0.002</td> <td>    0.007</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_34</th>        <td>    0.0528</td> <td>    0.005</td> <td>    9.703</td> <td> 0.000</td> <td>    0.042</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_35</th>        <td>    0.0507</td> <td>    0.006</td> <td>    7.964</td> <td> 0.000</td> <td>    0.038</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_36</th>        <td>   -0.0554</td> <td>    0.007</td> <td>   -8.369</td> <td> 0.000</td> <td>   -0.068</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_37</th>        <td>   -0.0403</td> <td>    0.014</td> <td>   -2.979</td> <td> 0.003</td> <td>   -0.067</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_38</th>        <td>    0.0117</td> <td>    0.013</td> <td>    0.930</td> <td> 0.352</td> <td>   -0.013</td> <td>    0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_39</th>        <td>   -0.1821</td> <td>    0.061</td> <td>   -2.991</td> <td> 0.003</td> <td>   -0.301</td> <td>   -0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_40</th>        <td>    0.0807</td> <td>    0.007</td> <td>   11.590</td> <td> 0.000</td> <td>    0.067</td> <td>    0.094</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_41</th>        <td>    0.0159</td> <td>    0.009</td> <td>    1.824</td> <td> 0.068</td> <td>   -0.001</td> <td>    0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_42</th>        <td>   -0.0124</td> <td>    0.011</td> <td>   -1.120</td> <td> 0.263</td> <td>   -0.034</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_43</th>        <td>    0.0062</td> <td>    0.006</td> <td>    1.074</td> <td> 0.283</td> <td>   -0.005</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_45</th>        <td>   -0.0043</td> <td>    0.004</td> <td>   -1.018</td> <td> 0.309</td> <td>   -0.013</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_46</th>        <td>   -0.0512</td> <td>    0.006</td> <td>   -8.803</td> <td> 0.000</td> <td>   -0.063</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_47</th>        <td>   -0.0764</td> <td>    0.005</td> <td>  -14.673</td> <td> 0.000</td> <td>   -0.087</td> <td>   -0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_49</th>        <td>   -0.0210</td> <td>    0.006</td> <td>   -3.258</td> <td> 0.001</td> <td>   -0.034</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_50</th>        <td>   -0.0562</td> <td>    0.005</td> <td>  -10.619</td> <td> 0.000</td> <td>   -0.067</td> <td>   -0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_51</th>        <td>   -0.0160</td> <td>    0.004</td> <td>   -3.582</td> <td> 0.000</td> <td>   -0.025</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_52</th>        <td>   -0.1592</td> <td>    0.004</td> <td>  -36.913</td> <td> 0.000</td> <td>   -0.168</td> <td>   -0.151</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_53</th>        <td>   -0.1101</td> <td>    0.010</td> <td>  -10.840</td> <td> 0.000</td> <td>   -0.130</td> <td>   -0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_55</th>        <td>   -0.0928</td> <td>    0.005</td> <td>  -19.336</td> <td> 0.000</td> <td>   -0.102</td> <td>   -0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_56</th>        <td>   -0.0354</td> <td>    0.007</td> <td>   -5.265</td> <td> 0.000</td> <td>   -0.049</td> <td>   -0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_58</th>        <td>   -0.0335</td> <td>    0.014</td> <td>   -2.471</td> <td> 0.013</td> <td>   -0.060</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_59</th>        <td>    0.0634</td> <td>    0.020</td> <td>    3.208</td> <td> 0.001</td> <td>    0.025</td> <td>    0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_60</th>        <td>    0.0479</td> <td>    0.005</td> <td>    9.847</td> <td> 0.000</td> <td>    0.038</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_61</th>        <td>    0.0760</td> <td>    0.011</td> <td>    6.869</td> <td> 0.000</td> <td>    0.054</td> <td>    0.098</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_62</th>        <td>    0.0751</td> <td>    0.007</td> <td>   10.191</td> <td> 0.000</td> <td>    0.061</td> <td>    0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_63</th>        <td>   -0.0091</td> <td>    0.006</td> <td>   -1.531</td> <td> 0.126</td> <td>   -0.021</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_64</th>        <td>   -0.0386</td> <td>    0.005</td> <td>   -8.099</td> <td> 0.000</td> <td>   -0.048</td> <td>   -0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_65</th>        <td>    0.0709</td> <td>    0.005</td> <td>   13.931</td> <td> 0.000</td> <td>    0.061</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_66</th>        <td>    0.0240</td> <td>    0.006</td> <td>    3.766</td> <td> 0.000</td> <td>    0.011</td> <td>    0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_67</th>        <td>   -0.0053</td> <td>    0.009</td> <td>   -0.568</td> <td> 0.570</td> <td>   -0.024</td> <td>    0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_68</th>        <td>   -0.0797</td> <td>    0.009</td> <td>   -9.324</td> <td> 0.000</td> <td>   -0.096</td> <td>   -0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_69</th>        <td>   -0.0196</td> <td>    0.009</td> <td>   -2.067</td> <td> 0.039</td> <td>   -0.038</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_70</th>        <td>   -0.1138</td> <td>    0.005</td> <td>  -20.758</td> <td> 0.000</td> <td>   -0.124</td> <td>   -0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_71</th>        <td>   -0.0664</td> <td>    0.007</td> <td>   -9.500</td> <td> 0.000</td> <td>   -0.080</td> <td>   -0.053</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_72</th>        <td>   -0.0009</td> <td>    0.006</td> <td>   -0.156</td> <td> 0.876</td> <td>   -0.013</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_73</th>        <td>   -0.0294</td> <td>    0.007</td> <td>   -4.162</td> <td> 0.000</td> <td>   -0.043</td> <td>   -0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_74</th>        <td>   -0.0939</td> <td>    0.004</td> <td>  -21.647</td> <td> 0.000</td> <td>   -0.102</td> <td>   -0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_75</th>        <td>   -0.1018</td> <td>    0.004</td> <td>  -24.070</td> <td> 0.000</td> <td>   -0.110</td> <td>   -0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_77</th>        <td>   -0.0707</td> <td>    0.015</td> <td>   -4.665</td> <td> 0.000</td> <td>   -0.100</td> <td>   -0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_78</th>        <td>   -0.1065</td> <td>    0.015</td> <td>   -7.110</td> <td> 0.000</td> <td>   -0.136</td> <td>   -0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_79</th>        <td>   -0.1150</td> <td>    0.021</td> <td>   -5.482</td> <td> 0.000</td> <td>   -0.156</td> <td>   -0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_80</th>        <td>   -0.1602</td> <td>    0.004</td> <td>  -36.594</td> <td> 0.000</td> <td>   -0.169</td> <td>   -0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_81</th>        <td>   -0.0307</td> <td>    0.008</td> <td>   -3.761</td> <td> 0.000</td> <td>   -0.047</td> <td>   -0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_82</th>        <td>   -0.0865</td> <td>    0.010</td> <td>   -8.366</td> <td> 0.000</td> <td>   -0.107</td> <td>   -0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_84</th>        <td>   -0.0858</td> <td>    0.005</td> <td>  -16.361</td> <td> 0.000</td> <td>   -0.096</td> <td>   -0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_85</th>        <td>   -0.1283</td> <td>    0.004</td> <td>  -31.540</td> <td> 0.000</td> <td>   -0.136</td> <td>   -0.120</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_86</th>        <td>   -0.0149</td> <td>    0.006</td> <td>   -2.475</td> <td> 0.013</td> <td>   -0.027</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_87</th>        <td>   -0.0268</td> <td>    0.006</td> <td>   -4.214</td> <td> 0.000</td> <td>   -0.039</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_88</th>        <td>   -0.0643</td> <td>    0.006</td> <td>  -11.258</td> <td> 0.000</td> <td>   -0.076</td> <td>   -0.053</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_90</th>        <td>   -0.0554</td> <td>    0.009</td> <td>   -6.344</td> <td> 0.000</td> <td>   -0.072</td> <td>   -0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_91</th>        <td>   -0.2100</td> <td>    0.006</td> <td>  -37.344</td> <td> 0.000</td> <td>   -0.221</td> <td>   -0.199</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_92</th>        <td>   -0.1418</td> <td>    0.006</td> <td>  -24.900</td> <td> 0.000</td> <td>   -0.153</td> <td>   -0.131</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_93</th>        <td>   -0.0338</td> <td>    0.006</td> <td>   -5.328</td> <td> 0.000</td> <td>   -0.046</td> <td>   -0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_94</th>        <td>   -0.1073</td> <td>    0.008</td> <td>  -13.154</td> <td> 0.000</td> <td>   -0.123</td> <td>   -0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_95</th>        <td>   -0.6289</td> <td>    0.005</td> <td> -121.876</td> <td> 0.000</td> <td>   -0.639</td> <td>   -0.619</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_96</th>        <td>    0.0577</td> <td>    0.010</td> <td>    5.545</td> <td> 0.000</td> <td>    0.037</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_97</th>        <td>   -0.0063</td> <td>    0.010</td> <td>   -0.615</td> <td> 0.539</td> <td>   -0.026</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_98</th>        <td>   -0.0036</td> <td>    0.057</td> <td>   -0.063</td> <td> 0.949</td> <td>   -0.115</td> <td>    0.108</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_99</th>        <td>    0.3519</td> <td>    0.018</td> <td>   19.396</td> <td> 0.000</td> <td>    0.316</td> <td>    0.387</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_na</th>        <td>   -0.0569</td> <td>    0.004</td> <td>  -13.546</td> <td> 0.000</td> <td>   -0.065</td> <td>   -0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_1</th>         <td>   -0.6760</td> <td>    0.041</td> <td>  -16.439</td> <td> 0.000</td> <td>   -0.757</td> <td>   -0.595</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_2</th>         <td>   -0.6713</td> <td>    0.041</td> <td>  -16.325</td> <td> 0.000</td> <td>   -0.752</td> <td>   -0.591</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_3</th>         <td>   -0.6609</td> <td>    0.041</td> <td>  -16.072</td> <td> 0.000</td> <td>   -0.742</td> <td>   -0.580</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_4</th>         <td>   -0.6636</td> <td>    0.041</td> <td>  -16.136</td> <td> 0.000</td> <td>   -0.744</td> <td>   -0.583</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_new_nan</th>   <td>    1.6055</td> <td>    0.052</td> <td>   30.696</td> <td> 0.000</td> <td>    1.503</td> <td>    1.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONSTANT</th>       <td>   -1.0663</td> <td>    0.214</td> <td>   -4.979</td> <td> 0.000</td> <td>   -1.486</td> <td>   -0.647</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE2</th>           <td>   -0.0003</td> <td> 3.36e-06</td> <td>  -98.327</td> <td> 0.000</td> <td>   -0.000</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>970019.766</td> <th>  Durbin-Watson:     </th>   <td>   1.840</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>   <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>137699214.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>            <td>-3.603</td>   <th>  Prob(JB):          </th>   <td>    0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>        <td>56.971</td>   <th>  Cond. No.          </th>   <td>1.13e+16</td>   \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 2.08e-19. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                      y   R-squared:                       0.617\n",
       "Model:                            OLS   Adj. R-squared:                  0.617\n",
       "Method:                 Least Squares   F-statistic:                     7436.\n",
       "Date:                Tue, 04 Oct 2022   Prob (F-statistic):               0.00\n",
       "Time:                        18:17:59   Log-Likelihood:            -6.0515e+05\n",
       "No. Observations:             1114668   AIC:                         1.211e+06\n",
       "Df Residuals:                 1114426   BIC:                         1.214e+06\n",
       "Df Model:                         241                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==================================================================================\n",
       "                     coef    std err          t      P>|t|      [0.025      0.975]\n",
       "----------------------------------------------------------------------------------\n",
       "NAIM              -0.0003      0.000     -2.588      0.010      -0.001   -7.27e-05\n",
       "NAIA              -0.0084      0.000    -30.051      0.000      -0.009      -0.008\n",
       "ANNEE              0.0180      0.001     33.702      0.000       0.017       0.019\n",
       "LHHC               0.6075      0.002    302.290      0.000       0.604       0.611\n",
       "DATANT             0.0037      0.001      5.001      0.000       0.002       0.005\n",
       "DAMOIS            -0.0007      0.000     -5.119      0.000      -0.001      -0.000\n",
       "DATDIP            -0.0024      0.000    -17.161      0.000      -0.003      -0.002\n",
       "NBTOT              0.0028      0.000      9.848      0.000       0.002       0.003\n",
       "FORDAT            -0.0059      0.001     -8.480      0.000      -0.007      -0.005\n",
       "AGE                0.0264      0.000     81.923      0.000       0.026       0.027\n",
       "EXPE               0.0037      0.001      4.995      0.000       0.002       0.005\n",
       "EXPEPOT           -0.0089      0.001    -13.022      0.000      -0.010      -0.008\n",
       "NAIM_nan          -0.0413      0.020     -2.052      0.040      -0.081      -0.002\n",
       "LHHC_nan           3.1801      0.017    183.794      0.000       3.146       3.214\n",
       "DATANT_nan         7.2968      1.462      4.990      0.000       4.431      10.163\n",
       "DAMOIS_nan         0.0425      0.002     28.085      0.000       0.040       0.045\n",
       "DATDIP_nan        -0.0234      0.007     -3.317      0.001      -0.037      -0.010\n",
       "NBTOT_nan          0.1508      0.012     12.811      0.000       0.128       0.174\n",
       "FORDAT_nan        -0.3135      0.025    -12.545      0.000      -0.362      -0.264\n",
       "EXPE_nan           7.2968      1.462      4.990      0.000       4.431      10.163\n",
       "EXPEPOT_nan       -0.3135      0.025    -12.545      0.000      -0.362      -0.264\n",
       "SALMEERED_nan  -5.574e-13   9.43e-14     -5.914      0.000   -7.42e-13   -3.73e-13\n",
       "STATUT_11          0.0534      0.026      2.040      0.041       0.002       0.105\n",
       "STATUT_12          0.2999      0.026     11.532      0.000       0.249       0.351\n",
       "STATUT_13         -0.2666      0.061     -4.377      0.000      -0.386      -0.147\n",
       "STATUT_21          0.0016      0.023      0.069      0.945      -0.044       0.047\n",
       "STATUT_22         -0.3927      0.023    -16.800      0.000      -0.439      -0.347\n",
       "STATUT_33         -0.0983      0.023     -4.245      0.000      -0.144      -0.053\n",
       "STATUT_34         -0.3542      0.023    -15.238      0.000      -0.400      -0.309\n",
       "STATUT_35          0.0174      0.023      0.755      0.450      -0.028       0.063\n",
       "STATUT_41          0.1100      0.023      4.751      0.000       0.065       0.155\n",
       "STATUT_42         -0.5054      0.032    -15.925      0.000      -0.568      -0.443\n",
       "STATUT_43         -0.1220      0.023     -5.230      0.000      -0.168      -0.076\n",
       "STATUT_44         -0.1034      0.024     -4.315      0.000      -0.150      -0.056\n",
       "STATUT_45          0.0517      0.023      2.233      0.026       0.006       0.097\n",
       "STATUT_new_nan     0.2424      0.200      1.213      0.225      -0.149       0.634\n",
       "CSE_00             0.0158      0.026      0.602      0.547      -0.036       0.067\n",
       "CSE_11            -0.2881      0.041     -7.060      0.000      -0.368      -0.208\n",
       "CSE_12            -0.2851      0.042     -6.742      0.000      -0.368      -0.202\n",
       "CSE_13            -0.3325      0.039     -8.584      0.000      -0.408      -0.257\n",
       "CSE_21            -0.0776      0.018     -4.307      0.000      -0.113      -0.042\n",
       "CSE_22            -0.0309      0.017     -1.817      0.069      -0.064       0.002\n",
       "CSE_23             0.4361      0.018     24.265      0.000       0.401       0.471\n",
       "CSE_31             0.2318      0.012     19.313      0.000       0.208       0.255\n",
       "CSE_33             0.3473      0.010     35.929      0.000       0.328       0.366\n",
       "CSE_34             0.2947      0.010     30.960      0.000       0.276       0.313\n",
       "CSE_35             0.1099      0.010     10.675      0.000       0.090       0.130\n",
       "CSE_37             0.4428      0.009     47.192      0.000       0.424       0.461\n",
       "CSE_38             0.3942      0.009     41.862      0.000       0.376       0.413\n",
       "CSE_42             0.0690      0.009      7.304      0.000       0.051       0.088\n",
       "CSE_43             0.0815      0.009      8.701      0.000       0.063       0.100\n",
       "CSE_44            -0.5121      0.019    -27.422      0.000      -0.549      -0.475\n",
       "CSE_45             0.0956      0.010      9.954      0.000       0.077       0.114\n",
       "CSE_46             0.0713      0.009      7.666      0.000       0.053       0.090\n",
       "CSE_47             0.0472      0.009      5.034      0.000       0.029       0.066\n",
       "CSE_48             0.0946      0.010      9.936      0.000       0.076       0.113\n",
       "CSE_52            -0.1246      0.009    -13.415      0.000      -0.143      -0.106\n",
       "CSE_53         -3.169e-05      0.010     -0.003      0.997      -0.019       0.019\n",
       "CSE_54            -0.0755      0.009     -8.132      0.000      -0.094      -0.057\n",
       "CSE_55            -0.1791      0.009    -19.016      0.000      -0.198      -0.161\n",
       "CSE_56            -0.3571      0.009    -38.166      0.000      -0.375      -0.339\n",
       "CSE_62            -0.0983      0.009    -10.518      0.000      -0.117      -0.080\n",
       "CSE_63            -0.1294      0.009    -13.886      0.000      -0.148      -0.111\n",
       "CSE_64            -0.1669      0.010    -17.532      0.000      -0.186      -0.148\n",
       "CSE_65            -0.1207      0.010    -12.581      0.000      -0.139      -0.102\n",
       "CSE_67            -0.1991      0.009    -21.226      0.000      -0.217      -0.181\n",
       "CSE_68            -0.3560      0.009    -37.698      0.000      -0.374      -0.337\n",
       "CSE_69            -0.2022      0.010    -19.608      0.000      -0.222      -0.182\n",
       "CSE_83            -0.5054      0.032    -15.925      0.000      -0.568      -0.443\n",
       "CSE_new_nan        0.2424      0.200      1.213      0.225      -0.149       0.634\n",
       "DDIPL_1           -0.0091      0.031     -0.296      0.767      -0.070       0.051\n",
       "DDIPL_3           -0.0704      0.031     -2.286      0.022      -0.131      -0.010\n",
       "DDIPL_4           -0.1333      0.031     -4.332      0.000      -0.194      -0.073\n",
       "DDIPL_5           -0.1776      0.031     -5.774      0.000      -0.238      -0.117\n",
       "DDIPL_6           -0.1845      0.031     -5.998      0.000      -0.245      -0.124\n",
       "DDIPL_7           -0.2920      0.031     -9.497      0.000      -0.352      -0.232\n",
       "DDIPL_new_nan     -0.1995      0.036     -5.587      0.000      -0.269      -0.129\n",
       "SEXE_1            -0.4570      0.107     -4.268      0.000      -0.667      -0.247\n",
       "SEXE_2            -0.6093      0.107     -5.690      0.000      -0.819      -0.399\n",
       "ACTEU_1           -0.2598      0.071     -3.635      0.000      -0.400      -0.120\n",
       "ACTEU_2           -0.4103      0.072     -5.722      0.000      -0.551      -0.270\n",
       "ACTEU_3           -0.3962      0.072     -5.538      0.000      -0.536      -0.256\n",
       "RGA_1             -0.4544      0.027    -16.554      0.000      -0.508      -0.401\n",
       "RGA_2             -0.4455      0.028    -16.162      0.000      -0.499      -0.391\n",
       "RGA_3             -0.4454      0.028    -16.078      0.000      -0.500      -0.391\n",
       "RGA_4             -0.4436      0.028    -15.968      0.000      -0.498      -0.389\n",
       "RGA_5             -0.4323      0.028    -15.525      0.000      -0.487      -0.378\n",
       "RGA_6             -0.4507      0.027    -16.413      0.000      -0.505      -0.397\n",
       "RGA_new_nan        1.6055      0.052     30.696      0.000       1.503       1.708\n",
       "PRIM_1             1.4656      0.054     27.274      0.000       1.360       1.571\n",
       "PRIM_2             1.3824      0.054     25.726      0.000       1.277       1.488\n",
       "PRIM_9             1.4166      0.054     26.101      0.000       1.310       1.523\n",
       "PRIM_new_nan      -5.3309      0.055    -97.209      0.000      -5.438      -5.223\n",
       "PRIMS_1           -0.1849      0.054     -3.445      0.001      -0.290      -0.080\n",
       "PRIMS_2           -0.2208      0.054     -4.114      0.000      -0.326      -0.116\n",
       "PRIMS_9           -0.2341      0.054     -4.327      0.000      -0.340      -0.128\n",
       "PRIMS_new_nan     -0.4266      0.055     -7.762      0.000      -0.534      -0.319\n",
       "REVENT_8          -0.3491      0.062     -5.673      0.000      -0.470      -0.229\n",
       "REVENT_9           0.0276      0.022      1.279      0.201      -0.015       0.070\n",
       "REVENT_A          -0.3163      0.027    -11.774      0.000      -0.369      -0.264\n",
       "REVENT_B          -0.4938      0.050     -9.795      0.000      -0.593      -0.395\n",
       "REVENT_C          -0.2842      0.047     -6.036      0.000      -0.376      -0.192\n",
       "REVENT_D          -0.2016      0.047     -4.261      0.000      -0.294      -0.109\n",
       "REVENT_E          -0.0394      0.050     -0.781      0.435      -0.138       0.059\n",
       "REVENT_F          -0.1356      0.057     -2.392      0.017      -0.247      -0.025\n",
       "REVENT_G          -0.0231      0.065     -0.356      0.722      -0.150       0.104\n",
       "REVENT_H           0.0077      0.051      0.152      0.879      -0.092       0.107\n",
       "REVENT_I           0.2671      0.044      6.088      0.000       0.181       0.353\n",
       "REVENT_J           0.4628      0.054      8.531      0.000       0.356       0.569\n",
       "REVENT_new_nan     0.0116      0.021      0.542      0.588      -0.030       0.053\n",
       "AUTSAL_1          -0.3580      0.072     -4.953      0.000      -0.500      -0.216\n",
       "AUTSAL_2          -0.3493      0.072     -4.872      0.000      -0.490      -0.209\n",
       "AUTSAL_new_nan    -0.3590      0.072     -5.008      0.000      -0.500      -0.219\n",
       "TYPSAL_1          -0.3754      0.071     -5.252      0.000      -0.516      -0.235\n",
       "TYPSAL_2          -0.4540      0.071     -6.350      0.000      -0.594      -0.314\n",
       "TYPSAL_new_nan    -0.2370      0.072     -3.287      0.001      -0.378      -0.096\n",
       "AM2NB_1           -0.2690      0.055     -4.915      0.000      -0.376      -0.162\n",
       "AM2NB_2           -0.2923      0.056     -5.183      0.000      -0.403      -0.182\n",
       "AM2NB_3           -0.2466      0.061     -4.013      0.000      -0.367      -0.126\n",
       "AM2NB_new_nan     -0.2584      0.055     -4.715      0.000      -0.366      -0.151\n",
       "CHPUB_1           -0.1107      0.030     -3.678      0.000      -0.170      -0.052\n",
       "CHPUB_2           -0.0255      0.030     -0.839      0.402      -0.085       0.034\n",
       "CHPUB_3           -0.1545      0.033     -4.663      0.000      -0.219      -0.090\n",
       "CHPUB_4           -0.2044      0.033     -6.159      0.000      -0.269      -0.139\n",
       "CHPUB_5           -0.1869      0.033     -5.593      0.000      -0.252      -0.121\n",
       "CHPUB_6           -0.0497      0.036     -1.372      0.170      -0.121       0.021\n",
       "CHPUB_7           -0.2277      0.033     -6.820      0.000      -0.293      -0.162\n",
       "CHPUB_new_nan     -0.1069      0.038     -2.807      0.005      -0.182      -0.032\n",
       "CONTRA_0          -0.3844      0.031    -12.275      0.000      -0.446      -0.323\n",
       "CONTRA_1          -0.1820      0.031     -5.883      0.000      -0.243      -0.121\n",
       "CONTRA_2          -0.1077      0.031     -3.468      0.001      -0.169      -0.047\n",
       "CONTRA_3           0.0526      0.032      1.620      0.105      -0.011       0.116\n",
       "CONTRA_4          -0.0654      0.034     -1.934      0.053      -0.132       0.001\n",
       "CONTRA_5           0.0027      0.032      0.086      0.931      -0.060       0.065\n",
       "CONTRA_new_nan    -0.3822      0.031    -12.155      0.000      -0.444      -0.321\n",
       "FONCTC_1          -0.1101      0.020     -5.591      0.000      -0.149      -0.071\n",
       "FONCTC_10         -0.0984      0.020     -4.991      0.000      -0.137      -0.060\n",
       "FONCTC_2          -0.1197      0.020     -6.011      0.000      -0.159      -0.081\n",
       "FONCTC_3          -0.0954      0.020     -4.786      0.000      -0.134      -0.056\n",
       "FONCTC_4          -0.1213      0.020     -6.018      0.000      -0.161      -0.082\n",
       "FONCTC_5          -0.0855      0.020     -4.322      0.000      -0.124      -0.047\n",
       "FONCTC_6          -0.0712      0.020     -3.596      0.000      -0.110      -0.032\n",
       "FONCTC_7          -0.0807      0.020     -4.079      0.000      -0.119      -0.042\n",
       "FONCTC_8          -0.1127      0.020     -5.693      0.000      -0.152      -0.074\n",
       "FONCTC_9          -0.0750      0.020     -3.812      0.000      -0.114      -0.036\n",
       "FONCTC_new_nan    -0.0965      0.020     -4.860      0.000      -0.135      -0.058\n",
       "TITC_1            -0.1368      0.044     -3.084      0.002      -0.224      -0.050\n",
       "TITC_2            -0.0180      0.044     -0.413      0.680      -0.104       0.068\n",
       "TITC_3            -0.3069      0.044     -6.984      0.000      -0.393      -0.221\n",
       "TITC_4            -0.2689      0.045     -5.954      0.000      -0.357      -0.180\n",
       "TITC_new_nan      -0.3357      0.049     -6.823      0.000      -0.432      -0.239\n",
       "TPP_1             -0.2218      0.055     -4.068      0.000      -0.329      -0.115\n",
       "TPP_2             -0.0986      0.054     -1.816      0.069      -0.205       0.008\n",
       "TPP_3             -0.4444      0.054     -8.196      0.000      -0.551      -0.338\n",
       "TPP_new_nan       -0.3015      0.054     -5.544      0.000      -0.408      -0.195\n",
       "OCCREF_1          -0.4556      0.072     -6.336      0.000      -0.597      -0.315\n",
       "OCCREF_2          -0.3737      0.072     -5.217      0.000      -0.514      -0.233\n",
       "OCCREF_new_nan    -0.2370      0.072     -3.287      0.001      -0.378      -0.096\n",
       "QPRC_1            -0.0552      0.022     -2.523      0.012      -0.098      -0.012\n",
       "QPRC_2            -0.1006      0.022     -4.630      0.000      -0.143      -0.058\n",
       "QPRC_3            -0.1528      0.022     -6.974      0.000      -0.196      -0.110\n",
       "QPRC_4            -0.1065      0.022     -4.902      0.000      -0.149      -0.064\n",
       "QPRC_5            -0.1178      0.022     -5.453      0.000      -0.160      -0.075\n",
       "QPRC_6            -0.1357      0.022     -6.185      0.000      -0.179      -0.093\n",
       "QPRC_7            -0.0334      0.025     -1.318      0.187      -0.083       0.016\n",
       "QPRC_8            -0.1466      0.022     -6.650      0.000      -0.190      -0.103\n",
       "QPRC_9            -0.1026      0.022     -4.725      0.000      -0.145      -0.060\n",
       "QPRC_new_nan      -0.1150      0.027     -4.293      0.000      -0.168      -0.063\n",
       "TPPRED_1          -0.2764      0.074     -3.723      0.000      -0.422      -0.131\n",
       "TPPRED_2          -0.5508      0.074     -7.429      0.000      -0.696      -0.405\n",
       "TPPRED_new_nan    -0.2392      0.080     -2.989      0.003      -0.396      -0.082\n",
       "IMMI_1            -1.3251      0.082    -16.113      0.000      -1.486      -1.164\n",
       "IMMI_2            -1.3468      0.082    -16.378      0.000      -1.508      -1.186\n",
       "IMMI_new_nan       1.6055      0.052     30.696      0.000       1.503       1.708\n",
       "SECT_00           -0.0636      0.012     -5.436      0.000      -0.087      -0.041\n",
       "SECT_01           -0.1517      0.006    -24.165      0.000      -0.164      -0.139\n",
       "SECT_02           -0.0716      0.013     -5.725      0.000      -0.096      -0.047\n",
       "SECT_03            0.0332      0.047      0.708      0.479      -0.059       0.125\n",
       "SECT_05            0.0406      0.019      2.126      0.033       0.003       0.078\n",
       "SECT_06            0.4268      0.106      4.009      0.000       0.218       0.635\n",
       "SECT_07            0.4926      0.138      3.582      0.000       0.223       0.762\n",
       "SECT_08           -0.0552      0.027     -2.010      0.044      -0.109      -0.001\n",
       "SECT_09            0.4311      0.119      3.623      0.000       0.198       0.664\n",
       "SECT_10           -0.0380      0.007     -5.703      0.000      -0.051      -0.025\n",
       "SECT_11            0.1686      0.017      9.875      0.000       0.135       0.202\n",
       "SECT_12            0.3163      0.075      4.200      0.000       0.169       0.464\n",
       "SECT_13           -0.0514      0.019     -2.683      0.007      -0.089      -0.014\n",
       "SECT_14           -0.0336      0.012     -2.833      0.005      -0.057      -0.010\n",
       "SECT_15           -0.0617      0.005    -12.833      0.000      -0.071      -0.052\n",
       "SECT_16           -0.0362      0.015     -2.422      0.015      -0.066      -0.007\n",
       "SECT_17           -0.0579      0.007     -8.177      0.000      -0.072      -0.044\n",
       "SECT_18           -0.0877      0.007    -11.907      0.000      -0.102      -0.073\n",
       "SECT_19           -0.0401      0.011     -3.667      0.000      -0.062      -0.019\n",
       "SECT_20           -0.0256      0.007     -3.703      0.000      -0.039      -0.012\n",
       "SECT_21            0.0768      0.007     10.402      0.000       0.062       0.091\n",
       "SECT_22            0.0163      0.006      2.775      0.006       0.005       0.028\n",
       "SECT_23            0.0627      0.010      6.195      0.000       0.043       0.083\n",
       "SECT_24            0.1038      0.006     18.726      0.000       0.093       0.115\n",
       "SECT_25           -0.0080      0.005     -1.471      0.141      -0.019       0.003\n",
       "SECT_26            0.0257      0.006      4.077      0.000       0.013       0.038\n",
       "SECT_27            0.0304      0.007      4.638      0.000       0.018       0.043\n",
       "SECT_28           -0.0063      0.005     -1.273      0.203      -0.016       0.003\n",
       "SECT_29            0.0079      0.005      1.522      0.128      -0.002       0.018\n",
       "SECT_30            0.0910      0.009     10.167      0.000       0.073       0.109\n",
       "SECT_31            0.0102      0.006      1.577      0.115      -0.002       0.023\n",
       "SECT_32            0.0223      0.007      3.164      0.002       0.008       0.036\n",
       "SECT_33            0.0196      0.006      3.033      0.002       0.007       0.032\n",
       "SECT_34            0.0528      0.005      9.703      0.000       0.042       0.063\n",
       "SECT_35            0.0507      0.006      7.964      0.000       0.038       0.063\n",
       "SECT_36           -0.0554      0.007     -8.369      0.000      -0.068      -0.042\n",
       "SECT_37           -0.0403      0.014     -2.979      0.003      -0.067      -0.014\n",
       "SECT_38            0.0117      0.013      0.930      0.352      -0.013       0.036\n",
       "SECT_39           -0.1821      0.061     -2.991      0.003      -0.301      -0.063\n",
       "SECT_40            0.0807      0.007     11.590      0.000       0.067       0.094\n",
       "SECT_41            0.0159      0.009      1.824      0.068      -0.001       0.033\n",
       "SECT_42           -0.0124      0.011     -1.120      0.263      -0.034       0.009\n",
       "SECT_43            0.0062      0.006      1.074      0.283      -0.005       0.017\n",
       "SECT_45           -0.0043      0.004     -1.018      0.309      -0.013       0.004\n",
       "SECT_46           -0.0512      0.006     -8.803      0.000      -0.063      -0.040\n",
       "SECT_47           -0.0764      0.005    -14.673      0.000      -0.087      -0.066\n",
       "SECT_49           -0.0210      0.006     -3.258      0.001      -0.034      -0.008\n",
       "SECT_50           -0.0562      0.005    -10.619      0.000      -0.067      -0.046\n",
       "SECT_51           -0.0160      0.004     -3.582      0.000      -0.025      -0.007\n",
       "SECT_52           -0.1592      0.004    -36.913      0.000      -0.168      -0.151\n",
       "SECT_53           -0.1101      0.010    -10.840      0.000      -0.130      -0.090\n",
       "SECT_55           -0.0928      0.005    -19.336      0.000      -0.102      -0.083\n",
       "SECT_56           -0.0354      0.007     -5.265      0.000      -0.049      -0.022\n",
       "SECT_58           -0.0335      0.014     -2.471      0.013      -0.060      -0.007\n",
       "SECT_59            0.0634      0.020      3.208      0.001       0.025       0.102\n",
       "SECT_60            0.0479      0.005      9.847      0.000       0.038       0.057\n",
       "SECT_61            0.0760      0.011      6.869      0.000       0.054       0.098\n",
       "SECT_62            0.0751      0.007     10.191      0.000       0.061       0.090\n",
       "SECT_63           -0.0091      0.006     -1.531      0.126      -0.021       0.003\n",
       "SECT_64           -0.0386      0.005     -8.099      0.000      -0.048      -0.029\n",
       "SECT_65            0.0709      0.005     13.931      0.000       0.061       0.081\n",
       "SECT_66            0.0240      0.006      3.766      0.000       0.011       0.036\n",
       "SECT_67           -0.0053      0.009     -0.568      0.570      -0.024       0.013\n",
       "SECT_68           -0.0797      0.009     -9.324      0.000      -0.096      -0.063\n",
       "SECT_69           -0.0196      0.009     -2.067      0.039      -0.038      -0.001\n",
       "SECT_70           -0.1138      0.005    -20.758      0.000      -0.124      -0.103\n",
       "SECT_71           -0.0664      0.007     -9.500      0.000      -0.080      -0.053\n",
       "SECT_72           -0.0009      0.006     -0.156      0.876      -0.013       0.011\n",
       "SECT_73           -0.0294      0.007     -4.162      0.000      -0.043      -0.016\n",
       "SECT_74           -0.0939      0.004    -21.647      0.000      -0.102      -0.085\n",
       "SECT_75           -0.1018      0.004    -24.070      0.000      -0.110      -0.093\n",
       "SECT_77           -0.0707      0.015     -4.665      0.000      -0.100      -0.041\n",
       "SECT_78           -0.1065      0.015     -7.110      0.000      -0.136      -0.077\n",
       "SECT_79           -0.1150      0.021     -5.482      0.000      -0.156      -0.074\n",
       "SECT_80           -0.1602      0.004    -36.594      0.000      -0.169      -0.152\n",
       "SECT_81           -0.0307      0.008     -3.761      0.000      -0.047      -0.015\n",
       "SECT_82           -0.0865      0.010     -8.366      0.000      -0.107      -0.066\n",
       "SECT_84           -0.0858      0.005    -16.361      0.000      -0.096      -0.076\n",
       "SECT_85           -0.1283      0.004    -31.540      0.000      -0.136      -0.120\n",
       "SECT_86           -0.0149      0.006     -2.475      0.013      -0.027      -0.003\n",
       "SECT_87           -0.0268      0.006     -4.214      0.000      -0.039      -0.014\n",
       "SECT_88           -0.0643      0.006    -11.258      0.000      -0.076      -0.053\n",
       "SECT_90           -0.0554      0.009     -6.344      0.000      -0.072      -0.038\n",
       "SECT_91           -0.2100      0.006    -37.344      0.000      -0.221      -0.199\n",
       "SECT_92           -0.1418      0.006    -24.900      0.000      -0.153      -0.131\n",
       "SECT_93           -0.0338      0.006     -5.328      0.000      -0.046      -0.021\n",
       "SECT_94           -0.1073      0.008    -13.154      0.000      -0.123      -0.091\n",
       "SECT_95           -0.6289      0.005   -121.876      0.000      -0.639      -0.619\n",
       "SECT_96            0.0577      0.010      5.545      0.000       0.037       0.078\n",
       "SECT_97           -0.0063      0.010     -0.615      0.539      -0.026       0.014\n",
       "SECT_98           -0.0036      0.057     -0.063      0.949      -0.115       0.108\n",
       "SECT_99            0.3519      0.018     19.396      0.000       0.316       0.387\n",
       "SECT_na           -0.0569      0.004    -13.546      0.000      -0.065      -0.049\n",
       "TRIM_1            -0.6760      0.041    -16.439      0.000      -0.757      -0.595\n",
       "TRIM_2            -0.6713      0.041    -16.325      0.000      -0.752      -0.591\n",
       "TRIM_3            -0.6609      0.041    -16.072      0.000      -0.742      -0.580\n",
       "TRIM_4            -0.6636      0.041    -16.136      0.000      -0.744      -0.583\n",
       "TRIM_new_nan       1.6055      0.052     30.696      0.000       1.503       1.708\n",
       "CONSTANT          -1.0663      0.214     -4.979      0.000      -1.486      -0.647\n",
       "AGE2              -0.0003   3.36e-06    -98.327      0.000      -0.000      -0.000\n",
       "==============================================================================\n",
       "Omnibus:                   970019.766   Durbin-Watson:                   1.840\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):        137699214.336\n",
       "Skew:                          -3.603   Prob(JB):                         0.00\n",
       "Kurtosis:                      56.971   Cond. No.                     1.13e+16\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 2.08e-19. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = mx_train\n",
    "Y = mylog_train\n",
    "\n",
    "MINCERmodel = sm.OLS(Y, X).fit()\n",
    "predictions = MINCERmodel.predict(X)\n",
    "\n",
    "MINCERmodel.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.4465930369100526, 'Variance du prédicteur du log-salaire': 0.28957362207762777, 'Variance des résidus du log-salaire': 0.1646581367612104, 'R2 log-salaire': 0.6313016031318601, 'Variance totale salaire': 2408042.0678540873, 'Variance du prédicteur du salaire': 615996.2365867645, 'Variance des résidus du salaire': 1746597.2804101494, 'R2 salaire': 0.27468157482538524}\n",
      "{'Variance totale log-salaire': 0.40021614820665274, 'Variance du prédicteur du log-salaire': 0.27570212528644983, 'Variance des résidus du log-salaire': 0.1462879709281502, 'R2 log-salaire': 0.6344775902130415, 'Variance totale salaire': 2664478.2905998337, 'Variance du prédicteur du salaire': 720374.4045406705, 'Variance des résidus du salaire': 1903472.2679241125, 'R2 salaire': 0.28561164313498755}\n",
      "{'Variance totale log-salaire': 0.40804679088513135, 'Variance du prédicteur du log-salaire': 0.28141855120010784, 'Variance des résidus du log-salaire': 0.14089584436603664, 'R2 log-salaire': 0.654706647587139, 'Variance totale salaire': 2206705.372688974, 'Variance du prédicteur du salaire': 733027.276077425, 'Variance des résidus du salaire': 1384233.1108013976, 'R2 salaire': 0.3727150312256481}\n",
      "{'Variance totale log-salaire': 0.40136757645660415, 'Variance du prédicteur du log-salaire': 0.28526796974666013, 'Variance des résidus du log-salaire': 0.1280772449451588, 'R2 log-salaire': 0.6808978790069096, 'Variance totale salaire': 3176474.955046984, 'Variance du prédicteur du salaire': 752459.7552295825, 'Variance des résidus du salaire': 2250293.953952004, 'R2 salaire': 0.2915750995056343}\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x2574daab408>"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "MINCERperf = perfestim(df=mtest, model=MINCERmodel, predvar=predicted)\n",
    "print(MINCERperf[1])\n",
    "MINCERperf18 = perfestim(df=mtest18, model=MINCERmodel, predvar=predicted)\n",
    "MINCERperf18t1 = perfestim(df=mtest18.loc[mtest18.TRIM_1==1,], model=MINCERmodel, predvar=predicted)\n",
    "MINCERperf18t1r1 = perfestim(df=mtest18.loc[(mtest18.TRIM_1==1)&(mtest18.RGA_1==1),], model=MINCERmodel, predvar=predicted)\n",
    "print(MINCERperf18[1])\n",
    "print(MINCERperf18t1[1])\n",
    "print(MINCERperf18t1r1[1])\n",
    "df18 = MINCERperf18[0]\n",
    "plt.hexbin(df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),predicted], \n",
    "           df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x2571427b848>"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dfall = MINCERperf[0]\n",
    "plt.hexbin(dfall.loc[(dfall[predicted]<3000)&(dfall[\"SALPRED\"]<5000),predicted], \n",
    "           dfall.loc[(dfall[predicted]<3000)&(dfall[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "miss_df = Mincera.loc[(Mincera[\"ANNEE\"]>2012)&(Mincera[\"ANNEE\"]<2019)&(pd.notnull(Mincera[\"SALMET\"]))&(Mincera[\"SALMEERED_nan\"]==1),:]\n",
    "miss_df = miss_df.loc[(miss_df['SALMET']!='98')&(miss_df['SALMET']!='99')&(miss_df['SALMET']!='0'),:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "traincolumns = mx_train.columns\n",
    "x_testm = miss_df.loc[:,traincolumns]\n",
    "dfm = miss_df.loc[:,[\"SALMET\"]]\n",
    "dfm[\"SALPRED\"] = np.exp(MINCERmodel.predict(x_testm))\n",
    "dfm = dfm.loc[dfm[\"SALMET\"]!=0,:]\n",
    "SALMET = dfm[\"SALMET\"]\n",
    "SALPREDT = pd.cut(dfm['SALPRED'],bins=[0,499,999,1249,1499,1999,2499,2999,4999,7999,float(\"inf\")])\n",
    "Mincera_tranches = pd.crosstab(SALPREDT,SALMET, normalize='columns', dropna=False)\n",
    "tranches = ['1','2','3','4','5','6','7','8','9','10']\n",
    "Mincera_tranches = Mincera_tranches.reindex(tranches, axis=\"columns\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 255,
   "metadata": {},
   "outputs": [],
   "source": [
    "RN_mincera_diff = Mincera_tranches.subtract(crosstab_RN_salmet.values, axis='index')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='SALMET', ylabel='SALPRED'>"
      ]
     },
     "execution_count": 256,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sn.heatmap(RN_mincera_diff)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(Mincera)\n",
    "del(mdata)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Mincer avec les nomenclatures non vectorisées"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1531841, 45)\n",
      "replacing nan in...\n",
      "numerical column...\n",
      "NAIM\n",
      "NAIA\n",
      "ANNEE\n",
      "LHHC\n",
      "DATANT\n",
      "DAMOIS\n",
      "DATDIP\n",
      "NBTOT\n",
      "FORDAT\n",
      "AGE\n",
      "EXPE\n",
      "EXPEPOT\n",
      "SALMEERED\n",
      "categorical column...\n",
      "STATUT\n",
      "CSE\n",
      "DDIPL\n",
      "SEXE\n",
      "ACTEU\n",
      "RGA\n",
      "CSPP\n",
      "PRIM\n",
      "PRIMS\n",
      "REVENT\n",
      "DNAI\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "TPP\n",
      "OCCREF\n",
      "CSPM\n",
      "QPRC\n",
      "TPPRED\n",
      "IMMI\n",
      "DIPDET\n",
      "SECT\n",
      "P\n",
      "NAFN\n",
      "DEP\n",
      "DEPPER\n",
      "DEPMER\n",
      "TRIM\n",
      "(1531841, 55)\n",
      "There were 55 columns before encoding categorical features\n",
      "OneHotEncoding column...\n",
      "STATUT\n",
      "CSE\n",
      "DDIPL\n",
      "SEXE\n",
      "ACTEU\n",
      "RGA\n",
      "CSPP\n",
      "PRIM\n",
      "PRIMS\n",
      "REVENT\n",
      "DNAI\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "TPP\n",
      "OCCREF\n",
      "CSPM\n",
      "QPRC\n",
      "TPPRED\n",
      "IMMI\n",
      "DIPDET\n",
      "SECT\n",
      "P\n",
      "NAFN\n",
      "DEP\n",
      "DEPPER\n",
      "DEPMER\n",
      "TRIM\n",
      "There are 3761 columns after encoding categorical features\n"
     ]
    }
   ],
   "source": [
    "# Mincer avec nomenclatures\n",
    "mbdata = copy.deepcopy(datasave2.loc[:,Mincercolb])\n",
    "print(mbdata.shape)\n",
    "objl = [i for i in mbdata.columns if (i not in numl)]\n",
    "objl = objl+['CSE','DDIPL','SECT','DIPDET','CSPP','CSPM']\n",
    "mbdata_nonan = replace_nans(mbdata, numl, objl)\n",
    "print(mbdata_nonan.shape)\n",
    "print('There were {} columns before encoding categorical features'.format(mbdata_nonan.shape[1]))\n",
    "Mincerb = oneHotEncode(mbdata_nonan, objl)\n",
    "print('There are {} columns after encoding categorical features'.format(Mincerb.shape[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(mbdata)\n",
    "del(mbdata_nonan)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincerb[['SALMET']] = datasave2.loc[:,['SALMET']]\n",
    "Mincerb[['CONSTANT']]=1\n",
    "Mincerb[['AGE2']]=Mincerb[['AGE']]*Mincerb[['AGE']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "mbdata= Mincerb.loc[Mincerb[\"SALMEERED_nan\"]==0,:].drop(columns=[\"SALMET\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "mtrain = mbdata.loc[(mbdata[\"NAIM\"]!=3)&(mbdata[\"ANNEE\"]<2018),:]\n",
    "my_train = mtrain.loc[:,\"SALMEERED\"].values\n",
    "mx_train = mtrain.drop(columns=[\"SALMEERED\"])\n",
    "mtest = mbdata.loc[(mbdata[\"NAIM\"]==3)|(mbdata[\"ANNEE\"]==2018),:]\n",
    "test18 = mbdata.loc[mbdata[\"ANNEE\"]==2018,:]\n",
    "mylog_train = np.log(my_train+1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Le modèle linéaire avec les nomenclatures encodées en \"one-hot\" est trop gros pour être estimé:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "metadata": {},
   "outputs": [
    {
     "ename": "MemoryError",
     "evalue": "Unable to allocate 31.2 GiB for an array with shape (3762, 1114668) and data type float64",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mMemoryError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_47796/3251339684.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mY\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmylog_train\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 4\u001b[1;33m \u001b[0mmbmodel\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0msm\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mOLS\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mY\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mX\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      5\u001b[0m \u001b[0mpredictions\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmbmodel\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mX\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\regression\\linear_model.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[0;32m    871\u001b[0m                  **kwargs):\n\u001b[0;32m    872\u001b[0m         super(OLS, self).__init__(endog, exog, missing=missing,\n\u001b[1;32m--> 873\u001b[1;33m                                   hasconst=hasconst, **kwargs)\n\u001b[0m\u001b[0;32m    874\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[1;34m\"weights\"\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_init_keys\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    875\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_init_keys\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"weights\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\regression\\linear_model.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, endog, exog, weights, missing, hasconst, **kwargs)\u001b[0m\n\u001b[0;32m    702\u001b[0m             \u001b[0mweights\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mweights\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msqueeze\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    703\u001b[0m         super(WLS, self).__init__(endog, exog, missing=missing,\n\u001b[1;32m--> 704\u001b[1;33m                                   weights=weights, hasconst=hasconst, **kwargs)\n\u001b[0m\u001b[0;32m    705\u001b[0m         \u001b[0mnobs\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    706\u001b[0m         \u001b[0mweights\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mweights\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\regression\\linear_model.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, endog, exog, **kwargs)\u001b[0m\n\u001b[0;32m    188\u001b[0m     \"\"\"\n\u001b[0;32m    189\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 190\u001b[1;33m         \u001b[0msuper\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mRegressionModel\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    191\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_data_attr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pinv_wexog'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'weights'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    192\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\base\\model.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, endog, exog, **kwargs)\u001b[0m\n\u001b[0;32m    235\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    236\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 237\u001b[1;33m         \u001b[0msuper\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mLikelihoodModel\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    238\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minitialize\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    239\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\base\\model.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, endog, exog, **kwargs)\u001b[0m\n\u001b[0;32m     76\u001b[0m         \u001b[0mhasconst\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'hasconst'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     77\u001b[0m         self.data = self._handle_data(endog, exog, missing, hasconst,\n\u001b[1;32m---> 78\u001b[1;33m                                       **kwargs)\n\u001b[0m\u001b[0;32m     79\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mk_constant\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mk_constant\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     80\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexog\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\base\\model.py\u001b[0m in \u001b[0;36m_handle_data\u001b[1;34m(self, endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[0;32m     99\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    100\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_handle_data\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmissing\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mhasconst\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 101\u001b[1;33m         \u001b[0mdata\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mhandle_data\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmissing\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mhasconst\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    102\u001b[0m         \u001b[1;31m# kwargs arrays could have changed, easier to just attach here\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    103\u001b[0m         \u001b[1;32mfor\u001b[0m \u001b[0mkey\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\base\\data.py\u001b[0m in \u001b[0;36mhandle_data\u001b[1;34m(endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[0;32m    671\u001b[0m     \u001b[0mklass\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mhandle_data_class_factory\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    672\u001b[0m     return klass(endog, exog=exog, missing=missing, hasconst=hasconst,\n\u001b[1;32m--> 673\u001b[1;33m                  **kwargs)\n\u001b[0m",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\base\\data.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, endog, exog, missing, hasconst, **kwargs)\u001b[0m\n\u001b[0;32m     81\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0morig_endog\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mendog\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     82\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0morig_exog\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 83\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexog\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_convert_endog_exog\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     84\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     85\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconst_idx\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\statsmodels\\base\\data.py\u001b[0m in \u001b[0;36m_convert_endog_exog\u001b[1;34m(self, endog, exog)\u001b[0m\n\u001b[0;32m    504\u001b[0m         \u001b[1;31m#TODO: remove this when we handle dtype systematically\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    505\u001b[0m         \u001b[0mendog\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 506\u001b[1;33m         \u001b[0mexog\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mexog\u001b[0m \u001b[1;32mif\u001b[0m \u001b[0mexog\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m \u001b[1;32melse\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mexog\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    507\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mendog\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[1;33m==\u001b[0m \u001b[0mobject\u001b[0m \u001b[1;32mor\u001b[0m \u001b[0mexog\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mexog\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[1;33m==\u001b[0m \u001b[0mobject\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    508\u001b[0m             raise ValueError(\"Pandas data cast to numpy dtype of object. \"\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\numpy\\core\\_asarray.py\u001b[0m in \u001b[0;36masarray\u001b[1;34m(a, dtype, order)\u001b[0m\n\u001b[0;32m     81\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     82\u001b[0m     \"\"\"\n\u001b[1;32m---> 83\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0marray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ma\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mFalse\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0morder\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0morder\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     84\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     85\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m__array__\u001b[1;34m(self, dtype)\u001b[0m\n\u001b[0;32m   1991\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1992\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__array__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mNpDtype\u001b[0m \u001b[1;33m|\u001b[0m \u001b[1;32mNone\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1993\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1994\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1995\u001b[0m     def __array_wrap__(\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m_values\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    892\u001b[0m         \u001b[0mblocks\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmgr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mblocks\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    893\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mblocks\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m!=\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 894\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    895\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    896\u001b[0m         \u001b[0marr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mblocks\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36mvalues\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m  10663\u001b[0m         \"\"\"\n\u001b[0;32m  10664\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_consolidate_inplace\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m> 10665\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mas_array\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtranspose\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m  10666\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m  10667\u001b[0m     \u001b[1;33m@\u001b[0m\u001b[0mdeprecate_nonkeyword_arguments\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mversion\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mallowed_args\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"self\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\pandas\\core\\internals\\managers.py\u001b[0m in \u001b[0;36mas_array\u001b[1;34m(self, transpose, dtype, copy, na_value)\u001b[0m\n\u001b[0;32m   1464\u001b[0m                     \u001b[0marr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0marr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mFalse\u001b[0m\u001b[1;33m)\u001b[0m  \u001b[1;31m# type: ignore[arg-type]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1465\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1466\u001b[1;33m             \u001b[0marr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_interleave\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1467\u001b[0m             \u001b[1;31m# The underlying data was copied within _interleave\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1468\u001b[0m             \u001b[0mcopy\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mFalse\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mY:\\Logiciels\\Python\\environnements\\datascience\\conda_datascience_py37_20211007\\lib\\site-packages\\pandas\\core\\internals\\managers.py\u001b[0m in \u001b[0;36m_interleave\u001b[1;34m(self, dtype, na_value)\u001b[0m\n\u001b[0;32m   1500\u001b[0m         \u001b[1;31m# Tuple[Any, Union[int, Sequence[int]]], List[Any], _DTypeDict,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1501\u001b[0m         \u001b[1;31m# Tuple[Any, Any]]]\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1502\u001b[1;33m         \u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mempty\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m  \u001b[1;31m# type: ignore[arg-type]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1503\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1504\u001b[0m         \u001b[0mitemmask\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mzeros\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mMemoryError\u001b[0m: Unable to allocate 31.2 GiB for an array with shape (3762, 1114668) and data type float64"
     ]
    }
   ],
   "source": [
    "X = mx_train\n",
    "Y = mylog_train\n",
    "\n",
    "mbmodel = sm.OLS(Y, X).fit()\n",
    "predictions = mbmodel.predict(X)\n",
    "\n",
    "mbmodel.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "mbperf = perfestim(df=mtest, model=mbmodel, predvar=predicted)\n",
    "print(mbperf[1])\n",
    "mbperf18 = perfestim(df=mtest18, model=mbmodel, predvar=predicted)\n",
    "mbperf18t1 = perfestim(df=mtest18.loc[mtest18.TRIM_1==1,], model=mbmodel, predvar=predicted)\n",
    "mbperf18t1r1 = perfestim(df=mtest18.loc[(mtest18.TRIM_1==1)&(mtest18.RGA_1==1),], model=mbmodel, predvar=predicted)\n",
    "print(mbperf18[1])\n",
    "print(mbperf18t1[1])\n",
    "print(mbperf18t1r1[1])\n",
    "df18 = mbperf18[0]\n",
    "plt.hexbin(df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),predicted], \n",
    "           df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "84"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(Mincerb)\n",
    "del(mbdata)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Mincer \"simple\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1531841, 32)\n",
      "replacing nan in...\n",
      "numerical column...\n",
      "NAIM\n",
      "NAIA\n",
      "ANNEE\n",
      "LHHC\n",
      "DATDIP\n",
      "NBTOT\n",
      "FORDAT\n",
      "AGE\n",
      "EXPE\n",
      "EXPEPOT\n",
      "SALMEERED\n",
      "categorical column...\n",
      "STATUT\n",
      "CSE\n",
      "DDIPL\n",
      "SEXE\n",
      "ACTEU\n",
      "RGA\n",
      "PRIM\n",
      "PRIMS\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "TPP\n",
      "OCCREF\n",
      "QPRC\n",
      "TPPRED\n",
      "SECT\n",
      "TRIM\n",
      "(1531841, 40)\n",
      "There were 40 columns before encoding categorical features\n",
      "OneHotEncoding column...\n",
      "STATUT\n",
      "CSE\n",
      "DDIPL\n",
      "SEXE\n",
      "ACTEU\n",
      "RGA\n",
      "PRIM\n",
      "PRIMS\n",
      "AUTSAL\n",
      "TYPSAL\n",
      "AM2NB\n",
      "CHPUB\n",
      "CONTRA\n",
      "FONCTC\n",
      "TITC\n",
      "TPP\n",
      "OCCREF\n",
      "QPRC\n",
      "TPPRED\n",
      "SECT\n",
      "TRIM\n",
      "There are 612 columns after encoding categorical features\n"
     ]
    }
   ],
   "source": [
    "# Mincer avec variables type SALRED\n",
    "mcdata = copy.deepcopy(datasave2.loc[:,Mincercolc])\n",
    "print(mcdata.shape)\n",
    "objl = [i for i in mcdata.columns if (i not in numl)]\n",
    "\n",
    "mcdata_nonan = replace_nans(mcdata, numl, objl)\n",
    "print(mcdata_nonan.shape)\n",
    "print('There were {} columns before encoding categorical features'.format(mcdata_nonan.shape[1]))\n",
    "Mincerc = oneHotEncode(mcdata_nonan, objl)\n",
    "print('There are {} columns after encoding categorical features'.format(Mincerc.shape[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(mcdata)\n",
    "del(mcdata_nonan)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincerc[['SALMET']] = datasave2.loc[:,['SALMET']]\n",
    "Mincerc[['CONSTANT']]=1\n",
    "Mincerc[['AGE2']]=Mincerc[['AGE']]*Mincerc[['AGE']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "mcdata= Mincerc.loc[Mincerc[\"SALMEERED_nan\"]==0,:].drop(columns=[\"SALMET\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [],
   "source": [
    "mtrain = mcdata.loc[(mcdata[\"NAIM\"]!=3)&(mcdata[\"ANNEE\"]<2018),:]\n",
    "my_train = mtrain.loc[:,\"SALMEERED\"].values\n",
    "mx_train = mtrain.drop(columns=[\"SALMEERED\"])\n",
    "mtest = mcdata.loc[(mcdata[\"NAIM\"]==3)|(mcdata[\"ANNEE\"]==2018),:]\n",
    "mtest18 = mcdata.loc[mcdata[\"ANNEE\"]==2018,:]\n",
    "mylog_train = np.log(my_train+1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>            <td>y</td>        <th>  R-squared:         </th>  <td>   0.621</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.621</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>   3135.</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 04 Oct 2022</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>18:39:12</td>     <th>  Log-Likelihood:    </th> <td>-5.9827e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>1114668</td>     <th>  AIC:               </th>  <td>1.198e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>1114084</td>     <th>  BIC:               </th>  <td>1.205e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>   583</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIM</th>           <td>   -0.0004</td> <td>    0.000</td> <td>   -3.058</td> <td> 0.002</td> <td>   -0.001</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIA</th>           <td>   -0.0074</td> <td>    0.000</td> <td>  -56.793</td> <td> 0.000</td> <td>   -0.008</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ANNEE</th>          <td>    0.0213</td> <td>    0.000</td> <td>  103.809</td> <td> 0.000</td> <td>    0.021</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC</th>           <td>    0.6095</td> <td>    0.002</td> <td>  304.887</td> <td> 0.000</td> <td>    0.606</td> <td>    0.613</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDIP</th>         <td>   -0.0024</td> <td>    0.000</td> <td>  -17.402</td> <td> 0.000</td> <td>   -0.003</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBTOT</th>          <td>    0.0029</td> <td>    0.000</td> <td>   10.107</td> <td> 0.000</td> <td>    0.002</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FORDAT</th>         <td>   -0.0066</td> <td>    0.001</td> <td>   -9.518</td> <td> 0.000</td> <td>   -0.008</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE</th>            <td>    0.0287</td> <td>    0.000</td> <td>  140.877</td> <td> 0.000</td> <td>    0.028</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPE</th>           <td>-3.511e-06</td> <td> 9.92e-07</td> <td>   -3.539</td> <td> 0.000</td> <td>-5.46e-06</td> <td>-1.57e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT</th>        <td>   -0.0094</td> <td>    0.001</td> <td>  -13.844</td> <td> 0.000</td> <td>   -0.011</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NAIM_nan</th>       <td>   -0.0396</td> <td>    0.020</td> <td>   -1.977</td> <td> 0.048</td> <td>   -0.079</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC_nan</th>       <td>    3.1938</td> <td>    0.017</td> <td>  185.831</td> <td> 0.000</td> <td>    3.160</td> <td>    3.227</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DATDIP_nan</th>     <td>   -0.0317</td> <td>    0.007</td> <td>   -4.515</td> <td> 0.000</td> <td>   -0.045</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>NBTOT_nan</th>      <td>    0.1510</td> <td>    0.012</td> <td>   12.878</td> <td> 0.000</td> <td>    0.128</td> <td>    0.174</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FORDAT_nan</th>     <td>   -0.3359</td> <td>    0.025</td> <td>  -13.517</td> <td> 0.000</td> <td>   -0.385</td> <td>   -0.287</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPE_nan</th>       <td>   -0.0089</td> <td>    0.005</td> <td>   -1.672</td> <td> 0.094</td> <td>   -0.019</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT_nan</th>    <td>   -0.3359</td> <td>    0.025</td> <td>  -13.517</td> <td> 0.000</td> <td>   -0.385</td> <td>   -0.287</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SALMEERED_nan</th>  <td> 1.174e-13</td> <td> 2.54e-14</td> <td>    4.614</td> <td> 0.000</td> <td> 6.76e-14</td> <td> 1.67e-13</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_11</th>      <td>    0.0202</td> <td>    0.027</td> <td>    0.755</td> <td> 0.450</td> <td>   -0.032</td> <td>    0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_12</th>      <td>    0.2609</td> <td>    0.027</td> <td>    9.810</td> <td> 0.000</td> <td>    0.209</td> <td>    0.313</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_13</th>      <td>   -0.2641</td> <td>    0.061</td> <td>   -4.337</td> <td> 0.000</td> <td>   -0.383</td> <td>   -0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_21</th>      <td>    0.0186</td> <td>    0.024</td> <td>    0.770</td> <td> 0.442</td> <td>   -0.029</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_22</th>      <td>   -0.3906</td> <td>    0.024</td> <td>  -16.190</td> <td> 0.000</td> <td>   -0.438</td> <td>   -0.343</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_33</th>      <td>   -0.0878</td> <td>    0.024</td> <td>   -3.669</td> <td> 0.000</td> <td>   -0.135</td> <td>   -0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_34</th>      <td>   -0.3310</td> <td>    0.024</td> <td>  -13.788</td> <td> 0.000</td> <td>   -0.378</td> <td>   -0.284</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_35</th>      <td>    0.0306</td> <td>    0.024</td> <td>    1.281</td> <td> 0.200</td> <td>   -0.016</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_41</th>      <td>    0.1162</td> <td>    0.024</td> <td>    4.860</td> <td> 0.000</td> <td>    0.069</td> <td>    0.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_42</th>      <td>   -0.5769</td> <td>    0.032</td> <td>  -18.080</td> <td> 0.000</td> <td>   -0.639</td> <td>   -0.514</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_43</th>      <td>   -0.1171</td> <td>    0.024</td> <td>   -4.863</td> <td> 0.000</td> <td>   -0.164</td> <td>   -0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_44</th>      <td>   -0.1049</td> <td>    0.025</td> <td>   -4.249</td> <td> 0.000</td> <td>   -0.153</td> <td>   -0.056</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_45</th>      <td>    0.0681</td> <td>    0.024</td> <td>    2.850</td> <td> 0.004</td> <td>    0.021</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>STATUT_new_nan</th> <td>    0.2172</td> <td>    0.199</td> <td>    1.093</td> <td> 0.274</td> <td>   -0.172</td> <td>    0.607</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_00</th>         <td>    0.0564</td> <td>    0.026</td> <td>    2.156</td> <td> 0.031</td> <td>    0.005</td> <td>    0.108</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_11</th>         <td>   -0.2609</td> <td>    0.041</td> <td>   -6.424</td> <td> 0.000</td> <td>   -0.341</td> <td>   -0.181</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_12</th>         <td>   -0.2548</td> <td>    0.042</td> <td>   -6.052</td> <td> 0.000</td> <td>   -0.337</td> <td>   -0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_13</th>         <td>   -0.2757</td> <td>    0.039</td> <td>   -7.120</td> <td> 0.000</td> <td>   -0.352</td> <td>   -0.200</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_21</th>         <td>   -0.0782</td> <td>    0.018</td> <td>   -4.331</td> <td> 0.000</td> <td>   -0.114</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_22</th>         <td>   -0.0144</td> <td>    0.017</td> <td>   -0.846</td> <td> 0.398</td> <td>   -0.048</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_23</th>         <td>    0.4724</td> <td>    0.018</td> <td>   26.226</td> <td> 0.000</td> <td>    0.437</td> <td>    0.508</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_31</th>         <td>    0.2180</td> <td>    0.012</td> <td>   17.874</td> <td> 0.000</td> <td>    0.194</td> <td>    0.242</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_33</th>         <td>    0.3413</td> <td>    0.010</td> <td>   34.405</td> <td> 0.000</td> <td>    0.322</td> <td>    0.361</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_34</th>         <td>    0.2952</td> <td>    0.010</td> <td>   30.131</td> <td> 0.000</td> <td>    0.276</td> <td>    0.314</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_35</th>         <td>    0.1011</td> <td>    0.011</td> <td>    9.555</td> <td> 0.000</td> <td>    0.080</td> <td>    0.122</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_37</th>         <td>    0.4237</td> <td>    0.010</td> <td>   43.915</td> <td> 0.000</td> <td>    0.405</td> <td>    0.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_38</th>         <td>    0.3779</td> <td>    0.010</td> <td>   39.032</td> <td> 0.000</td> <td>    0.359</td> <td>    0.397</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_42</th>         <td>    0.0733</td> <td>    0.010</td> <td>    7.534</td> <td> 0.000</td> <td>    0.054</td> <td>    0.092</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_43</th>         <td>    0.0716</td> <td>    0.010</td> <td>    7.425</td> <td> 0.000</td> <td>    0.053</td> <td>    0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_44</th>         <td>   -0.4823</td> <td>    0.019</td> <td>  -25.657</td> <td> 0.000</td> <td>   -0.519</td> <td>   -0.445</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_45</th>         <td>    0.0849</td> <td>    0.010</td> <td>    8.602</td> <td> 0.000</td> <td>    0.066</td> <td>    0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_46</th>         <td>    0.0553</td> <td>    0.010</td> <td>    5.779</td> <td> 0.000</td> <td>    0.037</td> <td>    0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_47</th>         <td>    0.0313</td> <td>    0.010</td> <td>    3.239</td> <td> 0.001</td> <td>    0.012</td> <td>    0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_48</th>         <td>    0.0855</td> <td>    0.010</td> <td>    8.740</td> <td> 0.000</td> <td>    0.066</td> <td>    0.105</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_52</th>         <td>   -0.1280</td> <td>    0.010</td> <td>  -13.396</td> <td> 0.000</td> <td>   -0.147</td> <td>   -0.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_53</th>         <td>   -0.0563</td> <td>    0.010</td> <td>   -5.653</td> <td> 0.000</td> <td>   -0.076</td> <td>   -0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_54</th>         <td>   -0.0950</td> <td>    0.010</td> <td>   -9.933</td> <td> 0.000</td> <td>   -0.114</td> <td>   -0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_55</th>         <td>   -0.1878</td> <td>    0.010</td> <td>  -19.366</td> <td> 0.000</td> <td>   -0.207</td> <td>   -0.169</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_56</th>         <td>   -0.3497</td> <td>    0.010</td> <td>  -36.336</td> <td> 0.000</td> <td>   -0.369</td> <td>   -0.331</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_62</th>         <td>   -0.1079</td> <td>    0.010</td> <td>  -11.225</td> <td> 0.000</td> <td>   -0.127</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_63</th>         <td>   -0.1324</td> <td>    0.010</td> <td>  -13.805</td> <td> 0.000</td> <td>   -0.151</td> <td>   -0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_64</th>         <td>   -0.1717</td> <td>    0.010</td> <td>  -17.497</td> <td> 0.000</td> <td>   -0.191</td> <td>   -0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_65</th>         <td>   -0.1343</td> <td>    0.010</td> <td>  -13.633</td> <td> 0.000</td> <td>   -0.154</td> <td>   -0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_67</th>         <td>   -0.2040</td> <td>    0.010</td> <td>  -21.143</td> <td> 0.000</td> <td>   -0.223</td> <td>   -0.185</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_68</th>         <td>   -0.3399</td> <td>    0.010</td> <td>  -34.954</td> <td> 0.000</td> <td>   -0.359</td> <td>   -0.321</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_69</th>         <td>   -0.1953</td> <td>    0.011</td> <td>  -18.411</td> <td> 0.000</td> <td>   -0.216</td> <td>   -0.174</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_83</th>         <td>   -0.5769</td> <td>    0.032</td> <td>  -18.080</td> <td> 0.000</td> <td>   -0.639</td> <td>   -0.514</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CSE_new_nan</th>    <td>    0.2172</td> <td>    0.199</td> <td>    1.093</td> <td> 0.274</td> <td>   -0.172</td> <td>    0.607</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_1</th>        <td>   -0.0281</td> <td>    0.033</td> <td>   -0.849</td> <td> 0.396</td> <td>   -0.093</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_3</th>        <td>   -0.0896</td> <td>    0.033</td> <td>   -2.711</td> <td> 0.007</td> <td>   -0.154</td> <td>   -0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_4</th>        <td>   -0.1499</td> <td>    0.033</td> <td>   -4.534</td> <td> 0.000</td> <td>   -0.215</td> <td>   -0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_5</th>        <td>   -0.1912</td> <td>    0.033</td> <td>   -5.789</td> <td> 0.000</td> <td>   -0.256</td> <td>   -0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_6</th>        <td>   -0.1986</td> <td>    0.033</td> <td>   -6.010</td> <td> 0.000</td> <td>   -0.263</td> <td>   -0.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_7</th>        <td>   -0.2989</td> <td>    0.033</td> <td>   -9.049</td> <td> 0.000</td> <td>   -0.364</td> <td>   -0.234</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_new_nan</th>  <td>   -0.1842</td> <td>    0.038</td> <td>   -4.899</td> <td> 0.000</td> <td>   -0.258</td> <td>   -0.111</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SEXE_1</th>         <td>   -0.4952</td> <td>    0.115</td> <td>   -4.302</td> <td> 0.000</td> <td>   -0.721</td> <td>   -0.270</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SEXE_2</th>         <td>   -0.6453</td> <td>    0.115</td> <td>   -5.605</td> <td> 0.000</td> <td>   -0.871</td> <td>   -0.420</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_1</th>        <td>   -0.2899</td> <td>    0.077</td> <td>   -3.774</td> <td> 0.000</td> <td>   -0.441</td> <td>   -0.139</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_2</th>        <td>   -0.4307</td> <td>    0.077</td> <td>   -5.591</td> <td> 0.000</td> <td>   -0.582</td> <td>   -0.280</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ACTEU_3</th>        <td>   -0.4198</td> <td>    0.077</td> <td>   -5.461</td> <td> 0.000</td> <td>   -0.571</td> <td>   -0.269</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_1</th>          <td>   -0.6631</td> <td>    0.032</td> <td>  -20.745</td> <td> 0.000</td> <td>   -0.726</td> <td>   -0.600</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_2</th>          <td>   -0.6543</td> <td>    0.032</td> <td>  -20.404</td> <td> 0.000</td> <td>   -0.717</td> <td>   -0.591</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_3</th>          <td>   -0.6557</td> <td>    0.032</td> <td>  -20.370</td> <td> 0.000</td> <td>   -0.719</td> <td>   -0.593</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_4</th>          <td>   -0.6557</td> <td>    0.032</td> <td>  -20.329</td> <td> 0.000</td> <td>   -0.719</td> <td>   -0.593</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_5</th>          <td>   -0.6455</td> <td>    0.032</td> <td>  -19.981</td> <td> 0.000</td> <td>   -0.709</td> <td>   -0.582</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_6</th>          <td>   -0.6623</td> <td>    0.032</td> <td>  -20.711</td> <td> 0.000</td> <td>   -0.725</td> <td>   -0.600</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>RGA_new_nan</th>    <td>    2.7960</td> <td>    0.046</td> <td>   60.663</td> <td> 0.000</td> <td>    2.706</td> <td>    2.886</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_1</th>         <td>    1.4497</td> <td>    0.058</td> <td>   25.110</td> <td> 0.000</td> <td>    1.337</td> <td>    1.563</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_2</th>         <td>    1.3629</td> <td>    0.058</td> <td>   23.606</td> <td> 0.000</td> <td>    1.250</td> <td>    1.476</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_9</th>         <td>    1.3978</td> <td>    0.058</td> <td>   24.005</td> <td> 0.000</td> <td>    1.284</td> <td>    1.512</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIM_new_nan</th>   <td>   -5.3510</td> <td>    0.059</td> <td>  -91.064</td> <td> 0.000</td> <td>   -5.466</td> <td>   -5.236</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_1</th>        <td>   -0.2015</td> <td>    0.058</td> <td>   -3.495</td> <td> 0.000</td> <td>   -0.315</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_2</th>        <td>   -0.2417</td> <td>    0.058</td> <td>   -4.191</td> <td> 0.000</td> <td>   -0.355</td> <td>   -0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_9</th>        <td>   -0.2580</td> <td>    0.058</td> <td>   -4.444</td> <td> 0.000</td> <td>   -0.372</td> <td>   -0.144</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRIMS_new_nan</th>  <td>   -0.4393</td> <td>    0.059</td> <td>   -7.461</td> <td> 0.000</td> <td>   -0.555</td> <td>   -0.324</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_1</th>       <td>   -0.3852</td> <td>    0.078</td> <td>   -4.966</td> <td> 0.000</td> <td>   -0.537</td> <td>   -0.233</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_2</th>       <td>   -0.3791</td> <td>    0.077</td> <td>   -4.923</td> <td> 0.000</td> <td>   -0.530</td> <td>   -0.228</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AUTSAL_new_nan</th> <td>   -0.3762</td> <td>    0.077</td> <td>   -4.887</td> <td> 0.000</td> <td>   -0.527</td> <td>   -0.225</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_1</th>       <td>   -0.4133</td> <td>    0.077</td> <td>   -5.378</td> <td> 0.000</td> <td>   -0.564</td> <td>   -0.263</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_2</th>       <td>   -0.4925</td> <td>    0.077</td> <td>   -6.409</td> <td> 0.000</td> <td>   -0.643</td> <td>   -0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TYPSAL_new_nan</th> <td>   -0.2347</td> <td>    0.077</td> <td>   -3.035</td> <td> 0.002</td> <td>   -0.386</td> <td>   -0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_1</th>        <td>   -0.2881</td> <td>    0.059</td> <td>   -4.911</td> <td> 0.000</td> <td>   -0.403</td> <td>   -0.173</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_2</th>        <td>   -0.3114</td> <td>    0.060</td> <td>   -5.173</td> <td> 0.000</td> <td>   -0.429</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_3</th>        <td>   -0.2673</td> <td>    0.065</td> <td>   -4.119</td> <td> 0.000</td> <td>   -0.395</td> <td>   -0.140</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AM2NB_new_nan</th>  <td>   -0.2737</td> <td>    0.059</td> <td>   -4.663</td> <td> 0.000</td> <td>   -0.389</td> <td>   -0.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_1</th>        <td>   -0.1079</td> <td>    0.032</td> <td>   -3.386</td> <td> 0.001</td> <td>   -0.170</td> <td>   -0.045</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_2</th>        <td>   -0.0156</td> <td>    0.032</td> <td>   -0.486</td> <td> 0.627</td> <td>   -0.079</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_3</th>        <td>   -0.1384</td> <td>    0.035</td> <td>   -3.983</td> <td> 0.000</td> <td>   -0.206</td> <td>   -0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_4</th>        <td>   -0.2035</td> <td>    0.035</td> <td>   -5.848</td> <td> 0.000</td> <td>   -0.272</td> <td>   -0.135</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_5</th>        <td>   -0.1934</td> <td>    0.035</td> <td>   -5.519</td> <td> 0.000</td> <td>   -0.262</td> <td>   -0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_6</th>        <td>   -0.0740</td> <td>    0.038</td> <td>   -1.925</td> <td> 0.054</td> <td>   -0.149</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_7</th>        <td>   -0.2204</td> <td>    0.035</td> <td>   -6.289</td> <td> 0.000</td> <td>   -0.289</td> <td>   -0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CHPUB_new_nan</th>  <td>   -0.1872</td> <td>    0.039</td> <td>   -4.768</td> <td> 0.000</td> <td>   -0.264</td> <td>   -0.110</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_0</th>       <td>   -0.3988</td> <td>    0.034</td> <td>  -11.861</td> <td> 0.000</td> <td>   -0.465</td> <td>   -0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_1</th>       <td>   -0.1830</td> <td>    0.033</td> <td>   -5.502</td> <td> 0.000</td> <td>   -0.248</td> <td>   -0.118</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_2</th>       <td>   -0.1202</td> <td>    0.033</td> <td>   -3.602</td> <td> 0.000</td> <td>   -0.186</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_3</th>       <td>    0.0303</td> <td>    0.035</td> <td>    0.872</td> <td> 0.383</td> <td>   -0.038</td> <td>    0.098</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_4</th>       <td>   -0.0681</td> <td>    0.039</td> <td>   -1.732</td> <td> 0.083</td> <td>   -0.145</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_5</th>       <td>   -0.0057</td> <td>    0.034</td> <td>   -0.167</td> <td> 0.867</td> <td>   -0.072</td> <td>    0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTRA_new_nan</th> <td>   -0.3950</td> <td>    0.034</td> <td>  -11.706</td> <td> 0.000</td> <td>   -0.461</td> <td>   -0.329</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_1</th>       <td>   -0.1184</td> <td>    0.021</td> <td>   -5.604</td> <td> 0.000</td> <td>   -0.160</td> <td>   -0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_10</th>      <td>   -0.1049</td> <td>    0.021</td> <td>   -4.959</td> <td> 0.000</td> <td>   -0.146</td> <td>   -0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_2</th>       <td>   -0.1309</td> <td>    0.021</td> <td>   -6.132</td> <td> 0.000</td> <td>   -0.173</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_3</th>       <td>   -0.1120</td> <td>    0.021</td> <td>   -5.244</td> <td> 0.000</td> <td>   -0.154</td> <td>   -0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_4</th>       <td>   -0.1321</td> <td>    0.022</td> <td>   -6.125</td> <td> 0.000</td> <td>   -0.174</td> <td>   -0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_5</th>       <td>   -0.0892</td> <td>    0.021</td> <td>   -4.204</td> <td> 0.000</td> <td>   -0.131</td> <td>   -0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_6</th>       <td>   -0.0767</td> <td>    0.021</td> <td>   -3.615</td> <td> 0.000</td> <td>   -0.118</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_7</th>       <td>   -0.0927</td> <td>    0.021</td> <td>   -4.364</td> <td> 0.000</td> <td>   -0.134</td> <td>   -0.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_8</th>       <td>   -0.1121</td> <td>    0.021</td> <td>   -5.277</td> <td> 0.000</td> <td>   -0.154</td> <td>   -0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_9</th>       <td>   -0.0673</td> <td>    0.021</td> <td>   -3.187</td> <td> 0.001</td> <td>   -0.109</td> <td>   -0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>FONCTC_new_nan</th> <td>   -0.1042</td> <td>    0.021</td> <td>   -4.892</td> <td> 0.000</td> <td>   -0.146</td> <td>   -0.062</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_1</th>         <td>   -0.1543</td> <td>    0.047</td> <td>   -3.253</td> <td> 0.001</td> <td>   -0.247</td> <td>   -0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_2</th>         <td>   -0.0205</td> <td>    0.047</td> <td>   -0.438</td> <td> 0.661</td> <td>   -0.112</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_3</th>         <td>   -0.3210</td> <td>    0.047</td> <td>   -6.817</td> <td> 0.000</td> <td>   -0.413</td> <td>   -0.229</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_4</th>         <td>   -0.2783</td> <td>    0.048</td> <td>   -5.773</td> <td> 0.000</td> <td>   -0.373</td> <td>   -0.184</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TITC_new_nan</th>   <td>   -0.3664</td> <td>    0.052</td> <td>   -7.054</td> <td> 0.000</td> <td>   -0.468</td> <td>   -0.265</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_1</th>          <td>   -0.2413</td> <td>    0.058</td> <td>   -4.126</td> <td> 0.000</td> <td>   -0.356</td> <td>   -0.127</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_2</th>          <td>   -0.1174</td> <td>    0.058</td> <td>   -2.014</td> <td> 0.044</td> <td>   -0.232</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_3</th>          <td>   -0.4647</td> <td>    0.058</td> <td>   -7.983</td> <td> 0.000</td> <td>   -0.579</td> <td>   -0.351</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPP_new_nan</th>    <td>   -0.3172</td> <td>    0.058</td> <td>   -5.442</td> <td> 0.000</td> <td>   -0.431</td> <td>   -0.203</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_1</th>       <td>   -0.4988</td> <td>    0.077</td> <td>   -6.452</td> <td> 0.000</td> <td>   -0.650</td> <td>   -0.347</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_2</th>       <td>   -0.4070</td> <td>    0.077</td> <td>   -5.295</td> <td> 0.000</td> <td>   -0.558</td> <td>   -0.256</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>OCCREF_new_nan</th> <td>   -0.2347</td> <td>    0.077</td> <td>   -3.035</td> <td> 0.002</td> <td>   -0.386</td> <td>   -0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_1</th>         <td>   -0.0719</td> <td>    0.023</td> <td>   -3.065</td> <td> 0.002</td> <td>   -0.118</td> <td>   -0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_2</th>         <td>   -0.1093</td> <td>    0.023</td> <td>   -4.686</td> <td> 0.000</td> <td>   -0.155</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_3</th>         <td>   -0.1581</td> <td>    0.023</td> <td>   -6.733</td> <td> 0.000</td> <td>   -0.204</td> <td>   -0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_4</th>         <td>   -0.1146</td> <td>    0.023</td> <td>   -4.914</td> <td> 0.000</td> <td>   -0.160</td> <td>   -0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_5</th>         <td>   -0.1239</td> <td>    0.023</td> <td>   -5.342</td> <td> 0.000</td> <td>   -0.169</td> <td>   -0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_6</th>         <td>   -0.1343</td> <td>    0.024</td> <td>   -5.708</td> <td> 0.000</td> <td>   -0.180</td> <td>   -0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_7</th>         <td>   -0.0349</td> <td>    0.027</td> <td>   -1.307</td> <td> 0.191</td> <td>   -0.087</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_8</th>         <td>   -0.1534</td> <td>    0.024</td> <td>   -6.500</td> <td> 0.000</td> <td>   -0.200</td> <td>   -0.107</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_9</th>         <td>   -0.1094</td> <td>    0.023</td> <td>   -4.693</td> <td> 0.000</td> <td>   -0.155</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>QPRC_new_nan</th>   <td>   -0.1307</td> <td>    0.028</td> <td>   -4.652</td> <td> 0.000</td> <td>   -0.186</td> <td>   -0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_1</th>       <td>   -0.3033</td> <td>    0.079</td> <td>   -3.823</td> <td> 0.000</td> <td>   -0.459</td> <td>   -0.148</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_2</th>       <td>   -0.5800</td> <td>    0.079</td> <td>   -7.319</td> <td> 0.000</td> <td>   -0.735</td> <td>   -0.425</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TPPRED_new_nan</th> <td>   -0.2572</td> <td>    0.085</td> <td>   -3.033</td> <td> 0.002</td> <td>   -0.423</td> <td>   -0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_000</th>       <td>   -0.0576</td> <td>    0.012</td> <td>   -4.936</td> <td> 0.000</td> <td>   -0.081</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_01</th>        <td>    0.0204</td> <td>    0.414</td> <td>    0.049</td> <td> 0.961</td> <td>   -0.790</td> <td>    0.831</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_010</th>       <td>   -0.0868</td> <td>    0.034</td> <td>   -2.543</td> <td> 0.011</td> <td>   -0.154</td> <td>   -0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_011</th>       <td>   -0.1322</td> <td>    0.009</td> <td>  -14.548</td> <td> 0.000</td> <td>   -0.150</td> <td>   -0.114</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_012</th>       <td>   -0.1126</td> <td>    0.012</td> <td>   -9.191</td> <td> 0.000</td> <td>   -0.137</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_013</th>       <td>   -0.1977</td> <td>    0.023</td> <td>   -8.480</td> <td> 0.000</td> <td>   -0.243</td> <td>   -0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_014</th>       <td>   -0.0933</td> <td>    0.010</td> <td>   -9.310</td> <td> 0.000</td> <td>   -0.113</td> <td>   -0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_015</th>       <td>   -0.2211</td> <td>    0.034</td> <td>   -6.507</td> <td> 0.000</td> <td>   -0.288</td> <td>   -0.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_016</th>       <td>   -0.0879</td> <td>    0.027</td> <td>   -3.274</td> <td> 0.001</td> <td>   -0.141</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_017</th>       <td>   -0.1018</td> <td>    0.292</td> <td>   -0.348</td> <td> 0.728</td> <td>   -0.674</td> <td>    0.471</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_019</th>       <td>   -0.1945</td> <td>    0.009</td> <td>  -22.378</td> <td> 0.000</td> <td>   -0.212</td> <td>   -0.177</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_020</th>       <td>   -0.0499</td> <td>    0.014</td> <td>   -3.552</td> <td> 0.000</td> <td>   -0.077</td> <td>   -0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_021</th>       <td>   -0.0480</td> <td>    0.103</td> <td>   -0.464</td> <td> 0.643</td> <td>   -0.251</td> <td>    0.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_022</th>       <td>   -0.1087</td> <td>    0.046</td> <td>   -2.360</td> <td> 0.018</td> <td>   -0.199</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_024</th>       <td>   -0.1049</td> <td>    0.032</td> <td>   -3.286</td> <td> 0.001</td> <td>   -0.167</td> <td>   -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_030</th>       <td>    0.2531</td> <td>    0.413</td> <td>    0.613</td> <td> 0.540</td> <td>   -0.557</td> <td>    1.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_031</th>       <td>    0.1255</td> <td>    0.065</td> <td>    1.917</td> <td> 0.055</td> <td>   -0.003</td> <td>    0.254</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_032</th>       <td>   -0.1046</td> <td>    0.068</td> <td>   -1.534</td> <td> 0.125</td> <td>   -0.238</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_050</th>       <td>    0.0476</td> <td>    0.019</td> <td>    2.485</td> <td> 0.013</td> <td>    0.010</td> <td>    0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_060</th>       <td>   -0.1137</td> <td>    0.292</td> <td>   -0.389</td> <td> 0.697</td> <td>   -0.686</td> <td>    0.459</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_061</th>       <td>    0.5166</td> <td>    0.115</td> <td>    4.506</td> <td> 0.000</td> <td>    0.292</td> <td>    0.741</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_070</th>       <td>    0.4360</td> <td>    0.292</td> <td>    1.493</td> <td> 0.136</td> <td>   -0.137</td> <td>    1.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_072</th>       <td>    0.5160</td> <td>    0.156</td> <td>    3.300</td> <td> 0.001</td> <td>    0.210</td> <td>    0.822</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_080</th>       <td>    0.2409</td> <td>    0.239</td> <td>    1.010</td> <td> 0.313</td> <td>   -0.227</td> <td>    0.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_081</th>       <td>   -0.0640</td> <td>    0.029</td> <td>   -2.239</td> <td> 0.025</td> <td>   -0.120</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_089</th>       <td>    0.0802</td> <td>    0.110</td> <td>    0.726</td> <td> 0.468</td> <td>   -0.136</td> <td>    0.297</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_090</th>       <td>   -0.2718</td> <td>    0.292</td> <td>   -0.930</td> <td> 0.352</td> <td>   -0.844</td> <td>    0.301</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_091</th>       <td>    0.6291</td> <td>    0.146</td> <td>    4.306</td> <td> 0.000</td> <td>    0.343</td> <td>    0.916</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_099</th>       <td>    0.3458</td> <td>    0.292</td> <td>    1.184</td> <td> 0.237</td> <td>   -0.227</td> <td>    0.918</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_10</th>        <td>   -0.1006</td> <td>    0.413</td> <td>   -0.244</td> <td> 0.808</td> <td>   -0.910</td> <td>    0.709</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_100</th>       <td>    0.0872</td> <td>    0.059</td> <td>    1.489</td> <td> 0.136</td> <td>   -0.028</td> <td>    0.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_101</th>       <td>   -0.0411</td> <td>    0.011</td> <td>   -3.774</td> <td> 0.000</td> <td>   -0.063</td> <td>   -0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_102</th>       <td>   -0.0905</td> <td>    0.039</td> <td>   -2.337</td> <td> 0.019</td> <td>   -0.166</td> <td>   -0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_103</th>       <td>   -0.0719</td> <td>    0.026</td> <td>   -2.749</td> <td> 0.006</td> <td>   -0.123</td> <td>   -0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_104</th>       <td>    0.1331</td> <td>    0.076</td> <td>    1.762</td> <td> 0.078</td> <td>   -0.015</td> <td>    0.281</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_105</th>       <td>   -0.0477</td> <td>    0.018</td> <td>   -2.656</td> <td> 0.008</td> <td>   -0.083</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_106</th>       <td>    0.0693</td> <td>    0.035</td> <td>    2.009</td> <td> 0.045</td> <td>    0.002</td> <td>    0.137</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_107</th>       <td>   -0.0636</td> <td>    0.010</td> <td>   -6.343</td> <td> 0.000</td> <td>   -0.083</td> <td>   -0.044</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_108</th>       <td>    0.0055</td> <td>    0.015</td> <td>    0.373</td> <td> 0.709</td> <td>   -0.024</td> <td>    0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_109</th>       <td>    0.0252</td> <td>    0.030</td> <td>    0.830</td> <td> 0.407</td> <td>   -0.034</td> <td>    0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_110</th>       <td>    0.0684</td> <td>    0.021</td> <td>    3.188</td> <td> 0.001</td> <td>    0.026</td> <td>    0.110</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_111</th>       <td>    0.4074</td> <td>    0.030</td> <td>   13.767</td> <td> 0.000</td> <td>    0.349</td> <td>    0.465</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_112</th>       <td>    0.0979</td> <td>    0.074</td> <td>    1.318</td> <td> 0.187</td> <td>   -0.048</td> <td>    0.244</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_120</th>       <td>    0.3331</td> <td>    0.076</td> <td>    4.411</td> <td> 0.000</td> <td>    0.185</td> <td>    0.481</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_130</th>       <td>    0.3536</td> <td>    0.100</td> <td>    3.527</td> <td> 0.000</td> <td>    0.157</td> <td>    0.550</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_131</th>       <td>   -0.0286</td> <td>    0.056</td> <td>   -0.512</td> <td> 0.609</td> <td>   -0.138</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_132</th>       <td>   -0.0220</td> <td>    0.050</td> <td>   -0.441</td> <td> 0.659</td> <td>   -0.120</td> <td>    0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_133</th>       <td>   -0.0709</td> <td>    0.077</td> <td>   -0.923</td> <td> 0.356</td> <td>   -0.221</td> <td>    0.080</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_139</th>       <td>   -0.0759</td> <td>    0.024</td> <td>   -3.205</td> <td> 0.001</td> <td>   -0.122</td> <td>   -0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_140</th>       <td>    0.0452</td> <td>    0.115</td> <td>    0.394</td> <td> 0.694</td> <td>   -0.180</td> <td>    0.270</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_141</th>       <td>   -0.0494</td> <td>    0.018</td> <td>   -2.748</td> <td> 0.006</td> <td>   -0.085</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_142</th>       <td>   -0.0055</td> <td>    0.018</td> <td>   -0.313</td> <td> 0.754</td> <td>   -0.040</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_143</th>       <td>   -0.3077</td> <td>    0.050</td> <td>   -6.215</td> <td> 0.000</td> <td>   -0.405</td> <td>   -0.211</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_144</th>       <td>    0.2418</td> <td>    0.042</td> <td>    5.773</td> <td> 0.000</td> <td>    0.160</td> <td>    0.324</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_145</th>       <td>    0.0515</td> <td>    0.090</td> <td>    0.571</td> <td> 0.568</td> <td>   -0.125</td> <td>    0.228</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_150</th>       <td>    0.0380</td> <td>    0.083</td> <td>    0.459</td> <td> 0.646</td> <td>   -0.124</td> <td>    0.200</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_151</th>       <td>   -0.0536</td> <td>    0.007</td> <td>   -7.842</td> <td> 0.000</td> <td>   -0.067</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_152</th>       <td>   -0.0323</td> <td>    0.017</td> <td>   -1.900</td> <td> 0.057</td> <td>   -0.066</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_153</th>       <td>   -0.0654</td> <td>    0.015</td> <td>   -4.367</td> <td> 0.000</td> <td>   -0.095</td> <td>   -0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_154</th>       <td>    0.0692</td> <td>    0.044</td> <td>    1.585</td> <td> 0.113</td> <td>   -0.016</td> <td>    0.155</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_155</th>       <td>   -0.0018</td> <td>    0.010</td> <td>   -0.193</td> <td> 0.847</td> <td>   -0.021</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_156</th>       <td>    0.0605</td> <td>    0.021</td> <td>    2.863</td> <td> 0.004</td> <td>    0.019</td> <td>    0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_157</th>       <td>    0.0182</td> <td>    0.016</td> <td>    1.123</td> <td> 0.262</td> <td>   -0.014</td> <td>    0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_158</th>       <td>   -0.0762</td> <td>    0.006</td> <td>  -12.704</td> <td> 0.000</td> <td>   -0.088</td> <td>   -0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_159</th>       <td>    0.0595</td> <td>    0.012</td> <td>    4.938</td> <td> 0.000</td> <td>    0.036</td> <td>    0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_160</th>       <td>    0.2784</td> <td>    0.036</td> <td>    7.762</td> <td> 0.000</td> <td>    0.208</td> <td>    0.349</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_161</th>       <td>   -0.1474</td> <td>    0.031</td> <td>   -4.776</td> <td> 0.000</td> <td>   -0.208</td> <td>   -0.087</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_162</th>       <td>   -0.0699</td> <td>    0.019</td> <td>   -3.689</td> <td> 0.000</td> <td>   -0.107</td> <td>   -0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_170</th>       <td>    0.0100</td> <td>    0.119</td> <td>    0.084</td> <td> 0.933</td> <td>   -0.224</td> <td>    0.244</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_171</th>       <td>   -0.0240</td> <td>    0.015</td> <td>   -1.584</td> <td> 0.113</td> <td>   -0.054</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_172</th>       <td>   -0.0320</td> <td>    0.013</td> <td>   -2.515</td> <td> 0.012</td> <td>   -0.057</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_173</th>       <td>   -0.0220</td> <td>    0.018</td> <td>   -1.221</td> <td> 0.222</td> <td>   -0.057</td> <td>    0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_174</th>       <td>   -0.0553</td> <td>    0.019</td> <td>   -2.923</td> <td> 0.003</td> <td>   -0.092</td> <td>   -0.018</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_175</th>       <td>   -0.0273</td> <td>    0.014</td> <td>   -1.909</td> <td> 0.056</td> <td>   -0.055</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_176</th>       <td>   -0.0513</td> <td>    0.042</td> <td>   -1.225</td> <td> 0.220</td> <td>   -0.133</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_177</th>       <td>   -0.0998</td> <td>    0.016</td> <td>   -6.304</td> <td> 0.000</td> <td>   -0.131</td> <td>   -0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_180</th>       <td>   -0.5919</td> <td>    0.083</td> <td>   -7.157</td> <td> 0.000</td> <td>   -0.754</td> <td>   -0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_181</th>       <td>   -0.0459</td> <td>    0.016</td> <td>   -2.797</td> <td> 0.005</td> <td>   -0.078</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_182</th>       <td>   -0.0747</td> <td>    0.008</td> <td>   -9.451</td> <td> 0.000</td> <td>   -0.090</td> <td>   -0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_183</th>       <td>   -0.0278</td> <td>    0.090</td> <td>   -0.308</td> <td> 0.758</td> <td>   -0.205</td> <td>    0.149</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_190</th>       <td>    0.2159</td> <td>    0.413</td> <td>    0.523</td> <td> 0.601</td> <td>   -0.594</td> <td>    1.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_191</th>       <td>   -0.0678</td> <td>    0.051</td> <td>   -1.340</td> <td> 0.180</td> <td>   -0.167</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_192</th>       <td>    0.0282</td> <td>    0.016</td> <td>    1.721</td> <td> 0.085</td> <td>   -0.004</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_193</th>       <td>   -0.0603</td> <td>    0.014</td> <td>   -4.178</td> <td> 0.000</td> <td>   -0.089</td> <td>   -0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_200</th>       <td>    0.0502</td> <td>    0.078</td> <td>    0.642</td> <td> 0.521</td> <td>   -0.103</td> <td>    0.203</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_201</th>       <td>    0.0059</td> <td>    0.011</td> <td>    0.531</td> <td> 0.595</td> <td>   -0.016</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_202</th>       <td>    0.0347</td> <td>    0.021</td> <td>    1.626</td> <td> 0.104</td> <td>   -0.007</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_203</th>       <td>   -0.0588</td> <td>    0.012</td> <td>   -4.785</td> <td> 0.000</td> <td>   -0.083</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_204</th>       <td>    0.0142</td> <td>    0.013</td> <td>    1.096</td> <td> 0.273</td> <td>   -0.011</td> <td>    0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_205</th>       <td>   -0.0341</td> <td>    0.016</td> <td>   -2.120</td> <td> 0.034</td> <td>   -0.066</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_206</th>       <td>   -0.0906</td> <td>    0.125</td> <td>   -0.727</td> <td> 0.467</td> <td>   -0.335</td> <td>    0.154</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_210</th>       <td>    0.2946</td> <td>    0.084</td> <td>    3.491</td> <td> 0.000</td> <td>    0.129</td> <td>    0.460</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_211</th>       <td>    0.1813</td> <td>    0.013</td> <td>   13.980</td> <td> 0.000</td> <td>    0.156</td> <td>    0.207</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_212</th>       <td>    0.0612</td> <td>    0.008</td> <td>    7.371</td> <td> 0.000</td> <td>    0.045</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_220</th>       <td>    0.1623</td> <td>    0.070</td> <td>    2.320</td> <td> 0.020</td> <td>    0.025</td> <td>    0.299</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_221</th>       <td>    0.0515</td> <td>    0.009</td> <td>    6.028</td> <td> 0.000</td> <td>    0.035</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_222</th>       <td>    0.0262</td> <td>    0.007</td> <td>    3.889</td> <td> 0.000</td> <td>    0.013</td> <td>    0.039</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_223</th>       <td>   -0.0007</td> <td>    0.041</td> <td>   -0.017</td> <td> 0.987</td> <td>   -0.082</td> <td>    0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_230</th>       <td>    0.0571</td> <td>    0.100</td> <td>    0.569</td> <td> 0.569</td> <td>   -0.139</td> <td>    0.254</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_231</th>       <td>    0.0271</td> <td>    0.023</td> <td>    1.201</td> <td> 0.230</td> <td>   -0.017</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_232</th>       <td>    0.2388</td> <td>    0.020</td> <td>   11.907</td> <td> 0.000</td> <td>    0.199</td> <td>    0.278</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_233</th>       <td>    0.1260</td> <td>    0.020</td> <td>    6.341</td> <td> 0.000</td> <td>    0.087</td> <td>    0.165</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_234</th>       <td>   -0.1380</td> <td>    0.051</td> <td>   -2.707</td> <td> 0.007</td> <td>   -0.238</td> <td>   -0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_235</th>       <td>    0.1252</td> <td>    0.049</td> <td>    2.546</td> <td> 0.011</td> <td>    0.029</td> <td>    0.222</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_236</th>       <td>   -0.0524</td> <td>    0.023</td> <td>   -2.288</td> <td> 0.022</td> <td>   -0.097</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_237</th>       <td>   -0.0832</td> <td>    0.039</td> <td>   -2.155</td> <td> 0.031</td> <td>   -0.159</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_239</th>       <td>    0.0313</td> <td>    0.048</td> <td>    0.655</td> <td> 0.513</td> <td>   -0.062</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_240</th>       <td>    0.2645</td> <td>    0.060</td> <td>    4.381</td> <td> 0.000</td> <td>    0.146</td> <td>    0.383</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_241</th>       <td>    0.1451</td> <td>    0.009</td> <td>   16.541</td> <td> 0.000</td> <td>    0.128</td> <td>    0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_242</th>       <td>    0.0293</td> <td>    0.025</td> <td>    1.154</td> <td> 0.248</td> <td>   -0.020</td> <td>    0.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_243</th>       <td>    0.0331</td> <td>    0.017</td> <td>    1.959</td> <td> 0.050</td> <td>-2.18e-05</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_244</th>       <td>    0.1757</td> <td>    0.008</td> <td>   21.683</td> <td> 0.000</td> <td>    0.160</td> <td>    0.192</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_245</th>       <td>    0.0845</td> <td>    0.010</td> <td>    8.577</td> <td> 0.000</td> <td>    0.065</td> <td>    0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_246</th>       <td>    0.0862</td> <td>    0.013</td> <td>    6.617</td> <td> 0.000</td> <td>    0.061</td> <td>    0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_247</th>       <td>    0.1012</td> <td>    0.054</td> <td>    1.862</td> <td> 0.063</td> <td>   -0.005</td> <td>    0.208</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_250</th>       <td>    0.1160</td> <td>    0.067</td> <td>    1.729</td> <td> 0.084</td> <td>   -0.016</td> <td>    0.248</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_251</th>       <td>    0.0343</td> <td>    0.008</td> <td>    4.205</td> <td> 0.000</td> <td>    0.018</td> <td>    0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_252</th>       <td>    0.0131</td> <td>    0.007</td> <td>    1.943</td> <td> 0.052</td> <td>   -0.000</td> <td>    0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_253</th>       <td>    0.0416</td> <td>    0.077</td> <td>    0.542</td> <td> 0.588</td> <td>   -0.109</td> <td>    0.192</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_254</th>       <td>    0.1216</td> <td>    0.059</td> <td>    2.077</td> <td> 0.038</td> <td>    0.007</td> <td>    0.236</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_255</th>       <td>   -0.0695</td> <td>    0.020</td> <td>   -3.486</td> <td> 0.000</td> <td>   -0.109</td> <td>   -0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_256</th>       <td>   -0.0474</td> <td>    0.013</td> <td>   -3.512</td> <td> 0.000</td> <td>   -0.074</td> <td>   -0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_257</th>       <td>   -0.0423</td> <td>    0.024</td> <td>   -1.784</td> <td> 0.074</td> <td>   -0.089</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_259</th>       <td>   -0.0367</td> <td>    0.020</td> <td>   -1.850</td> <td> 0.064</td> <td>   -0.076</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_260</th>       <td>    0.1660</td> <td>    0.107</td> <td>    1.556</td> <td> 0.120</td> <td>   -0.043</td> <td>    0.375</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_261</th>       <td>    0.0469</td> <td>    0.010</td> <td>    4.920</td> <td> 0.000</td> <td>    0.028</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_262</th>       <td>   -0.0168</td> <td>    0.014</td> <td>   -1.187</td> <td> 0.235</td> <td>   -0.045</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_263</th>       <td>   -0.0077</td> <td>    0.026</td> <td>   -0.303</td> <td> 0.762</td> <td>   -0.058</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_264</th>       <td>   -0.0534</td> <td>    0.028</td> <td>   -1.877</td> <td> 0.061</td> <td>   -0.109</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_265</th>       <td>    0.1928</td> <td>    0.014</td> <td>   13.915</td> <td> 0.000</td> <td>    0.166</td> <td>    0.220</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_266</th>       <td>    0.0084</td> <td>    0.013</td> <td>    0.660</td> <td> 0.509</td> <td>   -0.017</td> <td>    0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_267</th>       <td>   -0.0468</td> <td>    0.020</td> <td>   -2.350</td> <td> 0.019</td> <td>   -0.086</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_268</th>       <td>    0.0594</td> <td>    0.021</td> <td>    2.831</td> <td> 0.005</td> <td>    0.018</td> <td>    0.101</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_270</th>       <td>    0.0651</td> <td>    0.055</td> <td>    1.176</td> <td> 0.239</td> <td>   -0.043</td> <td>    0.174</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_271</th>       <td>    0.0825</td> <td>    0.010</td> <td>    8.194</td> <td> 0.000</td> <td>    0.063</td> <td>    0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_272</th>       <td>   -0.0045</td> <td>    0.020</td> <td>   -0.230</td> <td> 0.818</td> <td>   -0.043</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_273</th>       <td>    0.0274</td> <td>    0.017</td> <td>    1.616</td> <td> 0.106</td> <td>   -0.006</td> <td>    0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_274</th>       <td>    0.0704</td> <td>    0.013</td> <td>    5.238</td> <td> 0.000</td> <td>    0.044</td> <td>    0.097</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_275</th>       <td>    0.0249</td> <td>    0.011</td> <td>    2.293</td> <td> 0.022</td> <td>    0.004</td> <td>    0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_279</th>       <td>   -0.0420</td> <td>    0.038</td> <td>   -1.099</td> <td> 0.272</td> <td>   -0.117</td> <td>    0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_280</th>       <td>    0.1421</td> <td>    0.080</td> <td>    1.785</td> <td> 0.074</td> <td>   -0.014</td> <td>    0.298</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_281</th>       <td>   -0.0020</td> <td>    0.009</td> <td>   -0.215</td> <td> 0.830</td> <td>   -0.020</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_282</th>       <td>   -0.0200</td> <td>    0.013</td> <td>   -1.582</td> <td> 0.114</td> <td>   -0.045</td> <td>    0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_283</th>       <td>    0.0210</td> <td>    0.009</td> <td>    2.390</td> <td> 0.017</td> <td>    0.004</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_284</th>       <td>    0.0253</td> <td>    0.011</td> <td>    2.392</td> <td> 0.017</td> <td>    0.005</td> <td>    0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_285</th>       <td>    0.0240</td> <td>    0.007</td> <td>    3.460</td> <td> 0.001</td> <td>    0.010</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_286</th>       <td>    0.0257</td> <td>    0.012</td> <td>    2.104</td> <td> 0.035</td> <td>    0.002</td> <td>    0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_287</th>       <td>   -0.0056</td> <td>    0.009</td> <td>   -0.597</td> <td> 0.551</td> <td>   -0.024</td> <td>    0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_289</th>       <td>   -0.0076</td> <td>    0.021</td> <td>   -0.355</td> <td> 0.723</td> <td>   -0.049</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_290</th>       <td>    0.0736</td> <td>    0.069</td> <td>    1.068</td> <td> 0.285</td> <td>   -0.061</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_291</th>       <td>    0.0539</td> <td>    0.008</td> <td>    6.785</td> <td> 0.000</td> <td>    0.038</td> <td>    0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_292</th>       <td>    0.0122</td> <td>    0.008</td> <td>    1.533</td> <td> 0.125</td> <td>   -0.003</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_293</th>       <td>   -0.0357</td> <td>    0.010</td> <td>   -3.484</td> <td> 0.000</td> <td>   -0.056</td> <td>   -0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_294</th>       <td>    0.0430</td> <td>    0.019</td> <td>    2.312</td> <td> 0.021</td> <td>    0.007</td> <td>    0.079</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_295</th>       <td>    0.0537</td> <td>    0.010</td> <td>    5.469</td> <td> 0.000</td> <td>    0.034</td> <td>    0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_296</th>       <td>    0.1581</td> <td>    0.020</td> <td>    7.795</td> <td> 0.000</td> <td>    0.118</td> <td>    0.198</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_297</th>       <td>    0.0017</td> <td>    0.014</td> <td>    0.118</td> <td> 0.906</td> <td>   -0.026</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_300</th>       <td>    0.1308</td> <td>    0.013</td> <td>    9.928</td> <td> 0.000</td> <td>    0.105</td> <td>    0.157</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_301</th>       <td>   -0.0471</td> <td>    0.028</td> <td>   -1.693</td> <td> 0.090</td> <td>   -0.102</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_302</th>       <td>    0.0430</td> <td>    0.036</td> <td>    1.199</td> <td> 0.231</td> <td>   -0.027</td> <td>    0.113</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_303</th>       <td>    0.1267</td> <td>    0.013</td> <td>    9.632</td> <td> 0.000</td> <td>    0.101</td> <td>    0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_304</th>       <td>   -0.0120</td> <td>    0.110</td> <td>   -0.109</td> <td> 0.913</td> <td>   -0.229</td> <td>    0.205</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_309</th>       <td>   -0.0495</td> <td>    0.060</td> <td>   -0.819</td> <td> 0.413</td> <td>   -0.168</td> <td>    0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_310</th>       <td>   -0.1167</td> <td>    0.020</td> <td>   -5.904</td> <td> 0.000</td> <td>   -0.155</td> <td>   -0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_311</th>       <td>    0.0113</td> <td>    0.013</td> <td>    0.846</td> <td> 0.398</td> <td>   -0.015</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_312</th>       <td>    0.0587</td> <td>    0.010</td> <td>    6.065</td> <td> 0.000</td> <td>    0.040</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_313</th>       <td>    0.0539</td> <td>    0.016</td> <td>    3.444</td> <td> 0.001</td> <td>    0.023</td> <td>    0.085</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_314</th>       <td>    0.0771</td> <td>    0.028</td> <td>    2.726</td> <td> 0.006</td> <td>    0.022</td> <td>    0.133</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_315</th>       <td>    0.0150</td> <td>    0.019</td> <td>    0.803</td> <td> 0.422</td> <td>   -0.022</td> <td>    0.052</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_316</th>       <td>    0.0444</td> <td>    0.013</td> <td>    3.324</td> <td> 0.001</td> <td>    0.018</td> <td>    0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_320</th>       <td>    0.6160</td> <td>    0.207</td> <td>    2.982</td> <td> 0.003</td> <td>    0.211</td> <td>    1.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_321</th>       <td>    0.0503</td> <td>    0.010</td> <td>    4.959</td> <td> 0.000</td> <td>    0.030</td> <td>    0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_322</th>       <td>    0.0572</td> <td>    0.011</td> <td>    5.415</td> <td> 0.000</td> <td>    0.036</td> <td>    0.078</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_323</th>       <td>    0.0371</td> <td>    0.019</td> <td>    1.962</td> <td> 0.050</td> <td> 4.04e-05</td> <td>    0.074</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_324</th>       <td>   -0.0756</td> <td>    0.092</td> <td>   -0.818</td> <td> 0.414</td> <td>   -0.257</td> <td>    0.106</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_325</th>       <td>   -0.0104</td> <td>    0.020</td> <td>   -0.532</td> <td> 0.595</td> <td>   -0.049</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_329</th>       <td>   -0.0260</td> <td>    0.039</td> <td>   -0.667</td> <td> 0.505</td> <td>   -0.103</td> <td>    0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_330</th>       <td>    0.1400</td> <td>    0.092</td> <td>    1.514</td> <td> 0.130</td> <td>   -0.041</td> <td>    0.321</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_331</th>       <td>   -0.0184</td> <td>    0.010</td> <td>   -1.794</td> <td> 0.073</td> <td>   -0.039</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_332</th>       <td>    0.0313</td> <td>    0.009</td> <td>    3.482</td> <td> 0.000</td> <td>    0.014</td> <td>    0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_333</th>       <td>   -0.0092</td> <td>    0.017</td> <td>   -0.530</td> <td> 0.596</td> <td>   -0.043</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_334</th>       <td>    0.0582</td> <td>    0.018</td> <td>    3.241</td> <td> 0.001</td> <td>    0.023</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_335</th>       <td>    0.3177</td> <td>    0.019</td> <td>   16.783</td> <td> 0.000</td> <td>    0.281</td> <td>    0.355</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_340</th>       <td>   -0.1079</td> <td>    0.169</td> <td>   -0.640</td> <td> 0.522</td> <td>   -0.439</td> <td>    0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_341</th>       <td>    0.0928</td> <td>    0.006</td> <td>   14.344</td> <td> 0.000</td> <td>    0.080</td> <td>    0.105</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_342</th>       <td>   -0.0167</td> <td>    0.014</td> <td>   -1.174</td> <td> 0.240</td> <td>   -0.044</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_343</th>       <td>    0.0679</td> <td>    0.007</td> <td>    9.173</td> <td> 0.000</td> <td>    0.053</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_350</th>       <td>    0.0100</td> <td>    0.059</td> <td>    0.168</td> <td> 0.866</td> <td>   -0.106</td> <td>    0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_351</th>       <td>    0.0295</td> <td>    0.009</td> <td>    3.185</td> <td> 0.001</td> <td>    0.011</td> <td>    0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_352</th>       <td>    0.0209</td> <td>    0.017</td> <td>    1.234</td> <td> 0.217</td> <td>   -0.012</td> <td>    0.054</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_353</th>       <td>    0.1248</td> <td>    0.008</td> <td>   14.735</td> <td> 0.000</td> <td>    0.108</td> <td>    0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_354</th>       <td>   -0.0247</td> <td>    0.023</td> <td>   -1.094</td> <td> 0.274</td> <td>   -0.069</td> <td>    0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_355</th>       <td>   -0.0005</td> <td>    0.066</td> <td>   -0.007</td> <td> 0.994</td> <td>   -0.130</td> <td>    0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_360</th>       <td>   -0.0191</td> <td>    0.019</td> <td>   -0.987</td> <td> 0.323</td> <td>   -0.057</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_361</th>       <td>   -0.0550</td> <td>    0.008</td> <td>   -7.018</td> <td> 0.000</td> <td>   -0.070</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_362</th>       <td>    0.1063</td> <td>    0.021</td> <td>    5.061</td> <td> 0.000</td> <td>    0.065</td> <td>    0.147</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_363</th>       <td>   -0.0053</td> <td>    0.052</td> <td>   -0.103</td> <td> 0.918</td> <td>   -0.107</td> <td>    0.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_364</th>       <td>    0.0086</td> <td>    0.028</td> <td>    0.309</td> <td> 0.757</td> <td>   -0.046</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_365</th>       <td>   -0.0873</td> <td>    0.027</td> <td>   -3.189</td> <td> 0.001</td> <td>   -0.141</td> <td>   -0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_366</th>       <td>   -0.0453</td> <td>    0.016</td> <td>   -2.843</td> <td> 0.004</td> <td>   -0.076</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_370</th>       <td>   -0.0544</td> <td>    0.028</td> <td>   -1.965</td> <td> 0.049</td> <td>   -0.109</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_371</th>       <td>    0.0177</td> <td>    0.022</td> <td>    0.823</td> <td> 0.411</td> <td>   -0.024</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_372</th>       <td>   -0.0631</td> <td>    0.021</td> <td>   -2.994</td> <td> 0.003</td> <td>   -0.104</td> <td>   -0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_380</th>       <td>    0.1704</td> <td>    0.131</td> <td>    1.304</td> <td> 0.192</td> <td>   -0.086</td> <td>    0.427</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_381</th>       <td>    0.0147</td> <td>    0.018</td> <td>    0.830</td> <td> 0.406</td> <td>   -0.020</td> <td>    0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_382</th>       <td>    0.0393</td> <td>    0.025</td> <td>    1.584</td> <td> 0.113</td> <td>   -0.009</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_383</th>       <td>   -0.0533</td> <td>    0.023</td> <td>   -2.296</td> <td> 0.022</td> <td>   -0.099</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_390</th>       <td>   -0.1928</td> <td>    0.061</td> <td>   -3.159</td> <td> 0.002</td> <td>   -0.312</td> <td>   -0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_400</th>       <td> 1.105e-16</td> <td> 1.18e-15</td> <td>    0.094</td> <td> 0.925</td> <td> -2.2e-15</td> <td> 2.42e-15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_401</th>       <td>    0.1174</td> <td>    0.007</td> <td>   16.002</td> <td> 0.000</td> <td>    0.103</td> <td>    0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_402</th>       <td>    0.1437</td> <td>    0.024</td> <td>    5.926</td> <td> 0.000</td> <td>    0.096</td> <td>    0.191</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_403</th>       <td>   -0.0166</td> <td>    0.021</td> <td>   -0.806</td> <td> 0.420</td> <td>   -0.057</td> <td>    0.024</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_410</th>       <td>    0.0369</td> <td>    0.012</td> <td>    3.129</td> <td> 0.002</td> <td>    0.014</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_411</th>       <td>    0.0033</td> <td>    0.028</td> <td>    0.115</td> <td> 0.909</td> <td>   -0.052</td> <td>    0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_412</th>       <td>    0.0180</td> <td>    0.013</td> <td>    1.398</td> <td> 0.162</td> <td>   -0.007</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_420</th>       <td>    0.0892</td> <td>    0.068</td> <td>    1.311</td> <td> 0.190</td> <td>   -0.044</td> <td>    0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_421</th>       <td>   -0.0068</td> <td>    0.015</td> <td>   -0.451</td> <td> 0.652</td> <td>   -0.037</td> <td>    0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_422</th>       <td>   -0.0327</td> <td>    0.018</td> <td>   -1.828</td> <td> 0.068</td> <td>   -0.068</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_429</th>       <td>    0.0097</td> <td>    0.030</td> <td>    0.328</td> <td> 0.743</td> <td>   -0.048</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_430</th>       <td>    0.0843</td> <td>    0.028</td> <td>    3.001</td> <td> 0.003</td> <td>    0.029</td> <td>    0.139</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_431</th>       <td>    0.0123</td> <td>    0.015</td> <td>    0.806</td> <td> 0.420</td> <td>   -0.018</td> <td>    0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_432</th>       <td>    0.0002</td> <td>    0.008</td> <td>    0.020</td> <td> 0.984</td> <td>   -0.016</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_433</th>       <td>   -0.0158</td> <td>    0.009</td> <td>   -1.801</td> <td> 0.072</td> <td>   -0.033</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_439</th>       <td>    0.0120</td> <td>    0.009</td> <td>    1.344</td> <td> 0.179</td> <td>   -0.005</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_450</th>       <td>   -0.0690</td> <td>    0.041</td> <td>   -1.697</td> <td> 0.090</td> <td>   -0.149</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_451</th>       <td>   -0.0133</td> <td>    0.007</td> <td>   -1.855</td> <td> 0.064</td> <td>   -0.027</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_452</th>       <td>    0.0274</td> <td>    0.005</td> <td>    5.734</td> <td> 0.000</td> <td>    0.018</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_453</th>       <td>    0.0013</td> <td>    0.005</td> <td>    0.242</td> <td> 0.809</td> <td>   -0.009</td> <td>    0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_454</th>       <td>   -0.0049</td> <td>    0.006</td> <td>   -0.867</td> <td> 0.386</td> <td>   -0.016</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_455</th>       <td>    0.0241</td> <td>    0.051</td> <td>    0.469</td> <td> 0.639</td> <td>   -0.077</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_460</th>       <td>    0.0516</td> <td>    0.051</td> <td>    1.012</td> <td> 0.311</td> <td>   -0.048</td> <td>    0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_461</th>       <td>   -0.0288</td> <td>    0.018</td> <td>   -1.640</td> <td> 0.101</td> <td>   -0.063</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_462</th>       <td>   -0.1054</td> <td>    0.019</td> <td>   -5.578</td> <td> 0.000</td> <td>   -0.142</td> <td>   -0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_463</th>       <td>   -0.0711</td> <td>    0.011</td> <td>   -6.521</td> <td> 0.000</td> <td>   -0.092</td> <td>   -0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_464</th>       <td>    0.0128</td> <td>    0.011</td> <td>    1.118</td> <td> 0.264</td> <td>   -0.010</td> <td>    0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_465</th>       <td>    0.0048</td> <td>    0.019</td> <td>    0.259</td> <td> 0.796</td> <td>   -0.032</td> <td>    0.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_466</th>       <td>   -0.0522</td> <td>    0.010</td> <td>   -5.238</td> <td> 0.000</td> <td>   -0.072</td> <td>   -0.033</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_467</th>       <td>   -0.0860</td> <td>    0.010</td> <td>   -8.452</td> <td> 0.000</td> <td>   -0.106</td> <td>   -0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_469</th>       <td>   -0.0817</td> <td>    0.027</td> <td>   -3.010</td> <td> 0.003</td> <td>   -0.135</td> <td>   -0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_470</th>       <td>   -0.0880</td> <td>    0.029</td> <td>   -3.043</td> <td> 0.002</td> <td>   -0.145</td> <td>   -0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_471</th>       <td>   -0.0813</td> <td>    0.007</td> <td>  -12.429</td> <td> 0.000</td> <td>   -0.094</td> <td>   -0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_472</th>       <td>   -0.0832</td> <td>    0.014</td> <td>   -5.853</td> <td> 0.000</td> <td>   -0.111</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_473</th>       <td>   -0.0744</td> <td>    0.025</td> <td>   -3.035</td> <td> 0.002</td> <td>   -0.122</td> <td>   -0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_474</th>       <td>   -0.0400</td> <td>    0.021</td> <td>   -1.895</td> <td> 0.058</td> <td>   -0.081</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_475</th>       <td>   -0.0746</td> <td>    0.010</td> <td>   -7.409</td> <td> 0.000</td> <td>   -0.094</td> <td>   -0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_476</th>       <td>   -0.0999</td> <td>    0.016</td> <td>   -6.320</td> <td> 0.000</td> <td>   -0.131</td> <td>   -0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_477</th>       <td>   -0.0573</td> <td>    0.007</td> <td>   -7.947</td> <td> 0.000</td> <td>   -0.071</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_478</th>       <td>   -0.2286</td> <td>    0.034</td> <td>   -6.638</td> <td> 0.000</td> <td>   -0.296</td> <td>   -0.161</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_479</th>       <td>   -0.1575</td> <td>    0.018</td> <td>   -8.845</td> <td> 0.000</td> <td>   -0.192</td> <td>   -0.123</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_490</th>       <td>    0.0016</td> <td>    0.046</td> <td>    0.034</td> <td> 0.973</td> <td>   -0.088</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_491</th>       <td>   -0.0208</td> <td>    0.012</td> <td>   -1.742</td> <td> 0.082</td> <td>   -0.044</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_492</th>       <td>    0.2643</td> <td>    0.084</td> <td>    3.130</td> <td> 0.002</td> <td>    0.099</td> <td>    0.430</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_493</th>       <td>   -0.0496</td> <td>    0.010</td> <td>   -4.966</td> <td> 0.000</td> <td>   -0.069</td> <td>   -0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_494</th>       <td>   -0.0251</td> <td>    0.008</td> <td>   -3.012</td> <td> 0.003</td> <td>   -0.041</td> <td>   -0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_495</th>       <td>    0.1511</td> <td>    0.065</td> <td>    2.338</td> <td> 0.019</td> <td>    0.024</td> <td>    0.278</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_500</th>       <td>   -0.1977</td> <td>    0.095</td> <td>   -2.084</td> <td> 0.037</td> <td>   -0.384</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_501</th>       <td>   -0.0253</td> <td>    0.006</td> <td>   -3.996</td> <td> 0.000</td> <td>   -0.038</td> <td>   -0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_502</th>       <td>   -0.0633</td> <td>    0.008</td> <td>   -7.691</td> <td> 0.000</td> <td>   -0.079</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_503</th>       <td>   -0.0134</td> <td>    0.011</td> <td>   -1.274</td> <td> 0.203</td> <td>   -0.034</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_504</th>       <td>   -0.0733</td> <td>    0.025</td> <td>   -2.961</td> <td> 0.003</td> <td>   -0.122</td> <td>   -0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_505</th>       <td>   -0.0675</td> <td>    0.016</td> <td>   -4.120</td> <td> 0.000</td> <td>   -0.100</td> <td>   -0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_510</th>       <td>   -0.0100</td> <td>    0.047</td> <td>   -0.213</td> <td> 0.831</td> <td>   -0.102</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_511</th>       <td>    0.0967</td> <td>    0.009</td> <td>   10.391</td> <td> 0.000</td> <td>    0.078</td> <td>    0.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_512</th>       <td>   -0.0575</td> <td>    0.011</td> <td>   -5.241</td> <td> 0.000</td> <td>   -0.079</td> <td>   -0.036</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_513</th>       <td>   -0.0360</td> <td>    0.007</td> <td>   -5.307</td> <td> 0.000</td> <td>   -0.049</td> <td>   -0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_514</th>       <td>    0.0230</td> <td>    0.007</td> <td>    3.303</td> <td> 0.001</td> <td>    0.009</td> <td>    0.037</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_515</th>       <td>    0.0029</td> <td>    0.006</td> <td>    0.451</td> <td> 0.652</td> <td>   -0.010</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_516</th>       <td>    0.0441</td> <td>    0.006</td> <td>    6.917</td> <td> 0.000</td> <td>    0.032</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_517</th>       <td>    0.0142</td> <td>    0.036</td> <td>    0.389</td> <td> 0.697</td> <td>   -0.057</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_518</th>       <td>   -0.0681</td> <td>    0.011</td> <td>   -6.309</td> <td> 0.000</td> <td>   -0.089</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_519</th>       <td>   -0.0859</td> <td>    0.054</td> <td>   -1.580</td> <td> 0.114</td> <td>   -0.192</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_520</th>       <td>    0.0490</td> <td>    0.042</td> <td>    1.163</td> <td> 0.245</td> <td>   -0.034</td> <td>    0.131</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_521</th>       <td>   -0.1546</td> <td>    0.005</td> <td>  -31.434</td> <td> 0.000</td> <td>   -0.164</td> <td>   -0.145</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_522</th>       <td>   -0.0958</td> <td>    0.007</td> <td>  -13.001</td> <td> 0.000</td> <td>   -0.110</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_523</th>       <td>   -0.1492</td> <td>    0.008</td> <td>  -19.338</td> <td> 0.000</td> <td>   -0.164</td> <td>   -0.134</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_524</th>       <td>   -0.1214</td> <td>    0.005</td> <td>  -24.242</td> <td> 0.000</td> <td>   -0.131</td> <td>   -0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_525</th>       <td>   -0.2746</td> <td>    0.030</td> <td>   -9.139</td> <td> 0.000</td> <td>   -0.334</td> <td>   -0.216</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_526</th>       <td>   -0.2304</td> <td>    0.010</td> <td>  -22.085</td> <td> 0.000</td> <td>   -0.251</td> <td>   -0.210</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_527</th>       <td>   -0.1072</td> <td>    0.017</td> <td>   -6.442</td> <td> 0.000</td> <td>   -0.140</td> <td>   -0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_530</th>       <td>   -0.2135</td> <td>    0.292</td> <td>   -0.731</td> <td> 0.465</td> <td>   -0.786</td> <td>    0.359</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_531</th>       <td>   -0.1195</td> <td>    0.010</td> <td>  -11.423</td> <td> 0.000</td> <td>   -0.140</td> <td>   -0.099</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_532</th>       <td>   -0.0094</td> <td>    0.050</td> <td>   -0.189</td> <td> 0.850</td> <td>   -0.107</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_550</th>       <td>    0.1942</td> <td>    0.068</td> <td>    2.854</td> <td> 0.004</td> <td>    0.061</td> <td>    0.328</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_551</th>       <td>   -0.0220</td> <td>    0.006</td> <td>   -3.397</td> <td> 0.001</td> <td>   -0.035</td> <td>   -0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_552</th>       <td>   -0.1447</td> <td>    0.010</td> <td>  -13.799</td> <td> 0.000</td> <td>   -0.165</td> <td>   -0.124</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_553</th>       <td>   -0.0927</td> <td>    0.006</td> <td>  -15.702</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_554</th>       <td>   -0.1487</td> <td>    0.014</td> <td>  -10.830</td> <td> 0.000</td> <td>   -0.176</td> <td>   -0.122</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_555</th>       <td>   -0.1251</td> <td>    0.009</td> <td>  -14.487</td> <td> 0.000</td> <td>   -0.142</td> <td>   -0.108</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_559</th>       <td>   -0.1142</td> <td>    0.035</td> <td>   -3.263</td> <td> 0.001</td> <td>   -0.183</td> <td>   -0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_560</th>       <td>    0.1312</td> <td>    0.045</td> <td>    2.933</td> <td> 0.003</td> <td>    0.044</td> <td>    0.219</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_561</th>       <td>   -0.0380</td> <td>    0.008</td> <td>   -5.055</td> <td> 0.000</td> <td>   -0.053</td> <td>   -0.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_562</th>       <td>   -0.0956</td> <td>    0.012</td> <td>   -7.912</td> <td> 0.000</td> <td>   -0.119</td> <td>   -0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_563</th>       <td>   -0.0486</td> <td>    0.024</td> <td>   -2.068</td> <td> 0.039</td> <td>   -0.095</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_580</th>       <td>    0.1017</td> <td>    0.078</td> <td>    1.300</td> <td> 0.194</td> <td>   -0.052</td> <td>    0.255</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_581</th>       <td>   -0.0358</td> <td>    0.018</td> <td>   -1.948</td> <td> 0.051</td> <td>   -0.072</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_582</th>       <td>   -0.0411</td> <td>    0.020</td> <td>   -2.068</td> <td> 0.039</td> <td>   -0.080</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_590</th>       <td>    0.3797</td> <td>    0.095</td> <td>    3.991</td> <td> 0.000</td> <td>    0.193</td> <td>    0.566</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_591</th>       <td>    0.0621</td> <td>    0.021</td> <td>    2.943</td> <td> 0.003</td> <td>    0.021</td> <td>    0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_592</th>       <td>   -0.1002</td> <td>    0.067</td> <td>   -1.492</td> <td> 0.136</td> <td>   -0.232</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_600</th>       <td>    0.1065</td> <td>    0.071</td> <td>    1.501</td> <td> 0.133</td> <td>   -0.033</td> <td>    0.246</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_601</th>       <td>    0.1117</td> <td>    0.007</td> <td>   17.057</td> <td> 0.000</td> <td>    0.099</td> <td>    0.125</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_602</th>       <td>    0.0476</td> <td>    0.005</td> <td>    8.968</td> <td> 0.000</td> <td>    0.037</td> <td>    0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_603</th>       <td>    0.1075</td> <td>    0.050</td> <td>    2.170</td> <td> 0.030</td> <td>    0.010</td> <td>    0.204</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_610</th>       <td>   -0.1162</td> <td>    0.061</td> <td>   -1.904</td> <td> 0.057</td> <td>   -0.236</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_611</th>       <td>    0.1039</td> <td>    0.013</td> <td>    8.154</td> <td> 0.000</td> <td>    0.079</td> <td>    0.129</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_612</th>       <td>    0.0687</td> <td>    0.027</td> <td>    2.559</td> <td> 0.010</td> <td>    0.016</td> <td>    0.121</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_613</th>       <td>    0.1338</td> <td>    0.088</td> <td>    1.518</td> <td> 0.129</td> <td>   -0.039</td> <td>    0.307</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_619</th>       <td>   -0.0285</td> <td>    0.039</td> <td>   -0.731</td> <td> 0.465</td> <td>   -0.105</td> <td>    0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_620</th>       <td>   -0.0691</td> <td>    0.009</td> <td>   -7.575</td> <td> 0.000</td> <td>   -0.087</td> <td>   -0.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_621</th>       <td>    0.3186</td> <td>    0.011</td> <td>   28.732</td> <td> 0.000</td> <td>    0.297</td> <td>    0.340</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_622</th>       <td>    0.2885</td> <td>    0.035</td> <td>    8.131</td> <td> 0.000</td> <td>    0.219</td> <td>    0.358</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_623</th>       <td>    0.3889</td> <td>    0.156</td> <td>    2.490</td> <td> 0.013</td> <td>    0.083</td> <td>    0.695</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_630</th>       <td>    0.1723</td> <td>    0.131</td> <td>    1.318</td> <td> 0.187</td> <td>   -0.084</td> <td>    0.428</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_631</th>       <td>    0.0003</td> <td>    0.009</td> <td>    0.032</td> <td> 0.974</td> <td>   -0.018</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_632</th>       <td>    0.0967</td> <td>    0.011</td> <td>    8.451</td> <td> 0.000</td> <td>    0.074</td> <td>    0.119</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_633</th>       <td>   -0.0706</td> <td>    0.012</td> <td>   -5.804</td> <td> 0.000</td> <td>   -0.094</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_634</th>       <td>    0.0182</td> <td>    0.008</td> <td>    2.157</td> <td> 0.031</td> <td>    0.002</td> <td>    0.035</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_639</th>       <td>    0.0644</td> <td>    0.069</td> <td>    0.934</td> <td> 0.351</td> <td>   -0.071</td> <td>    0.200</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_640</th>       <td>    0.2143</td> <td>    0.065</td> <td>    3.276</td> <td> 0.001</td> <td>    0.086</td> <td>    0.343</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_641</th>       <td>   -0.0553</td> <td>    0.005</td> <td>  -10.732</td> <td> 0.000</td> <td>   -0.065</td> <td>   -0.045</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_642</th>       <td>    0.0531</td> <td>    0.006</td> <td>    8.293</td> <td> 0.000</td> <td>    0.041</td> <td>    0.066</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_643</th>       <td>    0.0886</td> <td>    0.036</td> <td>    2.477</td> <td> 0.013</td> <td>    0.018</td> <td>    0.159</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_649</th>       <td>    0.0372</td> <td>    0.025</td> <td>    1.496</td> <td> 0.135</td> <td>   -0.012</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_650</th>       <td>    0.2065</td> <td>    0.066</td> <td>    3.117</td> <td> 0.002</td> <td>    0.077</td> <td>    0.336</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_651</th>       <td>    0.0920</td> <td>    0.005</td> <td>   17.879</td> <td> 0.000</td> <td>    0.082</td> <td>    0.102</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_652</th>       <td>    0.1724</td> <td>    0.012</td> <td>   14.359</td> <td> 0.000</td> <td>    0.149</td> <td>    0.196</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_653</th>       <td>    0.0996</td> <td>    0.119</td> <td>    0.835</td> <td> 0.404</td> <td>   -0.134</td> <td>    0.333</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_660</th>       <td>    0.0613</td> <td>    0.007</td> <td>    9.004</td> <td> 0.000</td> <td>    0.048</td> <td>    0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_661</th>       <td>   -0.0096</td> <td>    0.027</td> <td>   -0.355</td> <td> 0.722</td> <td>   -0.063</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_662</th>       <td>   -0.0376</td> <td>    0.015</td> <td>   -2.453</td> <td> 0.014</td> <td>   -0.068</td> <td>   -0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_663</th>       <td>    0.1684</td> <td>    0.037</td> <td>    4.566</td> <td> 0.000</td> <td>    0.096</td> <td>    0.241</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_670</th>       <td>    0.2024</td> <td>    0.413</td> <td>    0.490</td> <td> 0.624</td> <td>   -0.607</td> <td>    1.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_671</th>       <td>    0.1499</td> <td>    0.018</td> <td>    8.183</td> <td> 0.000</td> <td>    0.114</td> <td>    0.186</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_672</th>       <td>   -0.0129</td> <td>    0.010</td> <td>   -1.229</td> <td> 0.219</td> <td>   -0.033</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_680</th>       <td>   -0.0948</td> <td>    0.063</td> <td>   -1.502</td> <td> 0.133</td> <td>   -0.219</td> <td>    0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_681</th>       <td>   -0.0400</td> <td>    0.062</td> <td>   -0.642</td> <td> 0.521</td> <td>   -0.162</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_682</th>       <td>   -0.0631</td> <td>    0.010</td> <td>   -6.028</td> <td> 0.000</td> <td>   -0.084</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_683</th>       <td>   -0.1242</td> <td>    0.013</td> <td>   -9.253</td> <td> 0.000</td> <td>   -0.150</td> <td>   -0.098</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_690</th>       <td>   -0.0865</td> <td>    0.088</td> <td>   -0.981</td> <td> 0.327</td> <td>   -0.259</td> <td>    0.086</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_691</th>       <td>    0.0018</td> <td>    0.014</td> <td>    0.128</td> <td> 0.898</td> <td>   -0.026</td> <td>    0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_692</th>       <td>   -0.0287</td> <td>    0.012</td> <td>   -2.420</td> <td> 0.016</td> <td>   -0.052</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_700</th>       <td>    0.0446</td> <td>    0.110</td> <td>    0.404</td> <td> 0.687</td> <td>   -0.172</td> <td>    0.261</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_701</th>       <td>    0.0023</td> <td>    0.010</td> <td>    0.238</td> <td> 0.812</td> <td>   -0.016</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_702</th>       <td>   -0.1031</td> <td>    0.007</td> <td>  -14.101</td> <td> 0.000</td> <td>   -0.117</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_703</th>       <td>   -0.1574</td> <td>    0.008</td> <td>  -20.925</td> <td> 0.000</td> <td>   -0.172</td> <td>   -0.143</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_710</th>       <td>   -0.1073</td> <td>    0.131</td> <td>   -0.821</td> <td> 0.412</td> <td>   -0.363</td> <td>    0.149</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_711</th>       <td>   -0.0787</td> <td>    0.009</td> <td>   -9.137</td> <td> 0.000</td> <td>   -0.096</td> <td>   -0.062</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_712</th>       <td>   -0.0765</td> <td>    0.015</td> <td>   -5.253</td> <td> 0.000</td> <td>   -0.105</td> <td>   -0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_713</th>       <td>    0.0222</td> <td>    0.017</td> <td>    1.329</td> <td> 0.184</td> <td>   -0.011</td> <td>    0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_714</th>       <td>   -0.0505</td> <td>    0.018</td> <td>   -2.736</td> <td> 0.006</td> <td>   -0.087</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_720</th>       <td>   -0.0110</td> <td>    0.048</td> <td>   -0.228</td> <td> 0.819</td> <td>   -0.105</td> <td>    0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_721</th>       <td>    0.0102</td> <td>    0.008</td> <td>    1.329</td> <td> 0.184</td> <td>   -0.005</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_722</th>       <td>    0.0285</td> <td>    0.009</td> <td>    3.118</td> <td> 0.002</td> <td>    0.011</td> <td>    0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_723</th>       <td>    0.0516</td> <td>    0.013</td> <td>    3.932</td> <td> 0.000</td> <td>    0.026</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_724</th>       <td>    0.0404</td> <td>    0.032</td> <td>    1.270</td> <td> 0.204</td> <td>   -0.022</td> <td>    0.103</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_725</th>       <td>   -0.0324</td> <td>    0.020</td> <td>   -1.598</td> <td> 0.110</td> <td>   -0.072</td> <td>    0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_726</th>       <td>    0.1793</td> <td>    0.083</td> <td>    2.168</td> <td> 0.030</td> <td>    0.017</td> <td>    0.341</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_730</th>       <td>    0.0182</td> <td>    0.071</td> <td>    0.256</td> <td> 0.798</td> <td>   -0.121</td> <td>    0.157</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_731</th>       <td>    0.0070</td> <td>    0.008</td> <td>    0.921</td> <td> 0.357</td> <td>   -0.008</td> <td>    0.022</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_732</th>       <td>   -0.0759</td> <td>    0.014</td> <td>   -5.298</td> <td> 0.000</td> <td>   -0.104</td> <td>   -0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_740</th>       <td>    0.0227</td> <td>    0.072</td> <td>    0.316</td> <td> 0.752</td> <td>   -0.118</td> <td>    0.164</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_741</th>       <td>    0.0231</td> <td>    0.005</td> <td>    4.282</td> <td> 0.000</td> <td>    0.013</td> <td>    0.034</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_742</th>       <td>    0.0066</td> <td>    0.007</td> <td>    0.962</td> <td> 0.336</td> <td>   -0.007</td> <td>    0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_743</th>       <td>   -0.0354</td> <td>    0.012</td> <td>   -3.021</td> <td> 0.003</td> <td>   -0.058</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_744</th>       <td>   -0.1510</td> <td>    0.009</td> <td>  -16.481</td> <td> 0.000</td> <td>   -0.169</td> <td>   -0.133</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_745</th>       <td>   -0.1069</td> <td>    0.009</td> <td>  -11.619</td> <td> 0.000</td> <td>   -0.125</td> <td>   -0.089</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_746</th>       <td>   -0.1878</td> <td>    0.009</td> <td>  -20.396</td> <td> 0.000</td> <td>   -0.206</td> <td>   -0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_747</th>       <td>   -0.2221</td> <td>    0.007</td> <td>  -33.348</td> <td> 0.000</td> <td>   -0.235</td> <td>   -0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_748</th>       <td>   -0.0598</td> <td>    0.007</td> <td>   -8.424</td> <td> 0.000</td> <td>   -0.074</td> <td>   -0.046</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_749</th>       <td>   -0.0524</td> <td>    0.028</td> <td>   -1.855</td> <td> 0.064</td> <td>   -0.108</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_750</th>       <td>    0.0414</td> <td>    0.030</td> <td>    1.387</td> <td> 0.166</td> <td>   -0.017</td> <td>    0.100</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_751</th>       <td>   -0.1349</td> <td>    0.004</td> <td>  -31.001</td> <td> 0.000</td> <td>   -0.143</td> <td>   -0.126</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_752</th>       <td>    0.0820</td> <td>    0.005</td> <td>   15.117</td> <td> 0.000</td> <td>    0.071</td> <td>    0.093</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_753</th>       <td>   -0.0115</td> <td>    0.006</td> <td>   -1.838</td> <td> 0.066</td> <td>   -0.024</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_770</th>       <td>   -0.0158</td> <td>    0.146</td> <td>   -0.108</td> <td> 0.914</td> <td>   -0.302</td> <td>    0.271</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_771</th>       <td>   -0.1205</td> <td>    0.031</td> <td>   -3.862</td> <td> 0.000</td> <td>   -0.182</td> <td>   -0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_772</th>       <td>   -0.0909</td> <td>    0.025</td> <td>   -3.685</td> <td> 0.000</td> <td>   -0.139</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_773</th>       <td>   -0.0372</td> <td>    0.024</td> <td>   -1.538</td> <td> 0.124</td> <td>   -0.085</td> <td>    0.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_774</th>       <td>   -0.0331</td> <td>    0.095</td> <td>   -0.349</td> <td> 0.727</td> <td>   -0.219</td> <td>    0.153</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_780</th>       <td>   -0.1137</td> <td>    0.107</td> <td>   -1.065</td> <td> 0.287</td> <td>   -0.323</td> <td>    0.096</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_781</th>       <td>   -0.1198</td> <td>    0.047</td> <td>   -2.569</td> <td> 0.010</td> <td>   -0.211</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_782</th>       <td>   -0.1293</td> <td>    0.024</td> <td>   -5.413</td> <td> 0.000</td> <td>   -0.176</td> <td>   -0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_783</th>       <td>   -0.1022</td> <td>    0.021</td> <td>   -4.918</td> <td> 0.000</td> <td>   -0.143</td> <td>   -0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_790</th>       <td>   -0.0274</td> <td>    0.146</td> <td>   -0.188</td> <td> 0.851</td> <td>   -0.314</td> <td>    0.259</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_791</th>       <td>   -0.1330</td> <td>    0.025</td> <td>   -5.293</td> <td> 0.000</td> <td>   -0.182</td> <td>   -0.084</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_799</th>       <td>   -0.0625</td> <td>    0.039</td> <td>   -1.614</td> <td> 0.107</td> <td>   -0.138</td> <td>    0.013</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_800</th>       <td>   -0.1487</td> <td>    0.046</td> <td>   -3.228</td> <td> 0.001</td> <td>   -0.239</td> <td>   -0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_801</th>       <td>   -0.1279</td> <td>    0.005</td> <td>  -25.014</td> <td> 0.000</td> <td>   -0.138</td> <td>   -0.118</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_802</th>       <td>   -0.1428</td> <td>    0.005</td> <td>  -30.006</td> <td> 0.000</td> <td>   -0.152</td> <td>   -0.133</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_803</th>       <td>   -0.1452</td> <td>    0.007</td> <td>  -21.640</td> <td> 0.000</td> <td>   -0.158</td> <td>   -0.132</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_804</th>       <td>   -0.1824</td> <td>    0.006</td> <td>  -29.008</td> <td> 0.000</td> <td>   -0.195</td> <td>   -0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_810</th>       <td>    0.0048</td> <td>    0.051</td> <td>    0.095</td> <td> 0.924</td> <td>   -0.095</td> <td>    0.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_811</th>       <td>   -0.0726</td> <td>    0.030</td> <td>   -2.410</td> <td> 0.016</td> <td>   -0.132</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_812</th>       <td>   -0.0321</td> <td>    0.009</td> <td>   -3.421</td> <td> 0.001</td> <td>   -0.050</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_813</th>       <td>   -0.0883</td> <td>    0.015</td> <td>   -5.704</td> <td> 0.000</td> <td>   -0.119</td> <td>   -0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_820</th>       <td>    0.0716</td> <td>    0.092</td> <td>    0.775</td> <td> 0.439</td> <td>   -0.110</td> <td>    0.253</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_821</th>       <td>   -0.0865</td> <td>    0.020</td> <td>   -4.357</td> <td> 0.000</td> <td>   -0.125</td> <td>   -0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_822</th>       <td>   -0.1404</td> <td>    0.022</td> <td>   -6.440</td> <td> 0.000</td> <td>   -0.183</td> <td>   -0.098</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_823</th>       <td>   -0.0644</td> <td>    0.043</td> <td>   -1.482</td> <td> 0.138</td> <td>   -0.150</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_829</th>       <td>   -0.0713</td> <td>    0.014</td> <td>   -5.020</td> <td> 0.000</td> <td>   -0.099</td> <td>   -0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_840</th>       <td>   -0.0631</td> <td>    0.045</td> <td>   -1.401</td> <td> 0.161</td> <td>   -0.151</td> <td>    0.025</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_841</th>       <td>   -0.1049</td> <td>    0.006</td> <td>  -18.108</td> <td> 0.000</td> <td>   -0.116</td> <td>   -0.094</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_842</th>       <td>   -0.0899</td> <td>    0.008</td> <td>  -11.770</td> <td> 0.000</td> <td>   -0.105</td> <td>   -0.075</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_843</th>       <td>   -0.0498</td> <td>    0.011</td> <td>   -4.461</td> <td> 0.000</td> <td>   -0.072</td> <td>   -0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_850</th>       <td>   -0.1426</td> <td>    0.023</td> <td>   -6.261</td> <td> 0.000</td> <td>   -0.187</td> <td>   -0.098</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_851</th>       <td>   -0.0256</td> <td>    0.004</td> <td>   -5.904</td> <td> 0.000</td> <td>   -0.034</td> <td>   -0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_852</th>       <td>   -0.1665</td> <td>    0.007</td> <td>  -22.634</td> <td> 0.000</td> <td>   -0.181</td> <td>   -0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_853</th>       <td>   -0.2022</td> <td>    0.004</td> <td>  -47.547</td> <td> 0.000</td> <td>   -0.211</td> <td>   -0.194</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_854</th>       <td>   -0.1889</td> <td>    0.010</td> <td>  -18.562</td> <td> 0.000</td> <td>   -0.209</td> <td>   -0.169</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_855</th>       <td>   -0.2125</td> <td>    0.010</td> <td>  -21.771</td> <td> 0.000</td> <td>   -0.232</td> <td>   -0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_856</th>       <td>   -0.3499</td> <td>    0.081</td> <td>   -4.313</td> <td> 0.000</td> <td>   -0.509</td> <td>   -0.191</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_860</th>       <td>    0.0395</td> <td>    0.037</td> <td>    1.073</td> <td> 0.283</td> <td>   -0.033</td> <td>    0.112</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_861</th>       <td>   -0.0255</td> <td>    0.007</td> <td>   -3.724</td> <td> 0.000</td> <td>   -0.039</td> <td>   -0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_862</th>       <td>    0.0025</td> <td>    0.011</td> <td>    0.230</td> <td> 0.818</td> <td>   -0.019</td> <td>    0.024</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_869</th>       <td>   -0.0515</td> <td>    0.011</td> <td>   -4.735</td> <td> 0.000</td> <td>   -0.073</td> <td>   -0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_870</th>       <td>    0.0943</td> <td>    0.046</td> <td>    2.046</td> <td> 0.041</td> <td>    0.004</td> <td>    0.185</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_871</th>       <td>   -0.0178</td> <td>    0.007</td> <td>   -2.399</td> <td> 0.016</td> <td>   -0.032</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_872</th>       <td>   -0.1098</td> <td>    0.015</td> <td>   -7.532</td> <td> 0.000</td> <td>   -0.138</td> <td>   -0.081</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_873</th>       <td>   -0.0249</td> <td>    0.016</td> <td>   -1.586</td> <td> 0.113</td> <td>   -0.056</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_879</th>       <td>   -0.0948</td> <td>    0.013</td> <td>   -7.046</td> <td> 0.000</td> <td>   -0.121</td> <td>   -0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_880</th>       <td>    0.0179</td> <td>    0.032</td> <td>    0.551</td> <td> 0.581</td> <td>   -0.046</td> <td>    0.082</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_881</th>       <td>   -0.0787</td> <td>    0.007</td> <td>  -11.370</td> <td> 0.000</td> <td>   -0.092</td> <td>   -0.065</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_889</th>       <td>   -0.0846</td> <td>    0.007</td> <td>  -12.681</td> <td> 0.000</td> <td>   -0.098</td> <td>   -0.071</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_900</th>       <td>   -0.0463</td> <td>    0.009</td> <td>   -5.325</td> <td> 0.000</td> <td>   -0.063</td> <td>   -0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_910</th>       <td>   -0.1418</td> <td>    0.017</td> <td>   -8.437</td> <td> 0.000</td> <td>   -0.175</td> <td>   -0.109</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_911</th>       <td>   -0.0702</td> <td>    0.010</td> <td>   -6.859</td> <td> 0.000</td> <td>   -0.090</td> <td>   -0.050</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_912</th>       <td>   -0.0542</td> <td>    0.024</td> <td>   -2.230</td> <td> 0.026</td> <td>   -0.102</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_913</th>       <td>   -0.2360</td> <td>    0.006</td> <td>  -37.956</td> <td> 0.000</td> <td>   -0.248</td> <td>   -0.224</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_920</th>       <td>    0.0914</td> <td>    0.030</td> <td>    3.065</td> <td> 0.002</td> <td>    0.033</td> <td>    0.150</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_921</th>       <td>    0.1419</td> <td>    0.014</td> <td>    9.889</td> <td> 0.000</td> <td>    0.114</td> <td>    0.170</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_922</th>       <td>    0.1457</td> <td>    0.014</td> <td>   10.159</td> <td> 0.000</td> <td>    0.118</td> <td>    0.174</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_923</th>       <td>   -0.2327</td> <td>    0.009</td> <td>  -25.766</td> <td> 0.000</td> <td>   -0.250</td> <td>   -0.215</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_924</th>       <td>    0.1147</td> <td>    0.030</td> <td>    3.835</td> <td> 0.000</td> <td>    0.056</td> <td>    0.173</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_925</th>       <td>   -0.1575</td> <td>    0.012</td> <td>  -13.448</td> <td> 0.000</td> <td>   -0.181</td> <td>   -0.135</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_926</th>       <td>   -0.2134</td> <td>    0.009</td> <td>  -24.444</td> <td> 0.000</td> <td>   -0.231</td> <td>   -0.196</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_927</th>       <td>   -0.0541</td> <td>    0.016</td> <td>   -3.489</td> <td> 0.000</td> <td>   -0.085</td> <td>   -0.024</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_930</th>       <td>    0.0064</td> <td>    0.007</td> <td>    0.920</td> <td> 0.357</td> <td>   -0.007</td> <td>    0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_931</th>       <td>   -0.1616</td> <td>    0.014</td> <td>  -11.756</td> <td> 0.000</td> <td>   -0.189</td> <td>   -0.135</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_932</th>       <td>   -0.1260</td> <td>    0.018</td> <td>   -6.978</td> <td> 0.000</td> <td>   -0.161</td> <td>   -0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_940</th>       <td>   -0.1271</td> <td>    0.078</td> <td>   -1.625</td> <td> 0.104</td> <td>   -0.280</td> <td>    0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_941</th>       <td>   -0.1107</td> <td>    0.018</td> <td>   -6.266</td> <td> 0.000</td> <td>   -0.145</td> <td>   -0.076</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_942</th>       <td>    0.0689</td> <td>    0.025</td> <td>    2.802</td> <td> 0.005</td> <td>    0.021</td> <td>    0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_949</th>       <td>   -0.1386</td> <td>    0.009</td> <td>  -14.905</td> <td> 0.000</td> <td>   -0.157</td> <td>   -0.120</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_950</th>       <td>   -0.6377</td> <td>    0.005</td> <td> -123.508</td> <td> 0.000</td> <td>   -0.648</td> <td>   -0.628</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_951</th>       <td>   -0.1388</td> <td>    0.044</td> <td>   -3.138</td> <td> 0.002</td> <td>   -0.225</td> <td>   -0.052</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_952</th>       <td>   -0.1145</td> <td>    0.034</td> <td>   -3.419</td> <td> 0.001</td> <td>   -0.180</td> <td>   -0.049</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_960</th>       <td>    0.0387</td> <td>    0.010</td> <td>    3.719</td> <td> 0.000</td> <td>    0.018</td> <td>    0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_970</th>       <td>   -0.0172</td> <td>    0.010</td> <td>   -1.658</td> <td> 0.097</td> <td>   -0.037</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_981</th>       <td>    0.0029</td> <td>    0.058</td> <td>    0.050</td> <td> 0.960</td> <td>   -0.111</td> <td>    0.117</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_982</th>       <td>   -0.0011</td> <td>    0.293</td> <td>   -0.004</td> <td> 0.997</td> <td>   -0.575</td> <td>    0.573</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_990</th>       <td>    0.3744</td> <td>    0.018</td> <td>   20.614</td> <td> 0.000</td> <td>    0.339</td> <td>    0.410</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SECT_nan</th>       <td>   -0.0406</td> <td>    0.004</td> <td>   -9.821</td> <td> 0.000</td> <td>   -0.049</td> <td>   -0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_1</th>         <td>   -0.9922</td> <td>    0.048</td> <td>  -20.710</td> <td> 0.000</td> <td>   -1.086</td> <td>   -0.898</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_2</th>         <td>   -0.9874</td> <td>    0.048</td> <td>  -20.608</td> <td> 0.000</td> <td>   -1.081</td> <td>   -0.893</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_3</th>         <td>   -0.9770</td> <td>    0.048</td> <td>  -20.393</td> <td> 0.000</td> <td>   -1.071</td> <td>   -0.883</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_4</th>         <td>   -0.9799</td> <td>    0.048</td> <td>  -20.451</td> <td> 0.000</td> <td>   -1.074</td> <td>   -0.886</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TRIM_new_nan</th>   <td>    2.7960</td> <td>    0.046</td> <td>   60.663</td> <td> 0.000</td> <td>    2.706</td> <td>    2.886</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONSTANT</th>       <td>   -1.1405</td> <td>    0.230</td> <td>   -4.954</td> <td> 0.000</td> <td>   -1.592</td> <td>   -0.689</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE2</th>           <td>   -0.0003</td> <td> 3.33e-06</td> <td> -102.615</td> <td> 0.000</td> <td>   -0.000</td> <td>   -0.000</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>977970.113</td> <th>  Durbin-Watson:     </th>   <td>   1.843</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>   <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>143253683.463</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>            <td>-3.644</td>   <th>  Prob(JB):          </th>   <td>    0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>        <td>58.057</td>   <th>  Cond. No.          </th>   <td>2.72e+16</td>   \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 2.81e-20. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                      y   R-squared:                       0.621\n",
       "Model:                            OLS   Adj. R-squared:                  0.621\n",
       "Method:                 Least Squares   F-statistic:                     3135.\n",
       "Date:                Tue, 04 Oct 2022   Prob (F-statistic):               0.00\n",
       "Time:                        18:39:12   Log-Likelihood:            -5.9827e+05\n",
       "No. Observations:             1114668   AIC:                         1.198e+06\n",
       "Df Residuals:                 1114084   BIC:                         1.205e+06\n",
       "Df Model:                         583                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==================================================================================\n",
       "                     coef    std err          t      P>|t|      [0.025      0.975]\n",
       "----------------------------------------------------------------------------------\n",
       "NAIM              -0.0004      0.000     -3.058      0.002      -0.001      -0.000\n",
       "NAIA              -0.0074      0.000    -56.793      0.000      -0.008      -0.007\n",
       "ANNEE              0.0213      0.000    103.809      0.000       0.021       0.022\n",
       "LHHC               0.6095      0.002    304.887      0.000       0.606       0.613\n",
       "DATDIP            -0.0024      0.000    -17.402      0.000      -0.003      -0.002\n",
       "NBTOT              0.0029      0.000     10.107      0.000       0.002       0.003\n",
       "FORDAT            -0.0066      0.001     -9.518      0.000      -0.008      -0.005\n",
       "AGE                0.0287      0.000    140.877      0.000       0.028       0.029\n",
       "EXPE           -3.511e-06   9.92e-07     -3.539      0.000   -5.46e-06   -1.57e-06\n",
       "EXPEPOT           -0.0094      0.001    -13.844      0.000      -0.011      -0.008\n",
       "NAIM_nan          -0.0396      0.020     -1.977      0.048      -0.079      -0.000\n",
       "LHHC_nan           3.1938      0.017    185.831      0.000       3.160       3.227\n",
       "DATDIP_nan        -0.0317      0.007     -4.515      0.000      -0.045      -0.018\n",
       "NBTOT_nan          0.1510      0.012     12.878      0.000       0.128       0.174\n",
       "FORDAT_nan        -0.3359      0.025    -13.517      0.000      -0.385      -0.287\n",
       "EXPE_nan          -0.0089      0.005     -1.672      0.094      -0.019       0.002\n",
       "EXPEPOT_nan       -0.3359      0.025    -13.517      0.000      -0.385      -0.287\n",
       "SALMEERED_nan   1.174e-13   2.54e-14      4.614      0.000    6.76e-14    1.67e-13\n",
       "STATUT_11          0.0202      0.027      0.755      0.450      -0.032       0.073\n",
       "STATUT_12          0.2609      0.027      9.810      0.000       0.209       0.313\n",
       "STATUT_13         -0.2641      0.061     -4.337      0.000      -0.383      -0.145\n",
       "STATUT_21          0.0186      0.024      0.770      0.442      -0.029       0.066\n",
       "STATUT_22         -0.3906      0.024    -16.190      0.000      -0.438      -0.343\n",
       "STATUT_33         -0.0878      0.024     -3.669      0.000      -0.135      -0.041\n",
       "STATUT_34         -0.3310      0.024    -13.788      0.000      -0.378      -0.284\n",
       "STATUT_35          0.0306      0.024      1.281      0.200      -0.016       0.077\n",
       "STATUT_41          0.1162      0.024      4.860      0.000       0.069       0.163\n",
       "STATUT_42         -0.5769      0.032    -18.080      0.000      -0.639      -0.514\n",
       "STATUT_43         -0.1171      0.024     -4.863      0.000      -0.164      -0.070\n",
       "STATUT_44         -0.1049      0.025     -4.249      0.000      -0.153      -0.056\n",
       "STATUT_45          0.0681      0.024      2.850      0.004       0.021       0.115\n",
       "STATUT_new_nan     0.2172      0.199      1.093      0.274      -0.172       0.607\n",
       "CSE_00             0.0564      0.026      2.156      0.031       0.005       0.108\n",
       "CSE_11            -0.2609      0.041     -6.424      0.000      -0.341      -0.181\n",
       "CSE_12            -0.2548      0.042     -6.052      0.000      -0.337      -0.172\n",
       "CSE_13            -0.2757      0.039     -7.120      0.000      -0.352      -0.200\n",
       "CSE_21            -0.0782      0.018     -4.331      0.000      -0.114      -0.043\n",
       "CSE_22            -0.0144      0.017     -0.846      0.398      -0.048       0.019\n",
       "CSE_23             0.4724      0.018     26.226      0.000       0.437       0.508\n",
       "CSE_31             0.2180      0.012     17.874      0.000       0.194       0.242\n",
       "CSE_33             0.3413      0.010     34.405      0.000       0.322       0.361\n",
       "CSE_34             0.2952      0.010     30.131      0.000       0.276       0.314\n",
       "CSE_35             0.1011      0.011      9.555      0.000       0.080       0.122\n",
       "CSE_37             0.4237      0.010     43.915      0.000       0.405       0.443\n",
       "CSE_38             0.3779      0.010     39.032      0.000       0.359       0.397\n",
       "CSE_42             0.0733      0.010      7.534      0.000       0.054       0.092\n",
       "CSE_43             0.0716      0.010      7.425      0.000       0.053       0.090\n",
       "CSE_44            -0.4823      0.019    -25.657      0.000      -0.519      -0.445\n",
       "CSE_45             0.0849      0.010      8.602      0.000       0.066       0.104\n",
       "CSE_46             0.0553      0.010      5.779      0.000       0.037       0.074\n",
       "CSE_47             0.0313      0.010      3.239      0.001       0.012       0.050\n",
       "CSE_48             0.0855      0.010      8.740      0.000       0.066       0.105\n",
       "CSE_52            -0.1280      0.010    -13.396      0.000      -0.147      -0.109\n",
       "CSE_53            -0.0563      0.010     -5.653      0.000      -0.076      -0.037\n",
       "CSE_54            -0.0950      0.010     -9.933      0.000      -0.114      -0.076\n",
       "CSE_55            -0.1878      0.010    -19.366      0.000      -0.207      -0.169\n",
       "CSE_56            -0.3497      0.010    -36.336      0.000      -0.369      -0.331\n",
       "CSE_62            -0.1079      0.010    -11.225      0.000      -0.127      -0.089\n",
       "CSE_63            -0.1324      0.010    -13.805      0.000      -0.151      -0.114\n",
       "CSE_64            -0.1717      0.010    -17.497      0.000      -0.191      -0.152\n",
       "CSE_65            -0.1343      0.010    -13.633      0.000      -0.154      -0.115\n",
       "CSE_67            -0.2040      0.010    -21.143      0.000      -0.223      -0.185\n",
       "CSE_68            -0.3399      0.010    -34.954      0.000      -0.359      -0.321\n",
       "CSE_69            -0.1953      0.011    -18.411      0.000      -0.216      -0.174\n",
       "CSE_83            -0.5769      0.032    -18.080      0.000      -0.639      -0.514\n",
       "CSE_new_nan        0.2172      0.199      1.093      0.274      -0.172       0.607\n",
       "DDIPL_1           -0.0281      0.033     -0.849      0.396      -0.093       0.037\n",
       "DDIPL_3           -0.0896      0.033     -2.711      0.007      -0.154      -0.025\n",
       "DDIPL_4           -0.1499      0.033     -4.534      0.000      -0.215      -0.085\n",
       "DDIPL_5           -0.1912      0.033     -5.789      0.000      -0.256      -0.126\n",
       "DDIPL_6           -0.1986      0.033     -6.010      0.000      -0.263      -0.134\n",
       "DDIPL_7           -0.2989      0.033     -9.049      0.000      -0.364      -0.234\n",
       "DDIPL_new_nan     -0.1842      0.038     -4.899      0.000      -0.258      -0.111\n",
       "SEXE_1            -0.4952      0.115     -4.302      0.000      -0.721      -0.270\n",
       "SEXE_2            -0.6453      0.115     -5.605      0.000      -0.871      -0.420\n",
       "ACTEU_1           -0.2899      0.077     -3.774      0.000      -0.441      -0.139\n",
       "ACTEU_2           -0.4307      0.077     -5.591      0.000      -0.582      -0.280\n",
       "ACTEU_3           -0.4198      0.077     -5.461      0.000      -0.571      -0.269\n",
       "RGA_1             -0.6631      0.032    -20.745      0.000      -0.726      -0.600\n",
       "RGA_2             -0.6543      0.032    -20.404      0.000      -0.717      -0.591\n",
       "RGA_3             -0.6557      0.032    -20.370      0.000      -0.719      -0.593\n",
       "RGA_4             -0.6557      0.032    -20.329      0.000      -0.719      -0.593\n",
       "RGA_5             -0.6455      0.032    -19.981      0.000      -0.709      -0.582\n",
       "RGA_6             -0.6623      0.032    -20.711      0.000      -0.725      -0.600\n",
       "RGA_new_nan        2.7960      0.046     60.663      0.000       2.706       2.886\n",
       "PRIM_1             1.4497      0.058     25.110      0.000       1.337       1.563\n",
       "PRIM_2             1.3629      0.058     23.606      0.000       1.250       1.476\n",
       "PRIM_9             1.3978      0.058     24.005      0.000       1.284       1.512\n",
       "PRIM_new_nan      -5.3510      0.059    -91.064      0.000      -5.466      -5.236\n",
       "PRIMS_1           -0.2015      0.058     -3.495      0.000      -0.315      -0.089\n",
       "PRIMS_2           -0.2417      0.058     -4.191      0.000      -0.355      -0.129\n",
       "PRIMS_9           -0.2580      0.058     -4.444      0.000      -0.372      -0.144\n",
       "PRIMS_new_nan     -0.4393      0.059     -7.461      0.000      -0.555      -0.324\n",
       "AUTSAL_1          -0.3852      0.078     -4.966      0.000      -0.537      -0.233\n",
       "AUTSAL_2          -0.3791      0.077     -4.923      0.000      -0.530      -0.228\n",
       "AUTSAL_new_nan    -0.3762      0.077     -4.887      0.000      -0.527      -0.225\n",
       "TYPSAL_1          -0.4133      0.077     -5.378      0.000      -0.564      -0.263\n",
       "TYPSAL_2          -0.4925      0.077     -6.409      0.000      -0.643      -0.342\n",
       "TYPSAL_new_nan    -0.2347      0.077     -3.035      0.002      -0.386      -0.083\n",
       "AM2NB_1           -0.2881      0.059     -4.911      0.000      -0.403      -0.173\n",
       "AM2NB_2           -0.3114      0.060     -5.173      0.000      -0.429      -0.193\n",
       "AM2NB_3           -0.2673      0.065     -4.119      0.000      -0.395      -0.140\n",
       "AM2NB_new_nan     -0.2737      0.059     -4.663      0.000      -0.389      -0.159\n",
       "CHPUB_1           -0.1079      0.032     -3.386      0.001      -0.170      -0.045\n",
       "CHPUB_2           -0.0156      0.032     -0.486      0.627      -0.079       0.047\n",
       "CHPUB_3           -0.1384      0.035     -3.983      0.000      -0.206      -0.070\n",
       "CHPUB_4           -0.2035      0.035     -5.848      0.000      -0.272      -0.135\n",
       "CHPUB_5           -0.1934      0.035     -5.519      0.000      -0.262      -0.125\n",
       "CHPUB_6           -0.0740      0.038     -1.925      0.054      -0.149       0.001\n",
       "CHPUB_7           -0.2204      0.035     -6.289      0.000      -0.289      -0.152\n",
       "CHPUB_new_nan     -0.1872      0.039     -4.768      0.000      -0.264      -0.110\n",
       "CONTRA_0          -0.3988      0.034    -11.861      0.000      -0.465      -0.333\n",
       "CONTRA_1          -0.1830      0.033     -5.502      0.000      -0.248      -0.118\n",
       "CONTRA_2          -0.1202      0.033     -3.602      0.000      -0.186      -0.055\n",
       "CONTRA_3           0.0303      0.035      0.872      0.383      -0.038       0.098\n",
       "CONTRA_4          -0.0681      0.039     -1.732      0.083      -0.145       0.009\n",
       "CONTRA_5          -0.0057      0.034     -0.167      0.867      -0.072       0.061\n",
       "CONTRA_new_nan    -0.3950      0.034    -11.706      0.000      -0.461      -0.329\n",
       "FONCTC_1          -0.1184      0.021     -5.604      0.000      -0.160      -0.077\n",
       "FONCTC_10         -0.1049      0.021     -4.959      0.000      -0.146      -0.063\n",
       "FONCTC_2          -0.1309      0.021     -6.132      0.000      -0.173      -0.089\n",
       "FONCTC_3          -0.1120      0.021     -5.244      0.000      -0.154      -0.070\n",
       "FONCTC_4          -0.1321      0.022     -6.125      0.000      -0.174      -0.090\n",
       "FONCTC_5          -0.0892      0.021     -4.204      0.000      -0.131      -0.048\n",
       "FONCTC_6          -0.0767      0.021     -3.615      0.000      -0.118      -0.035\n",
       "FONCTC_7          -0.0927      0.021     -4.364      0.000      -0.134      -0.051\n",
       "FONCTC_8          -0.1121      0.021     -5.277      0.000      -0.154      -0.070\n",
       "FONCTC_9          -0.0673      0.021     -3.187      0.001      -0.109      -0.026\n",
       "FONCTC_new_nan    -0.1042      0.021     -4.892      0.000      -0.146      -0.062\n",
       "TITC_1            -0.1543      0.047     -3.253      0.001      -0.247      -0.061\n",
       "TITC_2            -0.0205      0.047     -0.438      0.661      -0.112       0.071\n",
       "TITC_3            -0.3210      0.047     -6.817      0.000      -0.413      -0.229\n",
       "TITC_4            -0.2783      0.048     -5.773      0.000      -0.373      -0.184\n",
       "TITC_new_nan      -0.3664      0.052     -7.054      0.000      -0.468      -0.265\n",
       "TPP_1             -0.2413      0.058     -4.126      0.000      -0.356      -0.127\n",
       "TPP_2             -0.1174      0.058     -2.014      0.044      -0.232      -0.003\n",
       "TPP_3             -0.4647      0.058     -7.983      0.000      -0.579      -0.351\n",
       "TPP_new_nan       -0.3172      0.058     -5.442      0.000      -0.431      -0.203\n",
       "OCCREF_1          -0.4988      0.077     -6.452      0.000      -0.650      -0.347\n",
       "OCCREF_2          -0.4070      0.077     -5.295      0.000      -0.558      -0.256\n",
       "OCCREF_new_nan    -0.2347      0.077     -3.035      0.002      -0.386      -0.083\n",
       "QPRC_1            -0.0719      0.023     -3.065      0.002      -0.118      -0.026\n",
       "QPRC_2            -0.1093      0.023     -4.686      0.000      -0.155      -0.064\n",
       "QPRC_3            -0.1581      0.023     -6.733      0.000      -0.204      -0.112\n",
       "QPRC_4            -0.1146      0.023     -4.914      0.000      -0.160      -0.069\n",
       "QPRC_5            -0.1239      0.023     -5.342      0.000      -0.169      -0.078\n",
       "QPRC_6            -0.1343      0.024     -5.708      0.000      -0.180      -0.088\n",
       "QPRC_7            -0.0349      0.027     -1.307      0.191      -0.087       0.017\n",
       "QPRC_8            -0.1534      0.024     -6.500      0.000      -0.200      -0.107\n",
       "QPRC_9            -0.1094      0.023     -4.693      0.000      -0.155      -0.064\n",
       "QPRC_new_nan      -0.1307      0.028     -4.652      0.000      -0.186      -0.076\n",
       "TPPRED_1          -0.3033      0.079     -3.823      0.000      -0.459      -0.148\n",
       "TPPRED_2          -0.5800      0.079     -7.319      0.000      -0.735      -0.425\n",
       "TPPRED_new_nan    -0.2572      0.085     -3.033      0.002      -0.423      -0.091\n",
       "SECT_000          -0.0576      0.012     -4.936      0.000      -0.081      -0.035\n",
       "SECT_01            0.0204      0.414      0.049      0.961      -0.790       0.831\n",
       "SECT_010          -0.0868      0.034     -2.543      0.011      -0.154      -0.020\n",
       "SECT_011          -0.1322      0.009    -14.548      0.000      -0.150      -0.114\n",
       "SECT_012          -0.1126      0.012     -9.191      0.000      -0.137      -0.089\n",
       "SECT_013          -0.1977      0.023     -8.480      0.000      -0.243      -0.152\n",
       "SECT_014          -0.0933      0.010     -9.310      0.000      -0.113      -0.074\n",
       "SECT_015          -0.2211      0.034     -6.507      0.000      -0.288      -0.155\n",
       "SECT_016          -0.0879      0.027     -3.274      0.001      -0.141      -0.035\n",
       "SECT_017          -0.1018      0.292     -0.348      0.728      -0.674       0.471\n",
       "SECT_019          -0.1945      0.009    -22.378      0.000      -0.212      -0.177\n",
       "SECT_020          -0.0499      0.014     -3.552      0.000      -0.077      -0.022\n",
       "SECT_021          -0.0480      0.103     -0.464      0.643      -0.251       0.155\n",
       "SECT_022          -0.1087      0.046     -2.360      0.018      -0.199      -0.018\n",
       "SECT_024          -0.1049      0.032     -3.286      0.001      -0.167      -0.042\n",
       "SECT_030           0.2531      0.413      0.613      0.540      -0.557       1.063\n",
       "SECT_031           0.1255      0.065      1.917      0.055      -0.003       0.254\n",
       "SECT_032          -0.1046      0.068     -1.534      0.125      -0.238       0.029\n",
       "SECT_050           0.0476      0.019      2.485      0.013       0.010       0.085\n",
       "SECT_060          -0.1137      0.292     -0.389      0.697      -0.686       0.459\n",
       "SECT_061           0.5166      0.115      4.506      0.000       0.292       0.741\n",
       "SECT_070           0.4360      0.292      1.493      0.136      -0.137       1.009\n",
       "SECT_072           0.5160      0.156      3.300      0.001       0.210       0.822\n",
       "SECT_080           0.2409      0.239      1.010      0.313      -0.227       0.708\n",
       "SECT_081          -0.0640      0.029     -2.239      0.025      -0.120      -0.008\n",
       "SECT_089           0.0802      0.110      0.726      0.468      -0.136       0.297\n",
       "SECT_090          -0.2718      0.292     -0.930      0.352      -0.844       0.301\n",
       "SECT_091           0.6291      0.146      4.306      0.000       0.343       0.916\n",
       "SECT_099           0.3458      0.292      1.184      0.237      -0.227       0.918\n",
       "SECT_10           -0.1006      0.413     -0.244      0.808      -0.910       0.709\n",
       "SECT_100           0.0872      0.059      1.489      0.136      -0.028       0.202\n",
       "SECT_101          -0.0411      0.011     -3.774      0.000      -0.063      -0.020\n",
       "SECT_102          -0.0905      0.039     -2.337      0.019      -0.166      -0.015\n",
       "SECT_103          -0.0719      0.026     -2.749      0.006      -0.123      -0.021\n",
       "SECT_104           0.1331      0.076      1.762      0.078      -0.015       0.281\n",
       "SECT_105          -0.0477      0.018     -2.656      0.008      -0.083      -0.013\n",
       "SECT_106           0.0693      0.035      2.009      0.045       0.002       0.137\n",
       "SECT_107          -0.0636      0.010     -6.343      0.000      -0.083      -0.044\n",
       "SECT_108           0.0055      0.015      0.373      0.709      -0.024       0.035\n",
       "SECT_109           0.0252      0.030      0.830      0.407      -0.034       0.085\n",
       "SECT_110           0.0684      0.021      3.188      0.001       0.026       0.110\n",
       "SECT_111           0.4074      0.030     13.767      0.000       0.349       0.465\n",
       "SECT_112           0.0979      0.074      1.318      0.187      -0.048       0.244\n",
       "SECT_120           0.3331      0.076      4.411      0.000       0.185       0.481\n",
       "SECT_130           0.3536      0.100      3.527      0.000       0.157       0.550\n",
       "SECT_131          -0.0286      0.056     -0.512      0.609      -0.138       0.081\n",
       "SECT_132          -0.0220      0.050     -0.441      0.659      -0.120       0.076\n",
       "SECT_133          -0.0709      0.077     -0.923      0.356      -0.221       0.080\n",
       "SECT_139          -0.0759      0.024     -3.205      0.001      -0.122      -0.030\n",
       "SECT_140           0.0452      0.115      0.394      0.694      -0.180       0.270\n",
       "SECT_141          -0.0494      0.018     -2.748      0.006      -0.085      -0.014\n",
       "SECT_142          -0.0055      0.018     -0.313      0.754      -0.040       0.029\n",
       "SECT_143          -0.3077      0.050     -6.215      0.000      -0.405      -0.211\n",
       "SECT_144           0.2418      0.042      5.773      0.000       0.160       0.324\n",
       "SECT_145           0.0515      0.090      0.571      0.568      -0.125       0.228\n",
       "SECT_150           0.0380      0.083      0.459      0.646      -0.124       0.200\n",
       "SECT_151          -0.0536      0.007     -7.842      0.000      -0.067      -0.040\n",
       "SECT_152          -0.0323      0.017     -1.900      0.057      -0.066       0.001\n",
       "SECT_153          -0.0654      0.015     -4.367      0.000      -0.095      -0.036\n",
       "SECT_154           0.0692      0.044      1.585      0.113      -0.016       0.155\n",
       "SECT_155          -0.0018      0.010     -0.193      0.847      -0.021       0.017\n",
       "SECT_156           0.0605      0.021      2.863      0.004       0.019       0.102\n",
       "SECT_157           0.0182      0.016      1.123      0.262      -0.014       0.050\n",
       "SECT_158          -0.0762      0.006    -12.704      0.000      -0.088      -0.064\n",
       "SECT_159           0.0595      0.012      4.938      0.000       0.036       0.083\n",
       "SECT_160           0.2784      0.036      7.762      0.000       0.208       0.349\n",
       "SECT_161          -0.1474      0.031     -4.776      0.000      -0.208      -0.087\n",
       "SECT_162          -0.0699      0.019     -3.689      0.000      -0.107      -0.033\n",
       "SECT_170           0.0100      0.119      0.084      0.933      -0.224       0.244\n",
       "SECT_171          -0.0240      0.015     -1.584      0.113      -0.054       0.006\n",
       "SECT_172          -0.0320      0.013     -2.515      0.012      -0.057      -0.007\n",
       "SECT_173          -0.0220      0.018     -1.221      0.222      -0.057       0.013\n",
       "SECT_174          -0.0553      0.019     -2.923      0.003      -0.092      -0.018\n",
       "SECT_175          -0.0273      0.014     -1.909      0.056      -0.055       0.001\n",
       "SECT_176          -0.0513      0.042     -1.225      0.220      -0.133       0.031\n",
       "SECT_177          -0.0998      0.016     -6.304      0.000      -0.131      -0.069\n",
       "SECT_180          -0.5919      0.083     -7.157      0.000      -0.754      -0.430\n",
       "SECT_181          -0.0459      0.016     -2.797      0.005      -0.078      -0.014\n",
       "SECT_182          -0.0747      0.008     -9.451      0.000      -0.090      -0.059\n",
       "SECT_183          -0.0278      0.090     -0.308      0.758      -0.205       0.149\n",
       "SECT_190           0.2159      0.413      0.523      0.601      -0.594       1.026\n",
       "SECT_191          -0.0678      0.051     -1.340      0.180      -0.167       0.031\n",
       "SECT_192           0.0282      0.016      1.721      0.085      -0.004       0.060\n",
       "SECT_193          -0.0603      0.014     -4.178      0.000      -0.089      -0.032\n",
       "SECT_200           0.0502      0.078      0.642      0.521      -0.103       0.203\n",
       "SECT_201           0.0059      0.011      0.531      0.595      -0.016       0.028\n",
       "SECT_202           0.0347      0.021      1.626      0.104      -0.007       0.077\n",
       "SECT_203          -0.0588      0.012     -4.785      0.000      -0.083      -0.035\n",
       "SECT_204           0.0142      0.013      1.096      0.273      -0.011       0.040\n",
       "SECT_205          -0.0341      0.016     -2.120      0.034      -0.066      -0.003\n",
       "SECT_206          -0.0906      0.125     -0.727      0.467      -0.335       0.154\n",
       "SECT_210           0.2946      0.084      3.491      0.000       0.129       0.460\n",
       "SECT_211           0.1813      0.013     13.980      0.000       0.156       0.207\n",
       "SECT_212           0.0612      0.008      7.371      0.000       0.045       0.077\n",
       "SECT_220           0.1623      0.070      2.320      0.020       0.025       0.299\n",
       "SECT_221           0.0515      0.009      6.028      0.000       0.035       0.068\n",
       "SECT_222           0.0262      0.007      3.889      0.000       0.013       0.039\n",
       "SECT_223          -0.0007      0.041     -0.017      0.987      -0.082       0.081\n",
       "SECT_230           0.0571      0.100      0.569      0.569      -0.139       0.254\n",
       "SECT_231           0.0271      0.023      1.201      0.230      -0.017       0.071\n",
       "SECT_232           0.2388      0.020     11.907      0.000       0.199       0.278\n",
       "SECT_233           0.1260      0.020      6.341      0.000       0.087       0.165\n",
       "SECT_234          -0.1380      0.051     -2.707      0.007      -0.238      -0.038\n",
       "SECT_235           0.1252      0.049      2.546      0.011       0.029       0.222\n",
       "SECT_236          -0.0524      0.023     -2.288      0.022      -0.097      -0.008\n",
       "SECT_237          -0.0832      0.039     -2.155      0.031      -0.159      -0.008\n",
       "SECT_239           0.0313      0.048      0.655      0.513      -0.062       0.125\n",
       "SECT_240           0.2645      0.060      4.381      0.000       0.146       0.383\n",
       "SECT_241           0.1451      0.009     16.541      0.000       0.128       0.162\n",
       "SECT_242           0.0293      0.025      1.154      0.248      -0.020       0.079\n",
       "SECT_243           0.0331      0.017      1.959      0.050   -2.18e-05       0.066\n",
       "SECT_244           0.1757      0.008     21.683      0.000       0.160       0.192\n",
       "SECT_245           0.0845      0.010      8.577      0.000       0.065       0.104\n",
       "SECT_246           0.0862      0.013      6.617      0.000       0.061       0.112\n",
       "SECT_247           0.1012      0.054      1.862      0.063      -0.005       0.208\n",
       "SECT_250           0.1160      0.067      1.729      0.084      -0.016       0.248\n",
       "SECT_251           0.0343      0.008      4.205      0.000       0.018       0.050\n",
       "SECT_252           0.0131      0.007      1.943      0.052      -0.000       0.026\n",
       "SECT_253           0.0416      0.077      0.542      0.588      -0.109       0.192\n",
       "SECT_254           0.1216      0.059      2.077      0.038       0.007       0.236\n",
       "SECT_255          -0.0695      0.020     -3.486      0.000      -0.109      -0.030\n",
       "SECT_256          -0.0474      0.013     -3.512      0.000      -0.074      -0.021\n",
       "SECT_257          -0.0423      0.024     -1.784      0.074      -0.089       0.004\n",
       "SECT_259          -0.0367      0.020     -1.850      0.064      -0.076       0.002\n",
       "SECT_260           0.1660      0.107      1.556      0.120      -0.043       0.375\n",
       "SECT_261           0.0469      0.010      4.920      0.000       0.028       0.066\n",
       "SECT_262          -0.0168      0.014     -1.187      0.235      -0.045       0.011\n",
       "SECT_263          -0.0077      0.026     -0.303      0.762      -0.058       0.042\n",
       "SECT_264          -0.0534      0.028     -1.877      0.061      -0.109       0.002\n",
       "SECT_265           0.1928      0.014     13.915      0.000       0.166       0.220\n",
       "SECT_266           0.0084      0.013      0.660      0.509      -0.017       0.033\n",
       "SECT_267          -0.0468      0.020     -2.350      0.019      -0.086      -0.008\n",
       "SECT_268           0.0594      0.021      2.831      0.005       0.018       0.101\n",
       "SECT_270           0.0651      0.055      1.176      0.239      -0.043       0.174\n",
       "SECT_271           0.0825      0.010      8.194      0.000       0.063       0.102\n",
       "SECT_272          -0.0045      0.020     -0.230      0.818      -0.043       0.034\n",
       "SECT_273           0.0274      0.017      1.616      0.106      -0.006       0.061\n",
       "SECT_274           0.0704      0.013      5.238      0.000       0.044       0.097\n",
       "SECT_275           0.0249      0.011      2.293      0.022       0.004       0.046\n",
       "SECT_279          -0.0420      0.038     -1.099      0.272      -0.117       0.033\n",
       "SECT_280           0.1421      0.080      1.785      0.074      -0.014       0.298\n",
       "SECT_281          -0.0020      0.009     -0.215      0.830      -0.020       0.016\n",
       "SECT_282          -0.0200      0.013     -1.582      0.114      -0.045       0.005\n",
       "SECT_283           0.0210      0.009      2.390      0.017       0.004       0.038\n",
       "SECT_284           0.0253      0.011      2.392      0.017       0.005       0.046\n",
       "SECT_285           0.0240      0.007      3.460      0.001       0.010       0.038\n",
       "SECT_286           0.0257      0.012      2.104      0.035       0.002       0.050\n",
       "SECT_287          -0.0056      0.009     -0.597      0.551      -0.024       0.013\n",
       "SECT_289          -0.0076      0.021     -0.355      0.723      -0.049       0.034\n",
       "SECT_290           0.0736      0.069      1.068      0.285      -0.061       0.209\n",
       "SECT_291           0.0539      0.008      6.785      0.000       0.038       0.069\n",
       "SECT_292           0.0122      0.008      1.533      0.125      -0.003       0.028\n",
       "SECT_293          -0.0357      0.010     -3.484      0.000      -0.056      -0.016\n",
       "SECT_294           0.0430      0.019      2.312      0.021       0.007       0.079\n",
       "SECT_295           0.0537      0.010      5.469      0.000       0.034       0.073\n",
       "SECT_296           0.1581      0.020      7.795      0.000       0.118       0.198\n",
       "SECT_297           0.0017      0.014      0.118      0.906      -0.026       0.029\n",
       "SECT_300           0.1308      0.013      9.928      0.000       0.105       0.157\n",
       "SECT_301          -0.0471      0.028     -1.693      0.090      -0.102       0.007\n",
       "SECT_302           0.0430      0.036      1.199      0.231      -0.027       0.113\n",
       "SECT_303           0.1267      0.013      9.632      0.000       0.101       0.152\n",
       "SECT_304          -0.0120      0.110     -0.109      0.913      -0.229       0.205\n",
       "SECT_309          -0.0495      0.060     -0.819      0.413      -0.168       0.069\n",
       "SECT_310          -0.1167      0.020     -5.904      0.000      -0.155      -0.078\n",
       "SECT_311           0.0113      0.013      0.846      0.398      -0.015       0.038\n",
       "SECT_312           0.0587      0.010      6.065      0.000       0.040       0.078\n",
       "SECT_313           0.0539      0.016      3.444      0.001       0.023       0.085\n",
       "SECT_314           0.0771      0.028      2.726      0.006       0.022       0.133\n",
       "SECT_315           0.0150      0.019      0.803      0.422      -0.022       0.052\n",
       "SECT_316           0.0444      0.013      3.324      0.001       0.018       0.071\n",
       "SECT_320           0.6160      0.207      2.982      0.003       0.211       1.021\n",
       "SECT_321           0.0503      0.010      4.959      0.000       0.030       0.070\n",
       "SECT_322           0.0572      0.011      5.415      0.000       0.036       0.078\n",
       "SECT_323           0.0371      0.019      1.962      0.050    4.04e-05       0.074\n",
       "SECT_324          -0.0756      0.092     -0.818      0.414      -0.257       0.106\n",
       "SECT_325          -0.0104      0.020     -0.532      0.595      -0.049       0.028\n",
       "SECT_329          -0.0260      0.039     -0.667      0.505      -0.103       0.050\n",
       "SECT_330           0.1400      0.092      1.514      0.130      -0.041       0.321\n",
       "SECT_331          -0.0184      0.010     -1.794      0.073      -0.039       0.002\n",
       "SECT_332           0.0313      0.009      3.482      0.000       0.014       0.049\n",
       "SECT_333          -0.0092      0.017     -0.530      0.596      -0.043       0.025\n",
       "SECT_334           0.0582      0.018      3.241      0.001       0.023       0.093\n",
       "SECT_335           0.3177      0.019     16.783      0.000       0.281       0.355\n",
       "SECT_340          -0.1079      0.169     -0.640      0.522      -0.439       0.223\n",
       "SECT_341           0.0928      0.006     14.344      0.000       0.080       0.105\n",
       "SECT_342          -0.0167      0.014     -1.174      0.240      -0.044       0.011\n",
       "SECT_343           0.0679      0.007      9.173      0.000       0.053       0.082\n",
       "SECT_350           0.0100      0.059      0.168      0.866      -0.106       0.126\n",
       "SECT_351           0.0295      0.009      3.185      0.001       0.011       0.048\n",
       "SECT_352           0.0209      0.017      1.234      0.217      -0.012       0.054\n",
       "SECT_353           0.1248      0.008     14.735      0.000       0.108       0.141\n",
       "SECT_354          -0.0247      0.023     -1.094      0.274      -0.069       0.020\n",
       "SECT_355          -0.0005      0.066     -0.007      0.994      -0.130       0.129\n",
       "SECT_360          -0.0191      0.019     -0.987      0.323      -0.057       0.019\n",
       "SECT_361          -0.0550      0.008     -7.018      0.000      -0.070      -0.040\n",
       "SECT_362           0.1063      0.021      5.061      0.000       0.065       0.147\n",
       "SECT_363          -0.0053      0.052     -0.103      0.918      -0.107       0.096\n",
       "SECT_364           0.0086      0.028      0.309      0.757      -0.046       0.063\n",
       "SECT_365          -0.0873      0.027     -3.189      0.001      -0.141      -0.034\n",
       "SECT_366          -0.0453      0.016     -2.843      0.004      -0.076      -0.014\n",
       "SECT_370          -0.0544      0.028     -1.965      0.049      -0.109      -0.000\n",
       "SECT_371           0.0177      0.022      0.823      0.411      -0.024       0.060\n",
       "SECT_372          -0.0631      0.021     -2.994      0.003      -0.104      -0.022\n",
       "SECT_380           0.1704      0.131      1.304      0.192      -0.086       0.427\n",
       "SECT_381           0.0147      0.018      0.830      0.406      -0.020       0.049\n",
       "SECT_382           0.0393      0.025      1.584      0.113      -0.009       0.088\n",
       "SECT_383          -0.0533      0.023     -2.296      0.022      -0.099      -0.008\n",
       "SECT_390          -0.1928      0.061     -3.159      0.002      -0.312      -0.073\n",
       "SECT_400        1.105e-16   1.18e-15      0.094      0.925    -2.2e-15    2.42e-15\n",
       "SECT_401           0.1174      0.007     16.002      0.000       0.103       0.132\n",
       "SECT_402           0.1437      0.024      5.926      0.000       0.096       0.191\n",
       "SECT_403          -0.0166      0.021     -0.806      0.420      -0.057       0.024\n",
       "SECT_410           0.0369      0.012      3.129      0.002       0.014       0.060\n",
       "SECT_411           0.0033      0.028      0.115      0.909      -0.052       0.059\n",
       "SECT_412           0.0180      0.013      1.398      0.162      -0.007       0.043\n",
       "SECT_420           0.0892      0.068      1.311      0.190      -0.044       0.223\n",
       "SECT_421          -0.0068      0.015     -0.451      0.652      -0.037       0.023\n",
       "SECT_422          -0.0327      0.018     -1.828      0.068      -0.068       0.002\n",
       "SECT_429           0.0097      0.030      0.328      0.743      -0.048       0.068\n",
       "SECT_430           0.0843      0.028      3.001      0.003       0.029       0.139\n",
       "SECT_431           0.0123      0.015      0.806      0.420      -0.018       0.042\n",
       "SECT_432           0.0002      0.008      0.020      0.984      -0.016       0.016\n",
       "SECT_433          -0.0158      0.009     -1.801      0.072      -0.033       0.001\n",
       "SECT_439           0.0120      0.009      1.344      0.179      -0.005       0.029\n",
       "SECT_450          -0.0690      0.041     -1.697      0.090      -0.149       0.011\n",
       "SECT_451          -0.0133      0.007     -1.855      0.064      -0.027       0.001\n",
       "SECT_452           0.0274      0.005      5.734      0.000       0.018       0.037\n",
       "SECT_453           0.0013      0.005      0.242      0.809      -0.009       0.012\n",
       "SECT_454          -0.0049      0.006     -0.867      0.386      -0.016       0.006\n",
       "SECT_455           0.0241      0.051      0.469      0.639      -0.077       0.125\n",
       "SECT_460           0.0516      0.051      1.012      0.311      -0.048       0.152\n",
       "SECT_461          -0.0288      0.018     -1.640      0.101      -0.063       0.006\n",
       "SECT_462          -0.1054      0.019     -5.578      0.000      -0.142      -0.068\n",
       "SECT_463          -0.0711      0.011     -6.521      0.000      -0.092      -0.050\n",
       "SECT_464           0.0128      0.011      1.118      0.264      -0.010       0.035\n",
       "SECT_465           0.0048      0.019      0.259      0.796      -0.032       0.041\n",
       "SECT_466          -0.0522      0.010     -5.238      0.000      -0.072      -0.033\n",
       "SECT_467          -0.0860      0.010     -8.452      0.000      -0.106      -0.066\n",
       "SECT_469          -0.0817      0.027     -3.010      0.003      -0.135      -0.029\n",
       "SECT_470          -0.0880      0.029     -3.043      0.002      -0.145      -0.031\n",
       "SECT_471          -0.0813      0.007    -12.429      0.000      -0.094      -0.068\n",
       "SECT_472          -0.0832      0.014     -5.853      0.000      -0.111      -0.055\n",
       "SECT_473          -0.0744      0.025     -3.035      0.002      -0.122      -0.026\n",
       "SECT_474          -0.0400      0.021     -1.895      0.058      -0.081       0.001\n",
       "SECT_475          -0.0746      0.010     -7.409      0.000      -0.094      -0.055\n",
       "SECT_476          -0.0999      0.016     -6.320      0.000      -0.131      -0.069\n",
       "SECT_477          -0.0573      0.007     -7.947      0.000      -0.071      -0.043\n",
       "SECT_478          -0.2286      0.034     -6.638      0.000      -0.296      -0.161\n",
       "SECT_479          -0.1575      0.018     -8.845      0.000      -0.192      -0.123\n",
       "SECT_490           0.0016      0.046      0.034      0.973      -0.088       0.091\n",
       "SECT_491          -0.0208      0.012     -1.742      0.082      -0.044       0.003\n",
       "SECT_492           0.2643      0.084      3.130      0.002       0.099       0.430\n",
       "SECT_493          -0.0496      0.010     -4.966      0.000      -0.069      -0.030\n",
       "SECT_494          -0.0251      0.008     -3.012      0.003      -0.041      -0.009\n",
       "SECT_495           0.1511      0.065      2.338      0.019       0.024       0.278\n",
       "SECT_500          -0.1977      0.095     -2.084      0.037      -0.384      -0.012\n",
       "SECT_501          -0.0253      0.006     -3.996      0.000      -0.038      -0.013\n",
       "SECT_502          -0.0633      0.008     -7.691      0.000      -0.079      -0.047\n",
       "SECT_503          -0.0134      0.011     -1.274      0.203      -0.034       0.007\n",
       "SECT_504          -0.0733      0.025     -2.961      0.003      -0.122      -0.025\n",
       "SECT_505          -0.0675      0.016     -4.120      0.000      -0.100      -0.035\n",
       "SECT_510          -0.0100      0.047     -0.213      0.831      -0.102       0.082\n",
       "SECT_511           0.0967      0.009     10.391      0.000       0.078       0.115\n",
       "SECT_512          -0.0575      0.011     -5.241      0.000      -0.079      -0.036\n",
       "SECT_513          -0.0360      0.007     -5.307      0.000      -0.049      -0.023\n",
       "SECT_514           0.0230      0.007      3.303      0.001       0.009       0.037\n",
       "SECT_515           0.0029      0.006      0.451      0.652      -0.010       0.016\n",
       "SECT_516           0.0441      0.006      6.917      0.000       0.032       0.057\n",
       "SECT_517           0.0142      0.036      0.389      0.697      -0.057       0.086\n",
       "SECT_518          -0.0681      0.011     -6.309      0.000      -0.089      -0.047\n",
       "SECT_519          -0.0859      0.054     -1.580      0.114      -0.192       0.021\n",
       "SECT_520           0.0490      0.042      1.163      0.245      -0.034       0.131\n",
       "SECT_521          -0.1546      0.005    -31.434      0.000      -0.164      -0.145\n",
       "SECT_522          -0.0958      0.007    -13.001      0.000      -0.110      -0.081\n",
       "SECT_523          -0.1492      0.008    -19.338      0.000      -0.164      -0.134\n",
       "SECT_524          -0.1214      0.005    -24.242      0.000      -0.131      -0.112\n",
       "SECT_525          -0.2746      0.030     -9.139      0.000      -0.334      -0.216\n",
       "SECT_526          -0.2304      0.010    -22.085      0.000      -0.251      -0.210\n",
       "SECT_527          -0.1072      0.017     -6.442      0.000      -0.140      -0.075\n",
       "SECT_530          -0.2135      0.292     -0.731      0.465      -0.786       0.359\n",
       "SECT_531          -0.1195      0.010    -11.423      0.000      -0.140      -0.099\n",
       "SECT_532          -0.0094      0.050     -0.189      0.850      -0.107       0.088\n",
       "SECT_550           0.1942      0.068      2.854      0.004       0.061       0.328\n",
       "SECT_551          -0.0220      0.006     -3.397      0.001      -0.035      -0.009\n",
       "SECT_552          -0.1447      0.010    -13.799      0.000      -0.165      -0.124\n",
       "SECT_553          -0.0927      0.006    -15.702      0.000      -0.104      -0.081\n",
       "SECT_554          -0.1487      0.014    -10.830      0.000      -0.176      -0.122\n",
       "SECT_555          -0.1251      0.009    -14.487      0.000      -0.142      -0.108\n",
       "SECT_559          -0.1142      0.035     -3.263      0.001      -0.183      -0.046\n",
       "SECT_560           0.1312      0.045      2.933      0.003       0.044       0.219\n",
       "SECT_561          -0.0380      0.008     -5.055      0.000      -0.053      -0.023\n",
       "SECT_562          -0.0956      0.012     -7.912      0.000      -0.119      -0.072\n",
       "SECT_563          -0.0486      0.024     -2.068      0.039      -0.095      -0.003\n",
       "SECT_580           0.1017      0.078      1.300      0.194      -0.052       0.255\n",
       "SECT_581          -0.0358      0.018     -1.948      0.051      -0.072       0.000\n",
       "SECT_582          -0.0411      0.020     -2.068      0.039      -0.080      -0.002\n",
       "SECT_590           0.3797      0.095      3.991      0.000       0.193       0.566\n",
       "SECT_591           0.0621      0.021      2.943      0.003       0.021       0.103\n",
       "SECT_592          -0.1002      0.067     -1.492      0.136      -0.232       0.031\n",
       "SECT_600           0.1065      0.071      1.501      0.133      -0.033       0.246\n",
       "SECT_601           0.1117      0.007     17.057      0.000       0.099       0.125\n",
       "SECT_602           0.0476      0.005      8.968      0.000       0.037       0.058\n",
       "SECT_603           0.1075      0.050      2.170      0.030       0.010       0.204\n",
       "SECT_610          -0.1162      0.061     -1.904      0.057      -0.236       0.003\n",
       "SECT_611           0.1039      0.013      8.154      0.000       0.079       0.129\n",
       "SECT_612           0.0687      0.027      2.559      0.010       0.016       0.121\n",
       "SECT_613           0.1338      0.088      1.518      0.129      -0.039       0.307\n",
       "SECT_619          -0.0285      0.039     -0.731      0.465      -0.105       0.048\n",
       "SECT_620          -0.0691      0.009     -7.575      0.000      -0.087      -0.051\n",
       "SECT_621           0.3186      0.011     28.732      0.000       0.297       0.340\n",
       "SECT_622           0.2885      0.035      8.131      0.000       0.219       0.358\n",
       "SECT_623           0.3889      0.156      2.490      0.013       0.083       0.695\n",
       "SECT_630           0.1723      0.131      1.318      0.187      -0.084       0.428\n",
       "SECT_631           0.0003      0.009      0.032      0.974      -0.018       0.019\n",
       "SECT_632           0.0967      0.011      8.451      0.000       0.074       0.119\n",
       "SECT_633          -0.0706      0.012     -5.804      0.000      -0.094      -0.047\n",
       "SECT_634           0.0182      0.008      2.157      0.031       0.002       0.035\n",
       "SECT_639           0.0644      0.069      0.934      0.351      -0.071       0.200\n",
       "SECT_640           0.2143      0.065      3.276      0.001       0.086       0.343\n",
       "SECT_641          -0.0553      0.005    -10.732      0.000      -0.065      -0.045\n",
       "SECT_642           0.0531      0.006      8.293      0.000       0.041       0.066\n",
       "SECT_643           0.0886      0.036      2.477      0.013       0.018       0.159\n",
       "SECT_649           0.0372      0.025      1.496      0.135      -0.012       0.086\n",
       "SECT_650           0.2065      0.066      3.117      0.002       0.077       0.336\n",
       "SECT_651           0.0920      0.005     17.879      0.000       0.082       0.102\n",
       "SECT_652           0.1724      0.012     14.359      0.000       0.149       0.196\n",
       "SECT_653           0.0996      0.119      0.835      0.404      -0.134       0.333\n",
       "SECT_660           0.0613      0.007      9.004      0.000       0.048       0.075\n",
       "SECT_661          -0.0096      0.027     -0.355      0.722      -0.063       0.043\n",
       "SECT_662          -0.0376      0.015     -2.453      0.014      -0.068      -0.008\n",
       "SECT_663           0.1684      0.037      4.566      0.000       0.096       0.241\n",
       "SECT_670           0.2024      0.413      0.490      0.624      -0.607       1.012\n",
       "SECT_671           0.1499      0.018      8.183      0.000       0.114       0.186\n",
       "SECT_672          -0.0129      0.010     -1.229      0.219      -0.033       0.008\n",
       "SECT_680          -0.0948      0.063     -1.502      0.133      -0.219       0.029\n",
       "SECT_681          -0.0400      0.062     -0.642      0.521      -0.162       0.082\n",
       "SECT_682          -0.0631      0.010     -6.028      0.000      -0.084      -0.043\n",
       "SECT_683          -0.1242      0.013     -9.253      0.000      -0.150      -0.098\n",
       "SECT_690          -0.0865      0.088     -0.981      0.327      -0.259       0.086\n",
       "SECT_691           0.0018      0.014      0.128      0.898      -0.026       0.030\n",
       "SECT_692          -0.0287      0.012     -2.420      0.016      -0.052      -0.005\n",
       "SECT_700           0.0446      0.110      0.404      0.687      -0.172       0.261\n",
       "SECT_701           0.0023      0.010      0.238      0.812      -0.016       0.021\n",
       "SECT_702          -0.1031      0.007    -14.101      0.000      -0.117      -0.089\n",
       "SECT_703          -0.1574      0.008    -20.925      0.000      -0.172      -0.143\n",
       "SECT_710          -0.1073      0.131     -0.821      0.412      -0.363       0.149\n",
       "SECT_711          -0.0787      0.009     -9.137      0.000      -0.096      -0.062\n",
       "SECT_712          -0.0765      0.015     -5.253      0.000      -0.105      -0.048\n",
       "SECT_713           0.0222      0.017      1.329      0.184      -0.011       0.055\n",
       "SECT_714          -0.0505      0.018     -2.736      0.006      -0.087      -0.014\n",
       "SECT_720          -0.0110      0.048     -0.228      0.819      -0.105       0.083\n",
       "SECT_721           0.0102      0.008      1.329      0.184      -0.005       0.025\n",
       "SECT_722           0.0285      0.009      3.118      0.002       0.011       0.046\n",
       "SECT_723           0.0516      0.013      3.932      0.000       0.026       0.077\n",
       "SECT_724           0.0404      0.032      1.270      0.204      -0.022       0.103\n",
       "SECT_725          -0.0324      0.020     -1.598      0.110      -0.072       0.007\n",
       "SECT_726           0.1793      0.083      2.168      0.030       0.017       0.341\n",
       "SECT_730           0.0182      0.071      0.256      0.798      -0.121       0.157\n",
       "SECT_731           0.0070      0.008      0.921      0.357      -0.008       0.022\n",
       "SECT_732          -0.0759      0.014     -5.298      0.000      -0.104      -0.048\n",
       "SECT_740           0.0227      0.072      0.316      0.752      -0.118       0.164\n",
       "SECT_741           0.0231      0.005      4.282      0.000       0.013       0.034\n",
       "SECT_742           0.0066      0.007      0.962      0.336      -0.007       0.020\n",
       "SECT_743          -0.0354      0.012     -3.021      0.003      -0.058      -0.012\n",
       "SECT_744          -0.1510      0.009    -16.481      0.000      -0.169      -0.133\n",
       "SECT_745          -0.1069      0.009    -11.619      0.000      -0.125      -0.089\n",
       "SECT_746          -0.1878      0.009    -20.396      0.000      -0.206      -0.170\n",
       "SECT_747          -0.2221      0.007    -33.348      0.000      -0.235      -0.209\n",
       "SECT_748          -0.0598      0.007     -8.424      0.000      -0.074      -0.046\n",
       "SECT_749          -0.0524      0.028     -1.855      0.064      -0.108       0.003\n",
       "SECT_750           0.0414      0.030      1.387      0.166      -0.017       0.100\n",
       "SECT_751          -0.1349      0.004    -31.001      0.000      -0.143      -0.126\n",
       "SECT_752           0.0820      0.005     15.117      0.000       0.071       0.093\n",
       "SECT_753          -0.0115      0.006     -1.838      0.066      -0.024       0.001\n",
       "SECT_770          -0.0158      0.146     -0.108      0.914      -0.302       0.271\n",
       "SECT_771          -0.1205      0.031     -3.862      0.000      -0.182      -0.059\n",
       "SECT_772          -0.0909      0.025     -3.685      0.000      -0.139      -0.043\n",
       "SECT_773          -0.0372      0.024     -1.538      0.124      -0.085       0.010\n",
       "SECT_774          -0.0331      0.095     -0.349      0.727      -0.219       0.153\n",
       "SECT_780          -0.1137      0.107     -1.065      0.287      -0.323       0.096\n",
       "SECT_781          -0.1198      0.047     -2.569      0.010      -0.211      -0.028\n",
       "SECT_782          -0.1293      0.024     -5.413      0.000      -0.176      -0.082\n",
       "SECT_783          -0.1022      0.021     -4.918      0.000      -0.143      -0.061\n",
       "SECT_790          -0.0274      0.146     -0.188      0.851      -0.314       0.259\n",
       "SECT_791          -0.1330      0.025     -5.293      0.000      -0.182      -0.084\n",
       "SECT_799          -0.0625      0.039     -1.614      0.107      -0.138       0.013\n",
       "SECT_800          -0.1487      0.046     -3.228      0.001      -0.239      -0.058\n",
       "SECT_801          -0.1279      0.005    -25.014      0.000      -0.138      -0.118\n",
       "SECT_802          -0.1428      0.005    -30.006      0.000      -0.152      -0.133\n",
       "SECT_803          -0.1452      0.007    -21.640      0.000      -0.158      -0.132\n",
       "SECT_804          -0.1824      0.006    -29.008      0.000      -0.195      -0.170\n",
       "SECT_810           0.0048      0.051      0.095      0.924      -0.095       0.104\n",
       "SECT_811          -0.0726      0.030     -2.410      0.016      -0.132      -0.014\n",
       "SECT_812          -0.0321      0.009     -3.421      0.001      -0.050      -0.014\n",
       "SECT_813          -0.0883      0.015     -5.704      0.000      -0.119      -0.058\n",
       "SECT_820           0.0716      0.092      0.775      0.439      -0.110       0.253\n",
       "SECT_821          -0.0865      0.020     -4.357      0.000      -0.125      -0.048\n",
       "SECT_822          -0.1404      0.022     -6.440      0.000      -0.183      -0.098\n",
       "SECT_823          -0.0644      0.043     -1.482      0.138      -0.150       0.021\n",
       "SECT_829          -0.0713      0.014     -5.020      0.000      -0.099      -0.043\n",
       "SECT_840          -0.0631      0.045     -1.401      0.161      -0.151       0.025\n",
       "SECT_841          -0.1049      0.006    -18.108      0.000      -0.116      -0.094\n",
       "SECT_842          -0.0899      0.008    -11.770      0.000      -0.105      -0.075\n",
       "SECT_843          -0.0498      0.011     -4.461      0.000      -0.072      -0.028\n",
       "SECT_850          -0.1426      0.023     -6.261      0.000      -0.187      -0.098\n",
       "SECT_851          -0.0256      0.004     -5.904      0.000      -0.034      -0.017\n",
       "SECT_852          -0.1665      0.007    -22.634      0.000      -0.181      -0.152\n",
       "SECT_853          -0.2022      0.004    -47.547      0.000      -0.211      -0.194\n",
       "SECT_854          -0.1889      0.010    -18.562      0.000      -0.209      -0.169\n",
       "SECT_855          -0.2125      0.010    -21.771      0.000      -0.232      -0.193\n",
       "SECT_856          -0.3499      0.081     -4.313      0.000      -0.509      -0.191\n",
       "SECT_860           0.0395      0.037      1.073      0.283      -0.033       0.112\n",
       "SECT_861          -0.0255      0.007     -3.724      0.000      -0.039      -0.012\n",
       "SECT_862           0.0025      0.011      0.230      0.818      -0.019       0.024\n",
       "SECT_869          -0.0515      0.011     -4.735      0.000      -0.073      -0.030\n",
       "SECT_870           0.0943      0.046      2.046      0.041       0.004       0.185\n",
       "SECT_871          -0.0178      0.007     -2.399      0.016      -0.032      -0.003\n",
       "SECT_872          -0.1098      0.015     -7.532      0.000      -0.138      -0.081\n",
       "SECT_873          -0.0249      0.016     -1.586      0.113      -0.056       0.006\n",
       "SECT_879          -0.0948      0.013     -7.046      0.000      -0.121      -0.068\n",
       "SECT_880           0.0179      0.032      0.551      0.581      -0.046       0.082\n",
       "SECT_881          -0.0787      0.007    -11.370      0.000      -0.092      -0.065\n",
       "SECT_889          -0.0846      0.007    -12.681      0.000      -0.098      -0.071\n",
       "SECT_900          -0.0463      0.009     -5.325      0.000      -0.063      -0.029\n",
       "SECT_910          -0.1418      0.017     -8.437      0.000      -0.175      -0.109\n",
       "SECT_911          -0.0702      0.010     -6.859      0.000      -0.090      -0.050\n",
       "SECT_912          -0.0542      0.024     -2.230      0.026      -0.102      -0.007\n",
       "SECT_913          -0.2360      0.006    -37.956      0.000      -0.248      -0.224\n",
       "SECT_920           0.0914      0.030      3.065      0.002       0.033       0.150\n",
       "SECT_921           0.1419      0.014      9.889      0.000       0.114       0.170\n",
       "SECT_922           0.1457      0.014     10.159      0.000       0.118       0.174\n",
       "SECT_923          -0.2327      0.009    -25.766      0.000      -0.250      -0.215\n",
       "SECT_924           0.1147      0.030      3.835      0.000       0.056       0.173\n",
       "SECT_925          -0.1575      0.012    -13.448      0.000      -0.181      -0.135\n",
       "SECT_926          -0.2134      0.009    -24.444      0.000      -0.231      -0.196\n",
       "SECT_927          -0.0541      0.016     -3.489      0.000      -0.085      -0.024\n",
       "SECT_930           0.0064      0.007      0.920      0.357      -0.007       0.020\n",
       "SECT_931          -0.1616      0.014    -11.756      0.000      -0.189      -0.135\n",
       "SECT_932          -0.1260      0.018     -6.978      0.000      -0.161      -0.091\n",
       "SECT_940          -0.1271      0.078     -1.625      0.104      -0.280       0.026\n",
       "SECT_941          -0.1107      0.018     -6.266      0.000      -0.145      -0.076\n",
       "SECT_942           0.0689      0.025      2.802      0.005       0.021       0.117\n",
       "SECT_949          -0.1386      0.009    -14.905      0.000      -0.157      -0.120\n",
       "SECT_950          -0.6377      0.005   -123.508      0.000      -0.648      -0.628\n",
       "SECT_951          -0.1388      0.044     -3.138      0.002      -0.225      -0.052\n",
       "SECT_952          -0.1145      0.034     -3.419      0.001      -0.180      -0.049\n",
       "SECT_960           0.0387      0.010      3.719      0.000       0.018       0.059\n",
       "SECT_970          -0.0172      0.010     -1.658      0.097      -0.037       0.003\n",
       "SECT_981           0.0029      0.058      0.050      0.960      -0.111       0.117\n",
       "SECT_982          -0.0011      0.293     -0.004      0.997      -0.575       0.573\n",
       "SECT_990           0.3744      0.018     20.614      0.000       0.339       0.410\n",
       "SECT_nan          -0.0406      0.004     -9.821      0.000      -0.049      -0.032\n",
       "TRIM_1            -0.9922      0.048    -20.710      0.000      -1.086      -0.898\n",
       "TRIM_2            -0.9874      0.048    -20.608      0.000      -1.081      -0.893\n",
       "TRIM_3            -0.9770      0.048    -20.393      0.000      -1.071      -0.883\n",
       "TRIM_4            -0.9799      0.048    -20.451      0.000      -1.074      -0.886\n",
       "TRIM_new_nan       2.7960      0.046     60.663      0.000       2.706       2.886\n",
       "CONSTANT          -1.1405      0.230     -4.954      0.000      -1.592      -0.689\n",
       "AGE2              -0.0003   3.33e-06   -102.615      0.000      -0.000      -0.000\n",
       "==============================================================================\n",
       "Omnibus:                   977970.113   Durbin-Watson:                   1.843\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):        143253683.463\n",
       "Skew:                          -3.644   Prob(JB):                         0.00\n",
       "Kurtosis:                      58.057   Cond. No.                     2.72e+16\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 2.81e-20. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = mx_train\n",
    "Y = mylog_train\n",
    "\n",
    "mcmodel = sm.OLS(Y, X).fit()\n",
    "predictions = mcmodel.predict(X)\n",
    "\n",
    "mcmodel.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.4465930369100526, 'Variance du prédicteur du log-salaire': 0.2903118586477443, 'Variance des résidus du log-salaire': 0.16282449369718432, 'R2 log-salaire': 0.6354074509899301, 'Variance totale salaire': 2408042.0678540873, 'Variance du prédicteur du salaire': 615615.6863518762, 'Variance des résidus du salaire': 1739251.6822185977, 'R2 salaire': 0.27773201912185785}\n",
      "{'Variance totale log-salaire': 0.40021614820665274, 'Variance du prédicteur du log-salaire': 0.27332341520320613, 'Variance des résidus du log-salaire': 0.14483828571777987, 'R2 log-salaire': 0.6380998458788019, 'Variance totale salaire': 2664478.2905998337, 'Variance du prédicteur du salaire': 718165.12170917, 'Variance des résidus du salaire': 1894081.2280938276, 'R2 salaire': 0.28913617544715386}\n",
      "{'Variance totale log-salaire': 0.40804679088513135, 'Variance du prédicteur du log-salaire': 0.27962247970249615, 'Variance des résidus du log-salaire': 0.13901404259236066, 'R2 log-salaire': 0.6593183779467725, 'Variance totale salaire': 2206705.372688974, 'Variance du prédicteur du salaire': 733669.8063236984, 'Variance des résidus du salaire': 1365767.8270363694, 'R2 salaire': 0.38108283781802854}\n",
      "{'Variance totale log-salaire': 0.40136757645660415, 'Variance du prédicteur du log-salaire': 0.28363084934644733, 'Variance des résidus du log-salaire': 0.12628897114878285, 'R2 log-salaire': 0.6853533305711923, 'Variance totale salaire': 3176474.955046984, 'Variance du prédicteur du salaire': 751700.85732087, 'Variance des résidus du salaire': 2224942.345680087, 'R2 salaire': 0.29955615039716965}\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x2575117af88>"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mcperf = perfestim(df=mtest, model=mcmodel, predvar=predicted)\n",
    "print(mcperf[1])\n",
    "mcperf18 = perfestim(df=mtest18, model=mcmodel, predvar=predicted)\n",
    "mcperf18t1 = perfestim(df=mtest18.loc[mtest18.TRIM_1==1,], model=mcmodel, predvar=predicted)\n",
    "mcperf18t1r1 = perfestim(df=mtest18.loc[(mtest18.TRIM_1==1)&(mtest18.RGA_1==1),], model=mcmodel, predvar=predicted)\n",
    "print(mcperf18[1])\n",
    "print(mcperf18t1[1])\n",
    "print(mcperf18t1r1[1])\n",
    "df18 = mcperf18[0]\n",
    "plt.hexbin(df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),predicted], \n",
    "           df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(Mincerc)\n",
    "del(mcdata)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Mincer \"léger\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincercold = ['NAIM','ANNEE','LHHC','AGE','EXPEPOT','SALMEERED','DDIPL','TRIM','RGA']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1531841, 9)\n",
      "replacing nan in...\n",
      "numerical column...\n",
      "NAIM\n",
      "ANNEE\n",
      "LHHC\n",
      "AGE\n",
      "EXPEPOT\n",
      "SALMEERED\n",
      "categorical column...\n",
      "DDIPL\n",
      "TRIM\n",
      "RGA\n",
      "(1531841, 13)\n",
      "There were 13 columns before encoding categorical features\n",
      "OneHotEncoding column...\n",
      "DDIPL\n",
      "TRIM\n",
      "RGA\n",
      "There are 29 columns after encoding categorical features\n"
     ]
    }
   ],
   "source": [
    "# Mincer avec variables type SALRED\n",
    "mddata = copy.deepcopy(datasave2.loc[:,Mincercold])\n",
    "print(mddata.shape)\n",
    "objl = [i for i in mddata.columns if (i not in numl)]\n",
    "objl = objl+['DDIPL']\n",
    "mddata_nonan = replace_nans(mddata, numl, objl)\n",
    "print(mddata_nonan.shape)\n",
    "print('There were {} columns before encoding categorical features'.format(mddata_nonan.shape[1]))\n",
    "Mincerd = oneHotEncode(mddata_nonan, objl)\n",
    "print('There are {} columns after encoding categorical features'.format(Mincerd.shape[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(mddata)\n",
    "del(mddata_nonan)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [],
   "source": [
    "Mincerd[['SALMET']] = datasave2.loc[:,['SALMET']]\n",
    "Mincerd[['CONSTANT']]=1\n",
    "Mincerd[['AGE2']]=Mincerd[['AGE']]*Mincerd[['AGE']]\n",
    "\n",
    "mddata= Mincerd.loc[Mincerd[\"SALMEERED_nan\"]==0,:].drop(columns=[\"SALMET\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [],
   "source": [
    "traincols = [i for i in mddata.columns if (i not in [\"SALMEERED\",'NAIM','NAIM_nan','TRIM_1','TRIM_2','TRIM_3','TRIM_4',\n",
    "                                                     'TRIM_new_nan','RGA_1','RGA_2','RGA_3','RGA_4','RGA_5','RGA_6',\n",
    "                                                     'RGA_new_nan'])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [],
   "source": [
    "mtrain = mddata.loc[(mddata[\"NAIM\"]!=3)&(mddata[\"ANNEE\"]<2018),:]\n",
    "my_train = mtrain.loc[:,\"SALMEERED\"]\n",
    "mx_train = mtrain.loc[:,traincols]\n",
    "mtest = mddata.loc[(mddata[\"NAIM\"]==3)|(mddata[\"ANNEE\"]==2018),:]\n",
    "mtest18 = mddata.loc[mddata[\"ANNEE\"]==2018,:]\n",
    "mylog_train = np.log(my_train+1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>        <td>SALMEERED</td>    <th>  R-squared:         </th>  <td>   0.393</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.393</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>5.558e+04</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 04 Oct 2022</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>18:40:06</td>     <th>  Log-Likelihood:    </th> <td>-8.6095e+05</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>1114668</td>     <th>  AIC:               </th>  <td>1.722e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>1114654</td>     <th>  BIC:               </th>  <td>1.722e+06</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    13</td>      <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>     \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ANNEE</th>         <td>    0.0011</td> <td>    0.000</td> <td>    6.175</td> <td> 0.000</td> <td>    0.001</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC</th>          <td>    0.9567</td> <td>    0.002</td> <td>  510.669</td> <td> 0.000</td> <td>    0.953</td> <td>    0.960</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE</th>           <td>    0.0685</td> <td>    0.000</td> <td>  217.288</td> <td> 0.000</td> <td>    0.068</td> <td>    0.069</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT</th>       <td>   -0.0007</td> <td>    0.000</td> <td>   -7.187</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LHHC_nan</th>      <td>    5.3990</td> <td>    0.011</td> <td>  484.178</td> <td> 0.000</td> <td>    5.377</td> <td>    5.421</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EXPEPOT_nan</th>   <td>   -0.0891</td> <td>    0.003</td> <td>  -30.034</td> <td> 0.000</td> <td>   -0.095</td> <td>   -0.083</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>SALMEERED_nan</th> <td> 4.697e-15</td> <td> 2.69e-16</td> <td>   17.453</td> <td> 0.000</td> <td> 4.17e-15</td> <td> 5.22e-15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_1</th>       <td>    0.3935</td> <td>    0.043</td> <td>    9.121</td> <td> 0.000</td> <td>    0.309</td> <td>    0.478</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_3</th>       <td>    0.1993</td> <td>    0.043</td> <td>    4.622</td> <td> 0.000</td> <td>    0.115</td> <td>    0.284</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_4</th>       <td>    0.0454</td> <td>    0.043</td> <td>    1.052</td> <td> 0.293</td> <td>   -0.039</td> <td>    0.130</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_5</th>       <td>   -0.0735</td> <td>    0.043</td> <td>   -1.707</td> <td> 0.088</td> <td>   -0.158</td> <td>    0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_6</th>       <td>   -0.0954</td> <td>    0.043</td> <td>   -2.214</td> <td> 0.027</td> <td>   -0.180</td> <td>   -0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_7</th>       <td>   -0.2905</td> <td>    0.043</td> <td>   -6.753</td> <td> 0.000</td> <td>   -0.375</td> <td>   -0.206</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DDIPL_new_nan</th> <td>    0.0228</td> <td>    0.047</td> <td>    0.481</td> <td> 0.631</td> <td>   -0.070</td> <td>    0.116</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONSTANT</th>      <td>    0.2015</td> <td>    0.302</td> <td>    0.667</td> <td> 0.505</td> <td>   -0.391</td> <td>    0.794</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AGE2</th>          <td>   -0.0007</td> <td> 3.92e-06</td> <td> -171.181</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>965218.424</td> <th>  Durbin-Watson:     </th>   <td>   1.851</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>   <td> 0.000</td>   <th>  Jarque-Bera (JB):  </th> <td>90225956.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>            <td>-3.721</td>   <th>  Prob(JB):          </th>   <td>    0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>        <td>46.443</td>   <th>  Cond. No.          </th>   <td>6.58e+19</td>  \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 1.9e-27. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:              SALMEERED   R-squared:                       0.393\n",
       "Model:                            OLS   Adj. R-squared:                  0.393\n",
       "Method:                 Least Squares   F-statistic:                 5.558e+04\n",
       "Date:                Tue, 04 Oct 2022   Prob (F-statistic):               0.00\n",
       "Time:                        18:40:06   Log-Likelihood:            -8.6095e+05\n",
       "No. Observations:             1114668   AIC:                         1.722e+06\n",
       "Df Residuals:                 1114654   BIC:                         1.722e+06\n",
       "Df Model:                          13                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=================================================================================\n",
       "                    coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------\n",
       "ANNEE             0.0011      0.000      6.175      0.000       0.001       0.001\n",
       "LHHC              0.9567      0.002    510.669      0.000       0.953       0.960\n",
       "AGE               0.0685      0.000    217.288      0.000       0.068       0.069\n",
       "EXPEPOT          -0.0007      0.000     -7.187      0.000      -0.001      -0.001\n",
       "LHHC_nan          5.3990      0.011    484.178      0.000       5.377       5.421\n",
       "EXPEPOT_nan      -0.0891      0.003    -30.034      0.000      -0.095      -0.083\n",
       "SALMEERED_nan  4.697e-15   2.69e-16     17.453      0.000    4.17e-15    5.22e-15\n",
       "DDIPL_1           0.3935      0.043      9.121      0.000       0.309       0.478\n",
       "DDIPL_3           0.1993      0.043      4.622      0.000       0.115       0.284\n",
       "DDIPL_4           0.0454      0.043      1.052      0.293      -0.039       0.130\n",
       "DDIPL_5          -0.0735      0.043     -1.707      0.088      -0.158       0.011\n",
       "DDIPL_6          -0.0954      0.043     -2.214      0.027      -0.180      -0.011\n",
       "DDIPL_7          -0.2905      0.043     -6.753      0.000      -0.375      -0.206\n",
       "DDIPL_new_nan     0.0228      0.047      0.481      0.631      -0.070       0.116\n",
       "CONSTANT          0.2015      0.302      0.667      0.505      -0.391       0.794\n",
       "AGE2             -0.0007   3.92e-06   -171.181      0.000      -0.001      -0.001\n",
       "==============================================================================\n",
       "Omnibus:                   965218.424   Durbin-Watson:                   1.851\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):         90225956.042\n",
       "Skew:                          -3.721   Prob(JB):                         0.00\n",
       "Kurtosis:                      46.443   Cond. No.                     6.58e+19\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 1.9e-27. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = mx_train\n",
    "Y = mylog_train\n",
    "\n",
    "mdmodel = sm.OLS(Y, X).fit()\n",
    "predictions = mdmodel.predict(X)\n",
    "\n",
    "mdmodel.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'Variance totale log-salaire': 0.4465930369100526, 'Variance du prédicteur du log-salaire': 0.209360367951857, 'Variance des résidus du log-salaire': 0.24576248662783376, 'R2 log-salaire': 0.44969476387664264, 'Variance totale salaire': 2408042.0678540873, 'Variance du prédicteur du salaire': 425455.0377179433, 'Variance des résidus du salaire': 1913238.8004861288, 'R2 salaire': 0.2054794947203309}\n",
      "{'Variance totale log-salaire': 0.40021614820665274, 'Variance du prédicteur du log-salaire': 0.23517893046034002, 'Variance des résidus du log-salaire': 0.19247995504979745, 'R2 log-salaire': 0.5190599981727626, 'Variance totale salaire': 2664478.2905998337, 'Variance du prédicteur du salaire': 496887.9030866147, 'Variance des résidus du salaire': 2092421.2417191174, 'R2 salaire': 0.21469758297483954}\n",
      "{'Variance totale log-salaire': 0.40804679088513135, 'Variance du prédicteur du log-salaire': 0.24392279885494106, 'Variance des résidus du log-salaire': 0.1897353209308526, 'R2 log-salaire': 0.5350157747368127, 'Variance totale salaire': 2206705.372688974, 'Variance du prédicteur du salaire': 508877.31546199427, 'Variance des résidus du salaire': 1590246.1904727663, 'R2 salaire': 0.2793572671031399}\n",
      "{'Variance totale log-salaire': 0.40136757645660415, 'Variance du prédicteur du log-salaire': 0.24797557332565107, 'Variance des résidus du log-salaire': 0.18347931975760967, 'R2 log-salaire': 0.5428646195653837, 'Variance totale salaire': 3176474.955046984, 'Variance du prédicteur du salaire': 519436.68076909025, 'Variance des résidus du salaire': 2496227.452034815, 'R2 salaire': 0.21415169728675132}\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PolyCollection at 0x2577b515488>"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mdperf = perfestim(df=mtest.loc[:,traincols+[\"SALMEERED\"]], model=mdmodel, predvar=predicted)\n",
    "print(mdperf[1])\n",
    "mdperf18 = perfestim(df=mtest18.loc[:,traincols+[\"SALMEERED\"]], model=mdmodel, predvar=predicted)\n",
    "mdperf18t1 = perfestim(df=mtest18.loc[mtest18.TRIM_1==1,traincols+[\"SALMEERED\"]], model=mdmodel, predvar=predicted)\n",
    "mdperf18t1r1 = perfestim(df=mtest18.loc[(mtest18.TRIM_1==1)&(mtest18.RGA_1==1),traincols+[\"SALMEERED\"]], model=mdmodel, predvar=predicted)\n",
    "print(mdperf18[1])\n",
    "print(mdperf18t1[1])\n",
    "print(mdperf18t1r1[1])\n",
    "df18 = mdperf18[0]\n",
    "plt.hexbin(df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),predicted], \n",
    "           df18.loc[(df18[predicted]<3000)&(df18[\"SALPRED\"]<5000),\"SALPRED\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(Mincerd)\n",
    "del(mddata)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 395,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     datasave2:  7.9 GiB\n",
      "                            df:  2.3 GiB\n",
      "                      train_df:  1.4 GiB\n",
      "                       test_df: 142.5 MiB\n",
      "                         mtest: 119.8 MiB\n",
      "                       x_train: 92.5 MiB\n",
      "                           t18: 66.9 MiB\n",
      "                     test18_df: 66.1 MiB\n",
      "                      pred3_df: 37.4 MiB\n",
      "                       mtest18: 37.0 MiB\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "def sizeof_fmt(num, suffix='B'):\n",
    "    ''' by Fred Cirera,  https://stackoverflow.com/a/1094933/1870254, modified'''\n",
    "    for unit in ['','Ki','Mi','Gi','Ti','Pi','Ei','Zi']:\n",
    "        if abs(num) < 1024.0:\n",
    "            return \"%3.1f %s%s\" % (num, unit, suffix)\n",
    "        num /= 1024.0\n",
    "    return \"%.1f %s%s\" % (num, 'Yi', suffix)\n",
    "\n",
    "for name, size in sorted(((name, sys.getsizeof(value)) for name, value in locals().items()),\n",
    "                         key= lambda x: -x[1])[:10]:\n",
    "    print(\"{:>30}: {:>8}\".format(name, sizeof_fmt(size)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 394,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 394,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del(pred4_df)\n",
    "gc.collect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
